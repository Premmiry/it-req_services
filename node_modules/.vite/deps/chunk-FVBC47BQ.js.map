{
  "version": 3,
  "sources": ["../../@mui/x-license/encoding/md5.js", "../../@mui/x-license/encoding/base64.js", "../../@mui/x-license/utils/licenseScope.js", "../../@mui/x-license/utils/licensingModel.js", "../../@mui/x-license/utils/licenseErrorMessageUtils.js", "../../@mui/x-license/utils/licenseInfo.js", "../../@mui/x-license/utils/licenseStatus.js", "../../@mui/x-license/verifyLicense/verifyLicense.js", "../../@mui/x-license/useLicenseVerifier/useLicenseVerifier.js", "../../@mui/x-license/Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js", "../../@mui/x-license/Watermark/Watermark.js", "../../@mui/x-license/Unstable_LicenseInfoProvider/LicenseInfoProvider.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/DataGrid.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/DataGridPro.js", "../../@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js", "../../@mui/x-data-grid-pro/esm/hooks/features/infiniteLoader/useGridInfiniteLoader.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnReorder/useGridColumnReorder.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnReorder/columnReorderSelector.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/useGridTreeData.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/gridTreeDataGroupColDef.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/useGridTreeDataPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/gridTreeDataUtils.js", "../../@mui/x-data-grid-pro/esm/components/GridTreeDataGroupingCell.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridRootProps.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridApiContext.js", "../../@mui/x-data-grid-pro/esm/components/GridColumnMenuPinningItem.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanelToggleCell.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/gridDetailPanelSelector.js", "../../@mui/x-data-grid-pro/esm/material/icons.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterMenuContainer.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterCell.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterClearButton.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterMenu.js", "../../@mui/x-data-grid-pro/esm/utils/tree/utils.js", "../../@mui/x-data-grid-pro/esm/utils/tree/insertDataRowInTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/createRowTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/sortRowTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/updateRowTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/removeDataRowFromTree.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnPinning/useGridColumnPinning.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnPinning/useGridColumnPinningPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/useGridDetailPanel.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/gridDetailPanelToggleColDef.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/useGridRowReorder.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/gridRowReorderColDef.js", "../../@mui/x-data-grid-pro/esm/components/GridRowReorderCell.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/useGridRowReorderPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoader.js", "../../@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowPinning/useGridRowPinning.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowPinning/useGridRowPinningPreProcessors.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/useDataGridProComponent.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/useDataGridProProps.js", "../../@mui/x-data-grid-pro/esm/constants/dataGridProDefaultSlotsComponents.js", "../../@mui/x-data-grid-pro/esm/components/GridProColumnMenu.js", "../../@mui/x-data-grid-pro/esm/components/GridColumnHeaders.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnHeaders/useGridColumnHeaders.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanels.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridPrivateApiContext.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanel.js", "../../@mui/x-data-grid-pro/esm/components/GridPinnedRows.js", "../../@mui/x-data-grid-pro/esm/material/index.js", "../../@mui/x-data-grid-pro/esm/utils/releaseInfo.js", "../../@mui/x-data-grid-pro/esm/internals/propValidation.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridApiRef.js", "../../@mui/x-data-grid-pro/esm/index.js"],
  "sourcesContent": ["/* eslint-disable */\r\n// See \"precomputation\" in notes\r\nconst k = [];\r\nlet i = 0;\r\nfor (; i < 64;) {\r\n  k[i] = 0 | Math.sin(++i % Math.PI) * 4294967296;\r\n  // k[i] = 0 | (Math.abs(Math.sin(++i)) * 4294967296);\r\n}\r\nexport function md5(s) {\r\n  const words = [];\r\n  let b,\r\n    c,\r\n    d,\r\n    j = unescape(encodeURI(s)) + '\\x80',\r\n    a = j.length;\r\n  const h = [b = 0x67452301, c = 0xefcdab89, ~b, ~c];\r\n  s = --a / 4 + 2 | 15;\r\n\r\n  // See \"Length bits\" in notes\r\n  words[--s] = a * 8;\r\n  for (; ~a;) {\r\n    // a !== -1\r\n    words[a >> 2] |= j.charCodeAt(a) << 8 * a--;\r\n  }\r\n  for (i = j = 0; i < s; i += 16) {\r\n    a = h;\r\n    for (; j < 64; a = [d = a[3], b + ((d = a[0] + [b & c | ~b & d, d & b | ~d & c, b ^ c ^ d, c ^ (b | ~d)][a = j >> 4] + k[j] + ~~words[i | [j, 5 * j + 1, 3 * j + 5, 7 * j][a] & 15]) << (a = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * a + j++ % 4]) | d >>> -a), b, c]) {\r\n      b = a[1] | 0;\r\n      c = a[2];\r\n    }\r\n\r\n    // See \"Integer safety\" in notes\r\n    for (j = 4; j;) h[--j] += a[j];\r\n\r\n    // j === 0\r\n  }\r\n  for (s = ''; j < 32;) {\r\n    s += (h[j >> 3] >> (1 ^ j++) * 4 & 15).toString(16);\r\n    // s += ((h[j >> 3] >> (4 ^ 4 * j++)) & 15).toString(16);\r\n  }\r\n  return s;\r\n}", "/* eslint-disable */\r\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nfunction utf8Encode(str) {\r\n  for (let n = 0; n < str.length; n++) {\r\n    const c = str.charCodeAt(n);\r\n    if (c >= 128) {\r\n      throw new Error('ASCII only support');\r\n    }\r\n  }\r\n  return str;\r\n}\r\nexport const base64Decode = input => {\r\n  let output = '';\r\n  let chr1, chr2, chr3;\r\n  let enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  while (i < input.length) {\r\n    enc1 = _keyStr.indexOf(input.charAt(i++));\r\n    enc2 = _keyStr.indexOf(input.charAt(i++));\r\n    enc3 = _keyStr.indexOf(input.charAt(i++));\r\n    enc4 = _keyStr.indexOf(input.charAt(i++));\r\n    chr1 = enc1 << 2 | enc2 >> 4;\r\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\r\n    chr3 = (enc3 & 3) << 6 | enc4;\r\n    output = output + String.fromCharCode(chr1);\r\n    if (enc3 != 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 != 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  }\r\n  return output;\r\n};\r\nexport const base64Encode = input => {\r\n  let output = '';\r\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n  input = utf8Encode(input);\r\n  while (i < input.length) {\r\n    chr1 = input.charCodeAt(i++);\r\n    chr2 = input.charCodeAt(i++);\r\n    chr3 = input.charCodeAt(i++);\r\n    enc1 = chr1 >> 2;\r\n    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\r\n    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\r\n    enc4 = chr3 & 63;\r\n    if (isNaN(chr2)) {\r\n      enc3 = enc4 = 64;\r\n    } else if (isNaN(chr3)) {\r\n      enc4 = 64;\r\n    }\r\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n  }\r\n  return output;\r\n};", "export const LICENSE_SCOPES = ['pro', 'premium'];", "export const LICENSING_MODELS = [\r\n/**\r\n * A license is outdated if the current version of the software was released after the expiry date of the license.\r\n * But the license can be used indefinitely with an older version of the software.\r\n */\r\n'perpetual',\r\n/**\r\n * On development, a license is outdated if the expiry date has been reached\r\n * On production, a license is outdated if the current version of the software was released after the expiry date of the license (see \"perpetual\")\r\n */\r\n'annual',\r\n/**\r\n * TODO 2025 remove, legacy name of annual.\r\n */\r\n'subscription'];", "function showError(message) {\r\n  console.error(['*************************************************************', '', ...message, '', '*************************************************************'].join('\\n'));\r\n}\r\nexport function showInvalidLicenseKeyError() {\r\n  showError(['MUI X: Invalid license key.', '', \"Your MUI X license key format isn't valid. It could be because the license key is missing a character or has a typo.\", '', 'To solve the issue, you need to double check that `setLicenseKey()` is called with the right argument', 'Please check the license key installation https://mui.com/r/x-license-key-installation.']);\r\n}\r\nexport function showLicenseKeyPlanMismatchError() {\r\n  showError(['MUI X: License key plan mismatch.', '', 'Your use of MUI X is not compatible with the plan of your license key. The feature you are trying to use is not included in the plan of your license key. This happens if you try to use `DataGridPremium` with a license key for the Pro plan.', '', 'To solve the issue, you can upgrade your plan from Pro to Premium at https://mui.com/r/x-get-license?scope=premium.', \"Of if you didn't intend to use Premium features, you can replace the import of `@mui/x-data-grid-premium` with `@mui/x-data-grid-pro`.\"]);\r\n}\r\nexport function showMissingLicenseKeyError({\r\n  plan,\r\n  packageName\r\n}) {\r\n  showError(['MUI X: Missing license key.', '', `The license key is missing. You might not be allowed to use \\`${packageName}\\` which is part of MUI X ${plan}.`, '', 'To solve the issue, you can check the free trial conditions: https://mui.com/r/x-license-trial.', 'If you are eligible no actions are required. If you are not eligible to the free trial, you need to purchase a license https://mui.com/r/x-get-license or stop using the software immediately.']);\r\n}\r\nexport function showExpiredPackageVersionError({\r\n  packageName\r\n}) {\r\n  showError(['MUI X: Expired package version.', '', `You have installed a version of \\`${packageName}\\` that is outside of the maintenance plan of your license key. By default, commercial licenses provide access to new versions released during the first year after the purchase.`, '', 'To solve the issue, you can renew your license https://mui.com/r/x-get-license or install an older version of the npm package that is compatible with your license key.']);\r\n}\r\nexport function showExpiredAnnualGraceLicenseKeyError({\r\n  plan,\r\n  licenseKey,\r\n  expiryTimestamp\r\n}) {\r\n  showError(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, '']);\r\n}\r\nexport function showExpiredAnnualLicenseKeyError({\r\n  plan,\r\n  licenseKey,\r\n  expiryTimestamp\r\n}) {\r\n  throw new Error(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, ''].join('\\n'));\r\n}", "import { ponyfillGlobal } from '@mui/utils';\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\n\r\n// Store the license information in a global, so it can be shared\r\n// when module duplication occurs. The duplication of the modules can happen\r\n// if using multiple version of MUI X at the same time of the bundler\r\n// decide to duplicate to improve the size of the chunks.\r\n// eslint-disable-next-line no-underscore-dangle\r\nponyfillGlobal.__MUI_LICENSE_INFO__ = ponyfillGlobal.__MUI_LICENSE_INFO__ || {\r\n  key: undefined\r\n};\r\nexport class LicenseInfo {\r\n  static getLicenseInfo() {\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    return ponyfillGlobal.__MUI_LICENSE_INFO__;\r\n  }\r\n  static getLicenseKey() {\r\n    return LicenseInfo.getLicenseInfo().key;\r\n  }\r\n  static setLicenseKey(key) {\r\n    const licenseInfo = LicenseInfo.getLicenseInfo();\r\n    licenseInfo.key = key;\r\n  }\r\n}", "// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport let LICENSE_STATUS = /*#__PURE__*/function (LICENSE_STATUS) {\r\n  LICENSE_STATUS[\"NotFound\"] = \"NotFound\";\r\n  LICENSE_STATUS[\"Invalid\"] = \"Invalid\";\r\n  LICENSE_STATUS[\"ExpiredAnnual\"] = \"ExpiredAnnual\";\r\n  LICENSE_STATUS[\"ExpiredAnnualGrace\"] = \"ExpiredAnnualGrace\";\r\n  LICENSE_STATUS[\"ExpiredVersion\"] = \"ExpiredVersion\";\r\n  LICENSE_STATUS[\"Valid\"] = \"Valid\";\r\n  LICENSE_STATUS[\"OutOfScope\"] = \"OutOfScope\";\r\n  return LICENSE_STATUS;\r\n}({});", "import { base64Decode, base64Encode } from '../encoding/base64';\r\nimport { md5 } from '../encoding/md5';\r\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\r\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\r\nimport { LICENSING_MODELS } from '../utils/licensingModel';\r\nconst getDefaultReleaseDate = () => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return today;\r\n};\r\nexport function generateReleaseInfo(releaseDate = getDefaultReleaseDate()) {\r\n  return base64Encode(releaseDate.getTime().toString());\r\n}\r\nconst expiryReg = /^.*EXPIRY=([0-9]+),.*$/;\r\n/**\r\n * Format: ORDER:${orderNumber},EXPIRY=${expiryTimestamp},KEYVERSION=1\r\n */\r\nconst decodeLicenseVersion1 = license => {\r\n  let expiryTimestamp;\r\n  try {\r\n    expiryTimestamp = parseInt(license.match(expiryReg)[1], 10);\r\n    if (!expiryTimestamp || Number.isNaN(expiryTimestamp)) {\r\n      expiryTimestamp = null;\r\n    }\r\n  } catch (err) {\r\n    expiryTimestamp = null;\r\n  }\r\n  return {\r\n    scope: 'pro',\r\n    licensingModel: 'perpetual',\r\n    expiryTimestamp\r\n  };\r\n};\r\n\r\n/**\r\n * Format: O=${orderNumber},E=${expiryTimestamp},S=${scope},LM=${licensingModel},KV=2`;\r\n */\r\nconst decodeLicenseVersion2 = license => {\r\n  const licenseInfo = {\r\n    scope: null,\r\n    licensingModel: null,\r\n    expiryTimestamp: null\r\n  };\r\n  license.split(',').map(token => token.split('=')).filter(el => el.length === 2).forEach(([key, value]) => {\r\n    if (key === 'S') {\r\n      licenseInfo.scope = value;\r\n    }\r\n    if (key === 'LM') {\r\n      licenseInfo.licensingModel = value;\r\n    }\r\n    if (key === 'E') {\r\n      const expiryTimestamp = parseInt(value, 10);\r\n      if (expiryTimestamp && !Number.isNaN(expiryTimestamp)) {\r\n        licenseInfo.expiryTimestamp = expiryTimestamp;\r\n      }\r\n    }\r\n  });\r\n  return licenseInfo;\r\n};\r\n\r\n/**\r\n * Decode the license based on its key version and return a version-agnostic `MuiLicense` object.\r\n */\r\nconst decodeLicense = encodedLicense => {\r\n  const license = base64Decode(encodedLicense);\r\n  if (license.includes('KEYVERSION=1')) {\r\n    return decodeLicenseVersion1(license);\r\n  }\r\n  if (license.includes('KV=2')) {\r\n    return decodeLicenseVersion2(license);\r\n  }\r\n  return null;\r\n};\r\nexport function verifyLicense({\r\n  releaseInfo,\r\n  licenseKey,\r\n  acceptedScopes\r\n}) {\r\n  if (!releaseInfo) {\r\n    throw new Error('MUI X: The release information is missing. Not able to validate license.');\r\n  }\r\n  if (!licenseKey) {\r\n    return {\r\n      status: LICENSE_STATUS.NotFound\r\n    };\r\n  }\r\n  const hash = licenseKey.substr(0, 32);\r\n  const encoded = licenseKey.substr(32);\r\n  if (hash !== md5(encoded)) {\r\n    return {\r\n      status: LICENSE_STATUS.Invalid\r\n    };\r\n  }\r\n  const license = decodeLicense(encoded);\r\n  if (license == null) {\r\n    console.error('MUI X: Error checking license. Key version not found!');\r\n    return {\r\n      status: LICENSE_STATUS.Invalid\r\n    };\r\n  }\r\n  if (license.licensingModel == null || !LICENSING_MODELS.includes(license.licensingModel)) {\r\n    console.error('MUI X: Error checking license. Licensing model not found or invalid!');\r\n    return {\r\n      status: LICENSE_STATUS.Invalid\r\n    };\r\n  }\r\n  if (license.expiryTimestamp == null) {\r\n    console.error('MUI X: Error checking license. Expiry timestamp not found or invalid!');\r\n    return {\r\n      status: LICENSE_STATUS.Invalid\r\n    };\r\n  }\r\n  if (license.licensingModel === 'perpetual' || process.env.NODE_ENV === 'production') {\r\n    const pkgTimestamp = parseInt(base64Decode(releaseInfo), 10);\r\n    if (Number.isNaN(pkgTimestamp)) {\r\n      throw new Error('MUI X: The release information is invalid. Not able to validate license.');\r\n    }\r\n    if (license.expiryTimestamp < pkgTimestamp) {\r\n      return {\r\n        status: LICENSE_STATUS.ExpiredVersion\r\n      };\r\n    }\r\n  } else if (license.licensingModel === 'subscription' || license.licensingModel === 'annual') {\r\n    if (new Date().getTime() > license.expiryTimestamp) {\r\n      if (\r\n      // 30 days grace\r\n      new Date().getTime() < license.expiryTimestamp + 1000 * 3600 * 24 * 30 || process.env.NODE_ENV !== 'development') {\r\n        return {\r\n          status: LICENSE_STATUS.ExpiredAnnualGrace,\r\n          meta: {\r\n            expiryTimestamp: license.expiryTimestamp,\r\n            licenseKey\r\n          }\r\n        };\r\n      }\r\n      return {\r\n        status: LICENSE_STATUS.ExpiredAnnual,\r\n        meta: {\r\n          expiryTimestamp: license.expiryTimestamp,\r\n          licenseKey\r\n        }\r\n      };\r\n    }\r\n  }\r\n  if (license.scope == null || !LICENSE_SCOPES.includes(license.scope)) {\r\n    console.error('Error checking license. scope not found or invalid!');\r\n    return {\r\n      status: LICENSE_STATUS.Invalid\r\n    };\r\n  }\r\n  if (!acceptedScopes.includes(license.scope)) {\r\n    return {\r\n      status: LICENSE_STATUS.OutOfScope\r\n    };\r\n  }\r\n  return {\r\n    status: LICENSE_STATUS.Valid\r\n  };\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\r\nimport { LicenseInfo } from '../utils/licenseInfo';\r\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError } from '../utils/licenseErrorMessageUtils';\r\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\r\nimport MuiLicenseInfoContext from '../Unstable_LicenseInfoProvider/MuiLicenseInfoContext';\r\nexport const sharedLicenseStatuses = {};\r\nexport function useLicenseVerifier(packageName, releaseInfo) {\r\n  const {\r\n    key: contextKey\r\n  } = React.useContext(MuiLicenseInfoContext);\r\n  return React.useMemo(() => {\r\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\r\n\r\n    // Cache the response to not trigger the error twice.\r\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\r\n      return sharedLicenseStatuses[packageName].licenseVerifier;\r\n    }\r\n    const acceptedScopes = packageName.includes('premium') ? ['premium'] : ['pro', 'premium'];\r\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\r\n    const licenseStatus = verifyLicense({\r\n      releaseInfo,\r\n      licenseKey,\r\n      acceptedScopes\r\n    });\r\n    const fullPackageName = `@mui/${packageName}`;\r\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\r\n      // Skip\r\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\r\n      showInvalidLicenseKeyError();\r\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\r\n      showLicenseKeyPlanMismatchError();\r\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\r\n      showMissingLicenseKeyError({\r\n        plan,\r\n        packageName: fullPackageName\r\n      });\r\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\r\n      showExpiredAnnualGraceLicenseKeyError(_extends({\r\n        plan\r\n      }, licenseStatus.meta));\r\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\r\n      showExpiredAnnualLicenseKeyError(_extends({\r\n        plan\r\n      }, licenseStatus.meta));\r\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\r\n      showExpiredPackageVersionError({\r\n        packageName: fullPackageName\r\n      });\r\n    } else if (process.env.NODE_ENV !== 'production') {\r\n      throw new Error('missing status handler');\r\n    }\r\n    sharedLicenseStatuses[packageName] = {\r\n      key: licenseKey,\r\n      licenseVerifier: licenseStatus\r\n    };\r\n    return licenseStatus;\r\n  }, [packageName, releaseInfo, contextKey]);\r\n}", "import * as React from 'react';\r\nconst MuiLicenseInfoContext = /*#__PURE__*/React.createContext({\r\n  key: undefined\r\n});\r\nif (process.env.NODE_ENV !== 'production') {\r\n  MuiLicenseInfoContext.displayName = 'MuiLicenseInfoContext';\r\n}\r\nexport default MuiLicenseInfoContext;", "import * as React from 'react';\r\nimport { useLicenseVerifier } from '../useLicenseVerifier';\r\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction getLicenseErrorMessage(licenseStatus) {\r\n  switch (licenseStatus) {\r\n    case LICENSE_STATUS.ExpiredAnnualGrace:\r\n    case LICENSE_STATUS.ExpiredAnnual:\r\n      return 'MUI X Expired license key';\r\n    case LICENSE_STATUS.ExpiredVersion:\r\n      return 'MUI X Expired package version';\r\n    case LICENSE_STATUS.Invalid:\r\n      return 'MUI X Invalid license key';\r\n    case LICENSE_STATUS.OutOfScope:\r\n      return 'MUI X License key plan mismatch';\r\n    case LICENSE_STATUS.NotFound:\r\n      return 'MUI X Missing license key';\r\n    default:\r\n      throw new Error('Unhandled MUI X license status.');\r\n  }\r\n}\r\nexport function Watermark(props) {\r\n  const {\r\n    packageName,\r\n    releaseInfo\r\n  } = props;\r\n  const licenseStatus = useLicenseVerifier(packageName, releaseInfo);\r\n  if (licenseStatus.status === LICENSE_STATUS.Valid) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      color: '#8282829e',\r\n      zIndex: 100000,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      bottom: '50%',\r\n      right: 0,\r\n      letterSpacing: 5,\r\n      fontSize: 24\r\n    },\r\n    children: getLicenseErrorMessage(licenseStatus.status)\r\n  });\r\n}", "import * as React from 'react';\r\nimport MuiLicenseInfoContext from './MuiLicenseInfoContext';\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n/**\r\n * @ignore - do not document.\r\n */\r\nexport function LicenseInfoProvider({\r\n  info,\r\n  children\r\n}) {\r\n  return /*#__PURE__*/_jsx(MuiLicenseInfoContext.Provider, {\r\n    value: info,\r\n    children: children\r\n  });\r\n}", "/**\r\n * @deprecated Import DataGridPro instead.\r\n */\r\nexport function DataGrid() {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return null;\r\n  }\r\n  throw new Error([\"You try to import `DataGrid` from @mui/x-data-grid-pro but this module doesn't exist.\", '', \"Instead, you can do `import { DataGridPro } from '@mui/x-data-grid-pro'`.\"].join('\\n'));\r\n}\r\n\r\n/**\r\n * @deprecated Import DataGridPro instead.\r\n */\r\nexport function DataGridPremium() {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return null;\r\n  }\r\n  throw new Error([\"You try to import `DataGridPremium` from @mui/x-data-grid-pro but this module doesn't exist.\", '', \"Instead, you can do `import { DataGridPro } from '@mui/x-data-grid-pro'`.\"].join('\\n'));\r\n}", "'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLicenseVerifier, Watermark } from '@mui/x-license';\r\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot, GridContextProvider } from '@mui/x-data-grid';\r\nimport { validateProps } from '@mui/x-data-grid/internals';\r\nimport { useDataGridProComponent } from './useDataGridProComponent';\r\nimport { useDataGridProProps } from './useDataGridProProps';\r\nimport { getReleaseInfo } from '../utils/releaseInfo';\r\nimport { propValidatorsDataGridPro } from '../internals/propValidation';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst releaseInfo = getReleaseInfo();\r\nconst DataGridProRaw = /*#__PURE__*/React.forwardRef(function DataGridPro(inProps, ref) {\r\n  const props = useDataGridProProps(inProps);\r\n  const privateApiRef = useDataGridProComponent(props.apiRef, props);\r\n  useLicenseVerifier('x-data-grid-pro', releaseInfo);\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    validateProps(props, propValidatorsDataGridPro);\r\n  }\r\n  return /*#__PURE__*/_jsx(GridContextProvider, {\r\n    privateApiRef: privateApiRef,\r\n    props: props,\r\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\r\n      className: props.className,\r\n      style: props.style,\r\n      sx: props.sx,\r\n      ref: ref\r\n    }, props.forwardedProps, {\r\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\r\n        children: /*#__PURE__*/_jsx(Watermark, {\r\n          packageName: \"x-data-grid-pro\",\r\n          releaseInfo: releaseInfo\r\n        })\r\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\r\n    }))\r\n  });\r\n});\r\n/**\r\n * Demos:\r\n * - [DataGridPro](https://mui.com/x/react-data-grid/demo/)\r\n *\r\n * API:\r\n * - [DataGridPro API](https://mui.com/x/api/data-grid/data-grid-pro/)\r\n */\r\nexport const DataGridPro = /*#__PURE__*/React.memo(DataGridProRaw);\r\nDataGridProRaw.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\r\n   */\r\n  apiRef: PropTypes.shape({\r\n    current: PropTypes.object.isRequired\r\n  }),\r\n  /**\r\n   * The label of the Data Grid.\r\n   */\r\n  'aria-label': PropTypes.string,\r\n  /**\r\n   * The id of the element containing a label for the Data Grid.\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n  /**\r\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\r\n   * @default false\r\n   */\r\n  autoHeight: PropTypes.bool,\r\n  /**\r\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\r\n   * @default false\r\n   */\r\n  autoPageSize: PropTypes.bool,\r\n  /**\r\n   * If `true`, columns are autosized after the datagrid is mounted.\r\n   * @default false\r\n   */\r\n  autosizeOnMount: PropTypes.bool,\r\n  /**\r\n   * The options for autosize when user-initiated.\r\n   */\r\n  autosizeOptions: PropTypes.shape({\r\n    columns: PropTypes.arrayOf(PropTypes.string),\r\n    expand: PropTypes.bool,\r\n    includeHeaders: PropTypes.bool,\r\n    includeOutliers: PropTypes.bool,\r\n    outliersFactor: PropTypes.number\r\n  }),\r\n  /**\r\n   * Controls the modes of the cells.\r\n   */\r\n  cellModesModel: PropTypes.object,\r\n  /**\r\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\r\n   * @default false\r\n   */\r\n  checkboxSelection: PropTypes.bool,\r\n  /**\r\n   * If `true`, the \"Select All\" header checkbox selects only the rows on the current page. To be used in combination with `checkboxSelection`.\r\n   * It only works if the pagination is enabled.\r\n   * @default false\r\n   */\r\n  checkboxSelectionVisibleOnly: PropTypes.bool,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * The character used to separate cell values when copying to the clipboard.\r\n   * @default '\\t'\r\n   */\r\n  clipboardCopyCellDelimiter: PropTypes.string,\r\n  /**\r\n   * Column region in pixels to render before/after the viewport\r\n   * @default 150\r\n   */\r\n  columnBufferPx: PropTypes.number,\r\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\r\n  /**\r\n   * Sets the height in pixel of the column headers in the Data Grid.\r\n   * @default 56\r\n   */\r\n  columnHeaderHeight: PropTypes.number,\r\n  /**\r\n   * Set of columns of type [[GridColDef]][].\r\n   */\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  /**\r\n   * Set the column visibility model of the Data Grid.\r\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\r\n   */\r\n  columnVisibilityModel: PropTypes.object,\r\n  /**\r\n   * If above 0, the row children will be expanded up to this depth.\r\n   * If equal to -1, all the row children will be expanded.\r\n   * @default 0\r\n   */\r\n  defaultGroupingExpansionDepth: PropTypes.number,\r\n  /**\r\n   * Set the density of the Data Grid.\r\n   * @default \"standard\"\r\n   */\r\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\r\n  /**\r\n   * The row ids to show the detail panel.\r\n   */\r\n  detailPanelExpandedRowIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\r\n  /**\r\n   * If `true`, column autosizing on header separator double-click is disabled.\r\n   * @default false\r\n   */\r\n  disableAutosize: PropTypes.bool,\r\n  /**\r\n   * If `true`, the filtering will only be applied to the top level rows when grouping rows with the `treeData` prop.\r\n   * @default false\r\n   */\r\n  disableChildrenFiltering: PropTypes.bool,\r\n  /**\r\n   * If `true`, the sorting will only be applied to the top level rows when grouping rows with the `treeData` prop.\r\n   * @default false\r\n   */\r\n  disableChildrenSorting: PropTypes.bool,\r\n  /**\r\n   * If `true`, column filters are disabled.\r\n   * @default false\r\n   */\r\n  disableColumnFilter: PropTypes.bool,\r\n  /**\r\n   * If `true`, the column menu is disabled.\r\n   * @default false\r\n   */\r\n  disableColumnMenu: PropTypes.bool,\r\n  /**\r\n   * If `true`, the column pinning is disabled.\r\n   * @default false\r\n   */\r\n  disableColumnPinning: PropTypes.bool,\r\n  /**\r\n   * If `true`, reordering columns is disabled.\r\n   * @default false\r\n   */\r\n  disableColumnReorder: PropTypes.bool,\r\n  /**\r\n   * If `true`, resizing columns is disabled.\r\n   * @default false\r\n   */\r\n  disableColumnResize: PropTypes.bool,\r\n  /**\r\n   * If `true`, hiding/showing columns is disabled.\r\n   * @default false\r\n   */\r\n  disableColumnSelector: PropTypes.bool,\r\n  /**\r\n   * If `true`, the column sorting feature will be disabled.\r\n   * @default false\r\n   */\r\n  disableColumnSorting: PropTypes.bool,\r\n  /**\r\n   * If `true`, the density selector is disabled.\r\n   * @default false\r\n   */\r\n  disableDensitySelector: PropTypes.bool,\r\n  /**\r\n   * If `true`, `eval()` is not used for performance optimization.\r\n   * @default false\r\n   */\r\n  disableEval: PropTypes.bool,\r\n  /**\r\n   * If `true`, filtering with multiple columns is disabled.\r\n   * @default false\r\n   */\r\n  disableMultipleColumnsFiltering: PropTypes.bool,\r\n  /**\r\n   * If `true`, the sorting with multiple columns is disabled.\r\n   * @default false\r\n   */\r\n  disableMultipleColumnsSorting: PropTypes.bool,\r\n  /**\r\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\r\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\r\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\r\n   */\r\n  disableMultipleRowSelection: PropTypes.bool,\r\n  /**\r\n   * If `true`, the selection on click on a row or cell is disabled.\r\n   * @default false\r\n   */\r\n  disableRowSelectionOnClick: PropTypes.bool,\r\n  /**\r\n   * If `true`, the virtualization is disabled.\r\n   * @default false\r\n   */\r\n  disableVirtualization: PropTypes.bool,\r\n  /**\r\n   * Controls whether to use the cell or row editing.\r\n   * @default \"cell\"\r\n   */\r\n  editMode: PropTypes.oneOf(['cell', 'row']),\r\n  /**\r\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\r\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\r\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\r\n   */\r\n  estimatedRowCount: PropTypes.number,\r\n  /**\r\n   * Unstable features, breaking changes might be introduced.\r\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\r\n   */\r\n  experimentalFeatures: PropTypes.shape({\r\n    warnIfFocusStateIsNotSynced: PropTypes.bool\r\n  }),\r\n  /**\r\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\r\n   * @default 150\r\n   */\r\n  filterDebounceMs: PropTypes.number,\r\n  /**\r\n   * Filtering can be processed on the server or client-side.\r\n   * Set it to 'server' if you would like to handle filtering on the server-side.\r\n   * @default \"client\"\r\n   */\r\n  filterMode: PropTypes.oneOf(['client', 'server']),\r\n  /**\r\n   * Set the filter model of the Data Grid.\r\n   */\r\n  filterModel: PropTypes.shape({\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n      field: PropTypes.string.isRequired,\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      operator: PropTypes.string.isRequired,\r\n      value: PropTypes.any\r\n    })).isRequired,\r\n    logicOperator: PropTypes.oneOf(['and', 'or']),\r\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\r\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\r\n    quickFilterValues: PropTypes.array\r\n  }),\r\n  /**\r\n   * Forwarded props for the Data Grid root element.\r\n   * @ignore - do not document.\r\n   */\r\n  forwardedProps: PropTypes.object,\r\n  /**\r\n   * Function that applies CSS classes dynamically on cells.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @returns {string} The CSS class to apply to the cell.\r\n   */\r\n  getCellClassName: PropTypes.func,\r\n  /**\r\n   * Function that returns the element to render in row detail.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @returns {React.JSX.Element} The row detail element.\r\n   */\r\n  getDetailPanelContent: PropTypes.func,\r\n  /**\r\n   * Function that returns the height of the row detail panel.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @returns {number | string} The height in pixels or \"auto\" to use the content height.\r\n   * @default \"() => 500\"\r\n   */\r\n  getDetailPanelHeight: PropTypes.func,\r\n  /**\r\n   * Function that returns the estimated height for a row.\r\n   * Only works if dynamic row height is used.\r\n   * Once the row height is measured this value is discarded.\r\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\r\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\r\n   */\r\n  getEstimatedRowHeight: PropTypes.func,\r\n  /**\r\n   * Function that applies CSS classes dynamically on rows.\r\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\r\n   * @returns {string} The CSS class to apply to the row.\r\n   */\r\n  getRowClassName: PropTypes.func,\r\n  /**\r\n   * Function that sets the row height per row.\r\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\r\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\r\n   */\r\n  getRowHeight: PropTypes.func,\r\n  /**\r\n   * Return the id of a given [[GridRowModel]].\r\n   */\r\n  getRowId: PropTypes.func,\r\n  /**\r\n   * Function that allows to specify the spacing between rows.\r\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\r\n   * @returns {GridRowSpacing} The row spacing values.\r\n   */\r\n  getRowSpacing: PropTypes.func,\r\n  /**\r\n   * Determines the path of a row in the tree data.\r\n   * For instance, a row with the path [\"A\", \"B\"] is the child of the row with the path [\"A\"].\r\n   * Note that all paths must contain at least one element.\r\n   * @template R\r\n   * @param {R} row The row from which we want the path.\r\n   * @returns {string[]} The path to the row.\r\n   */\r\n  getTreeDataPath: PropTypes.func,\r\n  /**\r\n   * The grouping column used by the tree data.\r\n   */\r\n  groupingColDef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * Override the height of the header filters.\r\n   */\r\n  headerFilterHeight: PropTypes.number,\r\n  /**\r\n   * If `true`, enables the data grid filtering on header feature.\r\n   * @default false\r\n   */\r\n  headerFilters: PropTypes.bool,\r\n  /**\r\n   * If `true`, the footer component is hidden.\r\n   * @default false\r\n   */\r\n  hideFooter: PropTypes.bool,\r\n  /**\r\n   * If `true`, the pagination component in the footer is hidden.\r\n   * @default false\r\n   */\r\n  hideFooterPagination: PropTypes.bool,\r\n  /**\r\n   * If `true`, the row count in the footer is hidden.\r\n   * It has no effect if the pagination is enabled.\r\n   * @default false\r\n   */\r\n  hideFooterRowCount: PropTypes.bool,\r\n  /**\r\n   * If `true`, the selected row count in the footer is hidden.\r\n   * @default false\r\n   */\r\n  hideFooterSelectedRowCount: PropTypes.bool,\r\n  /**\r\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\r\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\r\n   * @default false\r\n   */\r\n  ignoreDiacritics: PropTypes.bool,\r\n  /**\r\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\r\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\r\n   * @default false\r\n   */\r\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\r\n    clipboardExport: PropTypes.bool,\r\n    csvExport: PropTypes.bool\r\n  }), PropTypes.bool]),\r\n  /**\r\n   * The initial state of the DataGridPro.\r\n   * The data in it will be set in the state on initialization but will not be controlled.\r\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\r\n   */\r\n  initialState: PropTypes.object,\r\n  /**\r\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @returns {boolean} A boolean indicating if the cell is editable.\r\n   */\r\n  isCellEditable: PropTypes.func,\r\n  /**\r\n   * Determines if a group should be expanded after its creation.\r\n   * This prop takes priority over the `defaultGroupingExpansionDepth` prop.\r\n   * @param {GridGroupNode} node The node of the group to test.\r\n   * @returns {boolean} A boolean indicating if the group is expanded.\r\n   */\r\n  isGroupExpandedByDefault: PropTypes.func,\r\n  /**\r\n   * Determines if a row can be selected.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @returns {boolean} A boolean indicating if the cell is selectable.\r\n   */\r\n  isRowSelectable: PropTypes.func,\r\n  /**\r\n   * If `true`, moving the mouse pointer outside the grid before releasing the mouse button\r\n   * in a column re-order action will not cause the column to jump back to its original position.\r\n   * @default false\r\n   */\r\n  keepColumnPositionIfDraggedOutside: PropTypes.bool,\r\n  /**\r\n   * If `true`, the selection model will retain selected rows that do not exist.\r\n   * Useful when using server side pagination and row selections need to be retained\r\n   * when changing pages.\r\n   * @default false\r\n   */\r\n  keepNonExistentRowsSelected: PropTypes.bool,\r\n  /**\r\n   * If `true`, a loading overlay is displayed.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * Set the locale text of the Data Grid.\r\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\r\n   */\r\n  localeText: PropTypes.object,\r\n  /**\r\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\r\n   * @default console\r\n   */\r\n  logger: PropTypes.shape({\r\n    debug: PropTypes.func.isRequired,\r\n    error: PropTypes.func.isRequired,\r\n    info: PropTypes.func.isRequired,\r\n    warn: PropTypes.func.isRequired\r\n  }),\r\n  /**\r\n   * Allows to pass the logging level or false to turn off logging.\r\n   * @default \"error\" (\"warn\" in dev mode)\r\n   */\r\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\r\n  /**\r\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\r\n   */\r\n  nonce: PropTypes.string,\r\n  /**\r\n   * Callback fired when any cell is clicked.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onCellClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when a double click event comes from a cell element.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onCellDoubleClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when the cell turns to edit mode.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\r\n   */\r\n  onCellEditStart: PropTypes.func,\r\n  /**\r\n   * Callback fired when the cell turns to view mode.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\r\n   */\r\n  onCellEditStop: PropTypes.func,\r\n  /**\r\n   * Callback fired when a keydown event comes from a cell element.\r\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\r\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onCellKeyDown: PropTypes.func,\r\n  /**\r\n   * Callback fired when the `cellModesModel` prop changes.\r\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onCellModesModelChange: PropTypes.func,\r\n  /**\r\n   * Callback called when the data is copied to the clipboard.\r\n   * @param {string} data The data copied to the clipboard.\r\n   */\r\n  onClipboardCopy: PropTypes.func,\r\n  /**\r\n   * Callback fired when a click event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when a double click event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderDoubleClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when a mouse enter event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderEnter: PropTypes.func,\r\n  /**\r\n   * Callback fired when a mouse leave event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderLeave: PropTypes.func,\r\n  /**\r\n   * Callback fired when a mouseout event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderOut: PropTypes.func,\r\n  /**\r\n   * Callback fired when a mouseover event comes from a column header element.\r\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnHeaderOver: PropTypes.func,\r\n  /**\r\n   * Callback fired when a column is reordered.\r\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnOrderChange: PropTypes.func,\r\n  /**\r\n   * Callback fired while a column is being resized.\r\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnResize: PropTypes.func,\r\n  /**\r\n   * Callback fired when the column visibility model changes.\r\n   * @param {GridColumnVisibilityModel} model The new model.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnVisibilityModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the width of a column is changed.\r\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onColumnWidthChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the density changes.\r\n   * @param {GridDensity} density New density value.\r\n   */\r\n  onDensityChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the detail panel of a row is opened or closed.\r\n   * @param {GridRowId[]} ids The ids of the rows which have the detail panel open.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onDetailPanelExpandedRowIdsChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when rowCount is set and the next batch of virtualized rows is rendered.\r\n   * @param {GridFetchRowsParams} params With all properties from [[GridFetchRowsParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onFetchRows: PropTypes.func,\r\n  /**\r\n   * Callback fired when the Filter model changes before the filters are applied.\r\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onFilterModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the menu is closed.\r\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onMenuClose: PropTypes.func,\r\n  /**\r\n   * Callback fired when the menu is opened.\r\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onMenuOpen: PropTypes.func,\r\n  /**\r\n   * Callback fired when the pagination meta has changed.\r\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\r\n   */\r\n  onPaginationMetaChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the pagination model has changed.\r\n   * @param {GridPaginationModel} model Updated pagination model.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onPaginationModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the pinned columns have changed.\r\n   * @param {GridPinnedColumnFields} pinnedColumns The changed pinned columns.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onPinnedColumnsChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the preferences panel is closed.\r\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onPreferencePanelClose: PropTypes.func,\r\n  /**\r\n   * Callback fired when the preferences panel is opened.\r\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onPreferencePanelOpen: PropTypes.func,\r\n  /**\r\n   * Callback called when `processRowUpdate` throws an error or rejects.\r\n   * @param {any} error The error thrown.\r\n   */\r\n  onProcessRowUpdateError: PropTypes.func,\r\n  /**\r\n   * Callback fired when the Data Grid is resized.\r\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onResize: PropTypes.func,\r\n  /**\r\n   * Callback fired when a row is clicked.\r\n   * Not called if the target clicked is an interactive element added by the built-in columns.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when the row count has changed.\r\n   * @param {number} count Updated row count.\r\n   */\r\n  onRowCountChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when a double click event comes from a row container element.\r\n   * @param {GridRowParams} params With all properties from [[RowParams]].\r\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowDoubleClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when the row turns to edit mode.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\r\n   */\r\n  onRowEditStart: PropTypes.func,\r\n  /**\r\n   * Callback fired when the row turns to view mode.\r\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\r\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\r\n   */\r\n  onRowEditStop: PropTypes.func,\r\n  /**\r\n   * Callback fired when the `rowModesModel` prop changes.\r\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowModesModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when a row is being reordered.\r\n   * @param {GridRowOrderChangeParams} params With all properties from [[GridRowOrderChangeParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowOrderChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the selection state of one or multiple rows changes.\r\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowSelectionModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when scrolling to the bottom of the grid viewport.\r\n   * @param {GridRowScrollEndParams} params With all properties from [[GridRowScrollEndParams]].\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onRowsScrollEnd: PropTypes.func,\r\n  /**\r\n   * Callback fired when the sort model changes before a column is sorted.\r\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   */\r\n  onSortModelChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the state of the Data Grid is updated.\r\n   * @param {GridState} state The new state.\r\n   * @param {MuiEvent<{}>} event The event object.\r\n   * @param {GridCallbackDetails} details Additional details for this callback.\r\n   * @ignore - do not document.\r\n   */\r\n  onStateChange: PropTypes.func,\r\n  /**\r\n   * Select the pageSize dynamically using the component UI.\r\n   * @default [25, 50, 100]\r\n   */\r\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired\r\n  })]).isRequired),\r\n  /**\r\n   * If `true`, pagination is enabled.\r\n   * @default false\r\n   */\r\n  pagination: PropTypes.bool,\r\n  /**\r\n   * The extra information about the pagination state of the Data Grid.\r\n   * Only applicable with `paginationMode=\"server\"`.\r\n   */\r\n  paginationMeta: PropTypes.shape({\r\n    hasNextPage: PropTypes.bool\r\n  }),\r\n  /**\r\n   * Pagination can be processed on the server or client-side.\r\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\r\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\r\n   * @default \"client\"\r\n   */\r\n  paginationMode: PropTypes.oneOf(['client', 'server']),\r\n  /**\r\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\r\n   */\r\n  paginationModel: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired\r\n  }),\r\n  /**\r\n   * The column fields to display pinned to left or right.\r\n   */\r\n  pinnedColumns: PropTypes.object,\r\n  /**\r\n   * Rows data to pin on top or bottom.\r\n   */\r\n  pinnedRows: PropTypes.shape({\r\n    bottom: PropTypes.arrayOf(PropTypes.object),\r\n    top: PropTypes.arrayOf(PropTypes.object)\r\n  }),\r\n  /**\r\n   * Callback called before updating a row with new values in the row and cell editing.\r\n   * @template R\r\n   * @param {R} newRow Row object with the new values.\r\n   * @param {R} oldRow Row object with the old values.\r\n   * @returns {Promise<R> | R} The final values to update the row.\r\n   */\r\n  processRowUpdate: PropTypes.func,\r\n  /**\r\n   * The milliseconds throttle delay for resizing the grid.\r\n   * @default 60\r\n   */\r\n  resizeThrottleMs: PropTypes.number,\r\n  /**\r\n   * Row region in pixels to render before/after the viewport\r\n   * @default 150\r\n   */\r\n  rowBufferPx: PropTypes.number,\r\n  /**\r\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\r\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\r\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\r\n   */\r\n  rowCount: PropTypes.number,\r\n  /**\r\n   * Sets the height in pixel of a row in the Data Grid.\r\n   * @default 52\r\n   */\r\n  rowHeight: PropTypes.number,\r\n  /**\r\n   * Controls the modes of the rows.\r\n   */\r\n  rowModesModel: PropTypes.object,\r\n  /**\r\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\r\n   * Setting it to a lower value could be useful when using dynamic row height,\r\n   * but might reduce performance when displaying a large number of rows.\r\n   * @default 166\r\n   */\r\n  rowPositionsDebounceMs: PropTypes.number,\r\n  /**\r\n   * If `true`, the reordering of rows is enabled.\r\n   * @default false\r\n   */\r\n  rowReordering: PropTypes.bool,\r\n  /**\r\n   * Set of rows of type [[GridRowsProp]].\r\n   * @default []\r\n   */\r\n  rows: PropTypes.arrayOf(PropTypes.object),\r\n  /**\r\n   * If `false`, the row selection mode is disabled.\r\n   * @default true\r\n   */\r\n  rowSelection: PropTypes.bool,\r\n  /**\r\n   * Sets the row selection model of the Data Grid.\r\n   */\r\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * Loading rows can be processed on the server or client-side.\r\n   * Set it to 'client' if you would like enable infnite loading.\r\n   * Set it to 'server' if you would like to enable lazy loading.\r\n   * * @default \"client\"\r\n   */\r\n  rowsLoadingMode: PropTypes.oneOf(['client', 'server']),\r\n  /**\r\n   * Sets the type of space between rows added by `getRowSpacing`.\r\n   * @default \"margin\"\r\n   */\r\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\r\n  /**\r\n   * Override the height/width of the Data Grid inner scrollbar.\r\n   */\r\n  scrollbarSize: PropTypes.number,\r\n  /**\r\n   * Set the area in `px` at the bottom of the grid viewport where onRowsScrollEnd is called.\r\n   * @default 80\r\n   */\r\n  scrollEndThreshold: PropTypes.number,\r\n  /**\r\n   * If `true`, the vertical borders of the cells are displayed.\r\n   * @default false\r\n   */\r\n  showCellVerticalBorder: PropTypes.bool,\r\n  /**\r\n   * If `true`, the right border of the column headers are displayed.\r\n   * @default false\r\n   */\r\n  showColumnVerticalBorder: PropTypes.bool,\r\n  /**\r\n   * Overridable components props dynamically passed to the component at rendering.\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable components.\r\n   */\r\n  slots: PropTypes.object,\r\n  /**\r\n   * Sorting can be processed on the server or client-side.\r\n   * Set it to 'client' if you would like to handle sorting on the client-side.\r\n   * Set it to 'server' if you would like to handle sorting on the server-side.\r\n   * @default \"client\"\r\n   */\r\n  sortingMode: PropTypes.oneOf(['client', 'server']),\r\n  /**\r\n   * The order of the sorting sequence.\r\n   * @default ['asc', 'desc', null]\r\n   */\r\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\r\n  /**\r\n   * Set the sort model of the Data Grid.\r\n   */\r\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\r\n    field: PropTypes.string.isRequired,\r\n    sort: PropTypes.oneOf(['asc', 'desc'])\r\n  })),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * If positive, the Data Grid will throttle updates coming from `apiRef.current.updateRows` and `apiRef.current.setRows`.\r\n   * It can be useful if you have a high update rate but do not want to do heavy work like filtering / sorting or rendering on each  individual update.\r\n   * @default 0\r\n   */\r\n  throttleRowsMs: PropTypes.number,\r\n  /**\r\n   * If `true`, the rows will be gathered in a tree structure according to the `getTreeDataPath` prop.\r\n   * @default false\r\n   */\r\n  treeData: PropTypes.bool\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\r\nimport { useGridLogger } from '../../utils';\r\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\r\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\r\n  headerFiltering: {\r\n    enabled: props.headerFilters ?? false,\r\n    editing: null,\r\n    menuOpen: null\r\n  }\r\n});\r\nexport const useGridHeaderFiltering = (apiRef, props) => {\r\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\r\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\r\n    apiRef.current.setState(state => {\r\n      // Safety check to avoid MIT users from using it\r\n      // This hook should ultimately be moved to the Pro package\r\n      if (props.signature === 'DataGrid') {\r\n        return state;\r\n      }\r\n      return _extends({}, state, {\r\n        headerFiltering: {\r\n          enabled: props.headerFilters ?? false,\r\n          editing: headerFilterState.editing ?? null,\r\n          menuOpen: headerFilterState.menuOpen ?? null\r\n        }\r\n      });\r\n    });\r\n    apiRef.current.forceUpdate();\r\n  }, [apiRef, props.signature, props.headerFilters]);\r\n  const startHeaderFilterEditMode = React.useCallback(field => {\r\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\r\n    apiRef.current.setHeaderFilterState({\r\n      editing: field\r\n    });\r\n  }, [apiRef, logger]);\r\n  const stopHeaderFilterEditMode = React.useCallback(() => {\r\n    logger.debug(`Stopping edit mode on header filter`);\r\n    apiRef.current.setHeaderFilterState({\r\n      editing: null\r\n    });\r\n  }, [apiRef, logger]);\r\n  const showHeaderFilterMenu = React.useCallback(field => {\r\n    logger.debug(`Opening header filter menu for field: ${field}`);\r\n    apiRef.current.setHeaderFilterState({\r\n      menuOpen: field\r\n    });\r\n  }, [apiRef, logger]);\r\n  const hideHeaderFilterMenu = React.useCallback(() => {\r\n    logger.debug(`Hiding header filter menu for active field`);\r\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\r\n    if (fieldToFocus) {\r\n      const columnLookup = gridColumnLookupSelector(apiRef);\r\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\r\n      const orderedFields = gridColumnFieldsSelector(apiRef);\r\n\r\n      // If the column was removed from the grid, we need to find the closest visible field\r\n      if (!columnLookup[fieldToFocus]) {\r\n        fieldToFocus = orderedFields[0];\r\n      }\r\n\r\n      // If the field to focus is hidden, we need to find the closest visible field\r\n      if (columnVisibilityModel[fieldToFocus] === false) {\r\n        // contains visible column fields + the field that was just hidden\r\n        const visibleOrderedFields = orderedFields.filter(field => {\r\n          if (field === fieldToFocus) {\r\n            return true;\r\n          }\r\n          return columnVisibilityModel[field] !== false;\r\n        });\r\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\r\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\r\n      }\r\n      apiRef.current.setHeaderFilterState({\r\n        menuOpen: null\r\n      });\r\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\r\n    }\r\n  }, [apiRef, logger]);\r\n  const headerFilterPrivateApi = {\r\n    setHeaderFilterState\r\n  };\r\n  const headerFilterApi = {\r\n    startHeaderFilterEditMode,\r\n    stopHeaderFilterEditMode,\r\n    showHeaderFilterMenu,\r\n    hideHeaderFilterMenu\r\n  };\r\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\r\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\r\n\r\n  /*\r\n   * EFFECTS\r\n   */\r\n  const isFirstRender = React.useRef(true);\r\n  React.useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n    } else {\r\n      apiRef.current.setHeaderFilterState({\r\n        enabled: props.headerFilters ?? false\r\n      });\r\n    }\r\n  }, [apiRef, props.headerFilters]);\r\n};", "import * as React from 'react';\r\nimport { useGridSelector, useGridApiOptionHandler, gridVisibleColumnDefinitionsSelector, useGridApiMethod, gridDimensionsSelector } from '@mui/x-data-grid';\r\nimport { useGridVisibleRows } from '@mui/x-data-grid/internals';\r\nimport useEventCallback from '@mui/utils/useEventCallback';\r\nimport { styled } from '@mui/system';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst InfiniteLoadingTriggerElement = styled('div')({\r\n  position: 'sticky',\r\n  left: 0,\r\n  width: 0,\r\n  height: 0\r\n});\r\n\r\n/**\r\n * @requires useGridColumns (state)\r\n * @requires useGridDimensions (method) - can be after\r\n * @requires useGridScroll (method\r\n */\r\nexport const useGridInfiniteLoader = (apiRef, props) => {\r\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\r\n  const currentPage = useGridVisibleRows(apiRef, props);\r\n  const observer = React.useRef();\r\n  const triggerElement = React.useRef(null);\r\n  const isEnabled = props.rowsLoadingMode === 'client' && !!props.onRowsScrollEnd;\r\n  const handleLoadMoreRows = useEventCallback(([entry]) => {\r\n    const currentRatio = entry.intersectionRatio;\r\n    const isIntersecting = entry.isIntersecting;\r\n    if (isIntersecting && currentRatio === 1) {\r\n      const viewportPageSize = apiRef.current.getViewportPageSize();\r\n      const rowScrollEndParams = {\r\n        visibleColumns,\r\n        viewportPageSize,\r\n        visibleRowsCount: currentPage.rows.length\r\n      };\r\n      apiRef.current.publishEvent('rowsScrollEnd', rowScrollEndParams);\r\n      observer.current?.disconnect();\r\n      // do not observe this node anymore\r\n      triggerElement.current = null;\r\n    }\r\n  });\r\n  const virtualScroller = apiRef.current.virtualScrollerRef.current;\r\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\r\n  const marginBottom = props.scrollEndThreshold - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\r\n  React.useEffect(() => {\r\n    if (!isEnabled) {\r\n      return;\r\n    }\r\n    if (!virtualScroller) {\r\n      return;\r\n    }\r\n    observer.current?.disconnect();\r\n    observer.current = new IntersectionObserver(handleLoadMoreRows, {\r\n      threshold: 1,\r\n      root: virtualScroller,\r\n      rootMargin: `0px 0px ${marginBottom}px 0px`\r\n    });\r\n    if (triggerElement.current) {\r\n      observer.current.observe(triggerElement.current);\r\n    }\r\n  }, [virtualScroller, handleLoadMoreRows, isEnabled, marginBottom]);\r\n  const triggerRef = React.useCallback(node => {\r\n    // Prevent the infite loading working in combination with lazy loading\r\n    if (!isEnabled) {\r\n      return;\r\n    }\r\n    if (triggerElement.current !== node) {\r\n      observer.current?.disconnect();\r\n      triggerElement.current = node;\r\n      if (triggerElement.current) {\r\n        observer.current?.observe(triggerElement.current);\r\n      }\r\n    }\r\n  }, [isEnabled]);\r\n  const getInfiniteLoadingTriggerElement = React.useCallback(({\r\n    lastRowId\r\n  }) => {\r\n    if (!isEnabled) {\r\n      return null;\r\n    }\r\n    return /*#__PURE__*/_jsx(InfiniteLoadingTriggerElement, {\r\n      ref: triggerRef\r\n      // Force rerender on last row change to start observing the new trigger\r\n      ,\r\n\r\n      role: \"presentation\"\r\n    }, `trigger-${lastRowId}`);\r\n  }, [isEnabled, triggerRef]);\r\n  const infiniteLoaderPrivateApi = {\r\n    getInfiniteLoadingTriggerElement\r\n  };\r\n  useGridApiMethod(apiRef, infiniteLoaderPrivateApi, 'private');\r\n  useGridApiOptionHandler(apiRef, 'rowsScrollEnd', props.onRowsScrollEnd);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useGridApiEventHandler, getDataGridUtilityClass, useGridLogger, useGridApiOptionHandler } from '@mui/x-data-grid';\r\nimport { gridColumnReorderDragColSelector } from './columnReorderSelector';\r\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\r\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\r\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\r\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\r\n};\r\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    columnHeaderDragging: ['columnHeader--dragging']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\nexport const columnReorderStateInitializer = state => _extends({}, state, {\r\n  columnReorder: {\r\n    dragCol: ''\r\n  }\r\n});\r\n\r\n/**\r\n * @requires useGridColumns (method)\r\n */\r\nexport const useGridColumnReorder = (apiRef, props) => {\r\n  const logger = useGridLogger(apiRef, 'useGridColumnReorder');\r\n  const dragColNode = React.useRef(null);\r\n  const cursorPosition = React.useRef({\r\n    x: 0,\r\n    y: 0\r\n  });\r\n  const originColumnIndex = React.useRef(null);\r\n  const forbiddenIndexes = React.useRef({});\r\n  const removeDnDStylesTimeout = React.useRef();\r\n  const ownerState = {\r\n    classes: props.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const theme = useTheme();\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(removeDnDStylesTimeout.current);\r\n    };\r\n  }, []);\r\n  const handleDragStart = React.useCallback((params, event) => {\r\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\r\n      return;\r\n    }\r\n    logger.debug(`Start dragging col ${params.field}`);\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    dragColNode.current = event.currentTarget;\r\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\r\n    if (event.dataTransfer) {\r\n      event.dataTransfer.effectAllowed = 'move';\r\n    }\r\n    apiRef.current.setState(state => _extends({}, state, {\r\n      columnReorder: _extends({}, state.columnReorder, {\r\n        dragCol: params.field\r\n      })\r\n    }));\r\n    apiRef.current.forceUpdate();\r\n    removeDnDStylesTimeout.current = setTimeout(() => {\r\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\r\n    });\r\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\r\n    const draggingColumnGroupPath = apiRef.current.getColumnGroupPath(params.field);\r\n    const columnIndex = originColumnIndex.current;\r\n    const allColumns = apiRef.current.getAllColumns();\r\n    const groupsLookup = apiRef.current.getAllGroupDetails();\r\n    const getGroupPathFromColumnIndex = colIndex => {\r\n      const field = allColumns[colIndex].field;\r\n      return apiRef.current.getColumnGroupPath(field);\r\n    };\r\n\r\n    // The limitingGroupId is the id of the group from which the dragged column should not escape\r\n    let limitingGroupId = null;\r\n    draggingColumnGroupPath.forEach(groupId => {\r\n      if (!groupsLookup[groupId]?.freeReordering) {\r\n        // Only consider group that are made of more than one column\r\n        if (columnIndex > 0 && getGroupPathFromColumnIndex(columnIndex - 1).includes(groupId)) {\r\n          limitingGroupId = groupId;\r\n        } else if (columnIndex + 1 < allColumns.length && getGroupPathFromColumnIndex(columnIndex + 1).includes(groupId)) {\r\n          limitingGroupId = groupId;\r\n        }\r\n      }\r\n    });\r\n    forbiddenIndexes.current = {};\r\n    for (let indexToForbid = 0; indexToForbid < allColumns.length; indexToForbid += 1) {\r\n      const leftIndex = indexToForbid <= columnIndex ? indexToForbid - 1 : indexToForbid;\r\n      const rightIndex = indexToForbid < columnIndex ? indexToForbid : indexToForbid + 1;\r\n      if (limitingGroupId !== null) {\r\n        // verify this indexToForbid will be linked to the limiting group. Otherwise forbid it\r\n        let allowIndex = false;\r\n        if (leftIndex >= 0 && getGroupPathFromColumnIndex(leftIndex).includes(limitingGroupId)) {\r\n          allowIndex = true;\r\n        } else if (rightIndex < allColumns.length && getGroupPathFromColumnIndex(rightIndex).includes(limitingGroupId)) {\r\n          allowIndex = true;\r\n        }\r\n        if (!allowIndex) {\r\n          forbiddenIndexes.current[indexToForbid] = true;\r\n        }\r\n      }\r\n\r\n      // Verify we are not splitting another group\r\n      if (leftIndex >= 0 && rightIndex < allColumns.length) {\r\n        getGroupPathFromColumnIndex(rightIndex).forEach(groupId => {\r\n          if (getGroupPathFromColumnIndex(leftIndex).includes(groupId)) {\r\n            if (!draggingColumnGroupPath.includes(groupId)) {\r\n              // moving here split the group groupId in two distincts chunks\r\n              if (!groupsLookup[groupId]?.freeReordering) {\r\n                forbiddenIndexes.current[indexToForbid] = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\r\n  const handleDragEnter = React.useCallback((params, event) => {\r\n    event.preventDefault();\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n  }, []);\r\n  const handleDragOver = React.useCallback((params, event) => {\r\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\r\n    if (!dragColField) {\r\n      return;\r\n    }\r\n    logger.debug(`Dragging over col ${params.field}`);\r\n    event.preventDefault();\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    const coordinates = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    };\r\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\r\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\r\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\r\n      const targetCol = apiRef.current.getColumn(params.field);\r\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\r\n      const visibleColumns = apiRef.current.getVisibleColumns();\r\n      const allColumns = apiRef.current.getAllColumns();\r\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\r\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && (theme.direction === 'rtl' ? dragColIndex < targetColIndex : targetColIndex < dragColIndex);\r\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && (theme.direction === 'rtl' ? targetColIndex < dragColIndex : dragColIndex < targetColIndex);\r\n      if (hasMovedLeft || hasMovedRight) {\r\n        let canBeReordered;\r\n        let indexOffsetInHiddenColumns = 0;\r\n        if (!targetCol.disableReorder) {\r\n          canBeReordered = true;\r\n        } else if (hasMovedLeft) {\r\n          canBeReordered = targetColVisibleIndex > 0 && !visibleColumns[targetColVisibleIndex - 1].disableReorder;\r\n        } else {\r\n          canBeReordered = targetColVisibleIndex < visibleColumns.length - 1 && !visibleColumns[targetColVisibleIndex + 1].disableReorder;\r\n        }\r\n        if (forbiddenIndexes.current[targetColIndex]) {\r\n          let nextVisibleColumnField;\r\n          let indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\r\n          if (hasMovedLeft) {\r\n            nextVisibleColumnField = targetColVisibleIndex > 0 ? visibleColumns[targetColVisibleIndex - 1].field : null;\r\n            while (indexWithOffset > 0 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\r\n              indexOffsetInHiddenColumns -= 1;\r\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\r\n            }\r\n          } else {\r\n            nextVisibleColumnField = targetColVisibleIndex + 1 < visibleColumns.length ? visibleColumns[targetColVisibleIndex + 1].field : null;\r\n            while (indexWithOffset < allColumns.length - 1 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\r\n              indexOffsetInHiddenColumns += 1;\r\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\r\n            }\r\n          }\r\n          if (forbiddenIndexes.current[indexWithOffset] || allColumns[indexWithOffset].field === nextVisibleColumnField) {\r\n            // If we ended up on a visible column, or a forbidden one, we cannot do the reorder\r\n            canBeReordered = false;\r\n          }\r\n        }\r\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPipeProcessors('canBeReordered', canBeReordered, {\r\n          targetIndex: targetColVisibleIndex\r\n        });\r\n        if (canBeReorderedProcessed) {\r\n          apiRef.current.setColumnIndex(dragColField, targetColIndex + indexOffsetInHiddenColumns);\r\n        }\r\n      }\r\n      cursorPosition.current = coordinates;\r\n    }\r\n  }, [apiRef, logger, theme.direction]);\r\n  const handleDragEnd = React.useCallback((params, event) => {\r\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\r\n    if (props.disableColumnReorder || !dragColField) {\r\n      return;\r\n    }\r\n    logger.debug('End dragging col');\r\n    event.preventDefault();\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    clearTimeout(removeDnDStylesTimeout.current);\r\n    dragColNode.current = null;\r\n\r\n    // Check if the column was dropped outside the grid.\r\n    if (event.dataTransfer.dropEffect === 'none' && !props.keepColumnPositionIfDraggedOutside) {\r\n      // Accessing params.field may contain the wrong field as header elements are reused\r\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\r\n      originColumnIndex.current = null;\r\n    } else {\r\n      // Emit the columnOrderChange event only once when the reordering stops.\r\n      const columnOrderChangeParams = {\r\n        column: apiRef.current.getColumn(dragColField),\r\n        targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(dragColField),\r\n        oldIndex: originColumnIndex.current\r\n      };\r\n      apiRef.current.publishEvent('columnOrderChange', columnOrderChangeParams);\r\n    }\r\n    apiRef.current.setState(state => _extends({}, state, {\r\n      columnReorder: _extends({}, state.columnReorder, {\r\n        dragCol: ''\r\n      })\r\n    }));\r\n    apiRef.current.forceUpdate();\r\n  }, [props.disableColumnReorder, props.keepColumnPositionIfDraggedOutside, logger, apiRef]);\r\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleDragStart);\r\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnter', handleDragEnter);\r\n  useGridApiEventHandler(apiRef, 'columnHeaderDragOver', handleDragOver);\r\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleDragEnd);\r\n  useGridApiEventHandler(apiRef, 'cellDragEnter', handleDragEnter);\r\n  useGridApiEventHandler(apiRef, 'cellDragOver', handleDragOver);\r\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\r\n};", "import { createSelector } from '@mui/x-data-grid/internals';\r\nexport const gridColumnReorderSelector = state => state.columnReorder;\r\nexport const gridColumnReorderDragColSelector = createSelector(gridColumnReorderSelector, columnReorder => columnReorder.dragCol);", "import * as React from 'react';\r\nimport { useGridApiEventHandler } from '@mui/x-data-grid';\r\nimport { GRID_TREE_DATA_GROUPING_FIELD } from './gridTreeDataGroupColDef';\r\nexport const useGridTreeData = apiRef => {\r\n  /**\r\n   * EVENTS\r\n   */\r\n  const handleCellKeyDown = React.useCallback((params, event) => {\r\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\r\n    if (cellParams.colDef.field === GRID_TREE_DATA_GROUPING_FIELD && event.key === ' ' && !event.shiftKey) {\r\n      if (params.rowNode.type !== 'group') {\r\n        return;\r\n      }\r\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\r\n    }\r\n  }, [apiRef]);\r\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\r\n\r\n/**\r\n * TODO: Add sorting and filtering on the value and the filteredDescendantCount\r\n */\r\nexport const GRID_TREE_DATA_GROUPING_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\r\n  type: 'custom',\r\n  sortable: false,\r\n  filterable: false,\r\n  disableColumnMenu: true,\r\n  disableReorder: true,\r\n  align: 'left',\r\n  width: 200,\r\n  valueGetter: (value, row, column, apiRef) => {\r\n    const rowId = apiRef.current.getRowId(row);\r\n    const rowNode = apiRef.current.getRowNode(rowId);\r\n    return rowNode?.type === 'group' || rowNode?.type === 'leaf' ? rowNode.groupingKey : undefined;\r\n  }\r\n});\r\nexport const GRID_TREE_DATA_GROUPING_FIELD = '__tree_data_group__';\r\nexport const GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES = {\r\n  field: GRID_TREE_DATA_GROUPING_FIELD,\r\n  editable: false,\r\n  groupable: false\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"hideDescendantCount\"];\r\nimport * as React from 'react';\r\nimport { gridRowTreeSelector, useFirstRender, GRID_CHECKBOX_SELECTION_FIELD } from '@mui/x-data-grid';\r\nimport { useGridRegisterPipeProcessor, useGridRegisterStrategyProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_TREE_DATA_GROUPING_COL_DEF, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES } from './gridTreeDataGroupColDef';\r\nimport { filterRowTreeFromTreeData, TREE_DATA_STRATEGY } from './gridTreeDataUtils';\r\nimport { GridTreeDataGroupingCell } from '../../../components';\r\nimport { createRowTree } from '../../../utils/tree/createRowTree';\r\nimport { sortRowTree } from '../../../utils/tree/sortRowTree';\r\nimport { updateRowTree } from '../../../utils/tree/updateRowTree';\r\nimport { getVisibleRowsLookup } from '../../../utils/tree/utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const useGridTreeDataPreProcessors = (privateApiRef, props) => {\r\n  const setStrategyAvailability = React.useCallback(() => {\r\n    privateApiRef.current.setStrategyAvailability('rowTree', TREE_DATA_STRATEGY, props.treeData ? () => true : () => false);\r\n  }, [privateApiRef, props.treeData]);\r\n  const getGroupingColDef = React.useCallback(() => {\r\n    const groupingColDefProp = props.groupingColDef;\r\n    let colDefOverride;\r\n    if (typeof groupingColDefProp === 'function') {\r\n      const params = {\r\n        groupingName: TREE_DATA_STRATEGY,\r\n        fields: []\r\n      };\r\n      colDefOverride = groupingColDefProp(params);\r\n    } else {\r\n      colDefOverride = groupingColDefProp;\r\n    }\r\n    const _ref = colDefOverride ?? {},\r\n      {\r\n        hideDescendantCount\r\n      } = _ref,\r\n      colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n    const commonProperties = _extends({}, GRID_TREE_DATA_GROUPING_COL_DEF, {\r\n      renderCell: params => /*#__PURE__*/_jsx(GridTreeDataGroupingCell, _extends({}, params, {\r\n        hideDescendantCount: hideDescendantCount\r\n      })),\r\n      headerName: privateApiRef.current.getLocaleText('treeDataGroupingHeaderName')\r\n    });\r\n    return _extends({}, commonProperties, colDefOverrideProperties, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES);\r\n  }, [privateApiRef, props.groupingColDef]);\r\n  const updateGroupingColumn = React.useCallback(columnsState => {\r\n    const groupingColDefField = GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES.field;\r\n    const shouldHaveGroupingColumn = props.treeData;\r\n    const prevGroupingColumn = columnsState.lookup[groupingColDefField];\r\n    if (shouldHaveGroupingColumn) {\r\n      const newGroupingColumn = getGroupingColDef();\r\n      if (prevGroupingColumn) {\r\n        newGroupingColumn.width = prevGroupingColumn.width;\r\n        newGroupingColumn.flex = prevGroupingColumn.flex;\r\n      }\r\n      columnsState.lookup[groupingColDefField] = newGroupingColumn;\r\n      if (prevGroupingColumn == null) {\r\n        const index = columnsState.orderedFields[0] === GRID_CHECKBOX_SELECTION_FIELD ? 1 : 0;\r\n        columnsState.orderedFields = [...columnsState.orderedFields.slice(0, index), groupingColDefField, ...columnsState.orderedFields.slice(index)];\r\n      }\r\n    } else if (!shouldHaveGroupingColumn && prevGroupingColumn) {\r\n      delete columnsState.lookup[groupingColDefField];\r\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== groupingColDefField);\r\n    }\r\n    return columnsState;\r\n  }, [props.treeData, getGroupingColDef]);\r\n  const createRowTreeForTreeData = React.useCallback(params => {\r\n    if (!props.getTreeDataPath) {\r\n      throw new Error('MUI X: No getTreeDataPath given.');\r\n    }\r\n    const getRowTreeBuilderNode = rowId => ({\r\n      id: rowId,\r\n      path: props.getTreeDataPath(params.dataRowIdToModelLookup[rowId]).map(key => ({\r\n        key,\r\n        field: null\r\n      }))\r\n    });\r\n    const onDuplicatePath = (firstId, secondId, path) => {\r\n      throw new Error(['MUI X: The path returned by `getTreeDataPath` should be unique.', `The rows with id #${firstId} and #${secondId} have the same.`, `Path: ${JSON.stringify(path.map(step => step.key))}.`].join('\\n'));\r\n    };\r\n    if (params.updates.type === 'full') {\r\n      return createRowTree({\r\n        previousTree: params.previousTree,\r\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\r\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\r\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\r\n        groupingName: TREE_DATA_STRATEGY,\r\n        onDuplicatePath\r\n      });\r\n    }\r\n    return updateRowTree({\r\n      nodes: {\r\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\r\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\r\n        removed: params.updates.actions.remove\r\n      },\r\n      previousTree: params.previousTree,\r\n      previousTreeDepth: params.previousTreeDepths,\r\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\r\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\r\n      groupingName: TREE_DATA_STRATEGY\r\n    });\r\n  }, [props.getTreeDataPath, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\r\n  const filterRows = React.useCallback(params => {\r\n    const rowTree = gridRowTreeSelector(privateApiRef);\r\n    return filterRowTreeFromTreeData({\r\n      rowTree,\r\n      isRowMatchingFilters: params.isRowMatchingFilters,\r\n      disableChildrenFiltering: props.disableChildrenFiltering,\r\n      filterModel: params.filterModel,\r\n      apiRef: privateApiRef\r\n    });\r\n  }, [privateApiRef, props.disableChildrenFiltering]);\r\n  const sortRows = React.useCallback(params => {\r\n    const rowTree = gridRowTreeSelector(privateApiRef);\r\n    return sortRowTree({\r\n      rowTree,\r\n      sortRowList: params.sortRowList,\r\n      disableChildrenSorting: props.disableChildrenSorting,\r\n      shouldRenderGroupBelowLeaves: false\r\n    });\r\n  }, [privateApiRef, props.disableChildrenSorting]);\r\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateGroupingColumn);\r\n  useGridRegisterStrategyProcessor(privateApiRef, TREE_DATA_STRATEGY, 'rowTreeCreation', createRowTreeForTreeData);\r\n  useGridRegisterStrategyProcessor(privateApiRef, TREE_DATA_STRATEGY, 'filtering', filterRows);\r\n  useGridRegisterStrategyProcessor(privateApiRef, TREE_DATA_STRATEGY, 'sorting', sortRows);\r\n  useGridRegisterStrategyProcessor(privateApiRef, TREE_DATA_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\r\n\r\n  /**\r\n   * 1ST RENDER\r\n   */\r\n  useFirstRender(() => {\r\n    setStrategyAvailability();\r\n  });\r\n\r\n  /**\r\n   * EFFECTS\r\n   */\r\n  const isFirstRender = React.useRef(true);\r\n  React.useEffect(() => {\r\n    if (!isFirstRender.current) {\r\n      setStrategyAvailability();\r\n    } else {\r\n      isFirstRender.current = false;\r\n    }\r\n  }, [setStrategyAvailability]);\r\n};", "import { passFilterLogic } from '@mui/x-data-grid/internals';\r\nexport const TREE_DATA_STRATEGY = 'tree-data';\r\n\r\n/**\r\n * A node is visible if one of the following criteria is met:\r\n * - One of its children is passing the filter\r\n * - It is passing the filter\r\n */\r\nexport const filterRowTreeFromTreeData = params => {\r\n  const {\r\n    apiRef,\r\n    rowTree,\r\n    disableChildrenFiltering,\r\n    isRowMatchingFilters\r\n  } = params;\r\n  const filteredRowsLookup = {};\r\n  const filteredDescendantCountLookup = {};\r\n  const filterCache = {};\r\n  const filterResults = {\r\n    passingFilterItems: null,\r\n    passingQuickFilterValues: null\r\n  };\r\n  const filterTreeNode = (node, isParentMatchingFilters, areAncestorsExpanded) => {\r\n    const shouldSkipFilters = disableChildrenFiltering && node.depth > 0;\r\n    let isMatchingFilters;\r\n    if (shouldSkipFilters) {\r\n      isMatchingFilters = null;\r\n    } else if (!isRowMatchingFilters || node.type === 'footer') {\r\n      isMatchingFilters = true;\r\n    } else {\r\n      const row = apiRef.current.getRow(node.id);\r\n      isRowMatchingFilters(row, undefined, filterResults);\r\n      isMatchingFilters = passFilterLogic([filterResults.passingFilterItems], [filterResults.passingQuickFilterValues], params.filterModel, params.apiRef, filterCache);\r\n    }\r\n    let filteredDescendantCount = 0;\r\n    if (node.type === 'group') {\r\n      node.children.forEach(childId => {\r\n        const childNode = rowTree[childId];\r\n        const childSubTreeSize = filterTreeNode(childNode, isMatchingFilters ?? isParentMatchingFilters, areAncestorsExpanded && !!node.childrenExpanded);\r\n        filteredDescendantCount += childSubTreeSize;\r\n      });\r\n    }\r\n    let shouldPassFilters;\r\n    switch (isMatchingFilters) {\r\n      case true:\r\n        {\r\n          shouldPassFilters = true;\r\n          break;\r\n        }\r\n      case false:\r\n        {\r\n          shouldPassFilters = filteredDescendantCount > 0;\r\n          break;\r\n        }\r\n      default:\r\n        {\r\n          shouldPassFilters = isParentMatchingFilters;\r\n          break;\r\n        }\r\n    }\r\n    filteredRowsLookup[node.id] = shouldPassFilters;\r\n    if (!shouldPassFilters) {\r\n      return 0;\r\n    }\r\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\r\n    if (node.type === 'footer') {\r\n      return filteredDescendantCount;\r\n    }\r\n    return filteredDescendantCount + 1;\r\n  };\r\n  const nodes = Object.values(rowTree);\r\n  for (let i = 0; i < nodes.length; i += 1) {\r\n    const node = nodes[i];\r\n    if (node.depth === 0) {\r\n      filterTreeNode(node, true, true);\r\n    }\r\n  }\r\n  return {\r\n    filteredRowsLookup,\r\n    filteredDescendantCountLookup\r\n  };\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport Box from '@mui/material/Box';\r\nimport { useGridSelector, gridFilteredDescendantCountLookupSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['treeDataGroupingCell'],\r\n    toggle: ['treeDataGroupingCellToggle']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\nfunction GridTreeDataGroupingCell(props) {\r\n  const {\r\n    id,\r\n    field,\r\n    formattedValue,\r\n    rowNode,\r\n    hideDescendantCount,\r\n    offsetMultiplier = 2\r\n  } = props;\r\n  const rootProps = useGridRootProps();\r\n  const apiRef = useGridApiContext();\r\n  const ownerState = {\r\n    classes: rootProps.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const filteredDescendantCountLookup = useGridSelector(apiRef, gridFilteredDescendantCountLookupSelector);\r\n  const filteredDescendantCount = filteredDescendantCountLookup[rowNode.id] ?? 0;\r\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.treeDataCollapseIcon : rootProps.slots.treeDataExpandIcon;\r\n  const handleClick = event => {\r\n    apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\r\n    apiRef.current.setCellFocus(id, field);\r\n    event.stopPropagation(); // TODO remove event.stopPropagation\r\n  };\r\n  return /*#__PURE__*/_jsxs(Box, {\r\n    className: classes.root,\r\n    sx: {\r\n      ml: rowNode.depth * offsetMultiplier\r\n    },\r\n    children: [/*#__PURE__*/_jsx(\"div\", {\r\n      className: classes.toggle,\r\n      children: filteredDescendantCount > 0 && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\r\n        size: \"small\",\r\n        onClick: handleClick,\r\n        tabIndex: -1,\r\n        \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\r\n      }, rootProps?.slotProps?.baseIconButton, {\r\n        children: /*#__PURE__*/_jsx(Icon, {\r\n          fontSize: \"inherit\"\r\n        })\r\n      }))\r\n    }), /*#__PURE__*/_jsxs(\"span\", {\r\n      children: [formattedValue === undefined ? rowNode.groupingKey : formattedValue, !hideDescendantCount && filteredDescendantCount > 0 ? ` (${filteredDescendantCount})` : '']\r\n    })]\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? GridTreeDataGroupingCell.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * GridApi that let you manipulate the grid.\r\n   */\r\n  api: PropTypes.object.isRequired,\r\n  /**\r\n   * The mode of the cell.\r\n   */\r\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\r\n  /**\r\n   * The column of the row that the current cell belongs to.\r\n   */\r\n  colDef: PropTypes.object.isRequired,\r\n  /**\r\n   * The column field of the cell that triggered the event.\r\n   */\r\n  field: PropTypes.string.isRequired,\r\n  /**\r\n   * A ref allowing to set imperative focus.\r\n   * It can be passed to the element that should receive focus.\r\n   * @ignore - do not document.\r\n   */\r\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      focus: PropTypes.func.isRequired\r\n    })\r\n  })]),\r\n  /**\r\n   * The cell value formatted with the column valueFormatter.\r\n   */\r\n  formattedValue: PropTypes.any,\r\n  /**\r\n   * If true, the cell is the active element.\r\n   */\r\n  hasFocus: PropTypes.bool.isRequired,\r\n  hideDescendantCount: PropTypes.bool,\r\n  /**\r\n   * The grid row id.\r\n   */\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  /**\r\n   * If true, the cell is editable.\r\n   */\r\n  isEditable: PropTypes.bool,\r\n  /**\r\n   * The cell offset multiplier used for calculating cell offset (`rowNode.depth * offsetMultiplier` px).\r\n   * @default 2\r\n   */\r\n  offsetMultiplier: PropTypes.number,\r\n  /**\r\n   * The row model of the row that the current cell belongs to.\r\n   */\r\n  row: PropTypes.any.isRequired,\r\n  /**\r\n   * The node of the row that the current cell belongs to.\r\n   */\r\n  rowNode: PropTypes.object.isRequired,\r\n  /**\r\n   * the tabIndex value.\r\n   */\r\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\r\n  /**\r\n   * The cell value.\r\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport { GridTreeDataGroupingCell };", "import { useGridRootProps as useCommunityGridRootProps } from '@mui/x-data-grid';\r\nexport const useGridRootProps = useCommunityGridRootProps;", "import { useGridApiContext as useCommunityGridApiContext } from '@mui/x-data-grid';\r\nexport const useGridApiContext = useCommunityGridApiContext;", "import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { GridPinnedColumnPosition } from '@mui/x-data-grid';\r\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nfunction GridColumnMenuPinningItem(props) {\r\n  const {\r\n    colDef,\r\n    onClick\r\n  } = props;\r\n  const apiRef = useGridApiContext();\r\n  const rootProps = useGridRootProps();\r\n  const theme = useTheme();\r\n  const pinColumn = React.useCallback(side => event => {\r\n    apiRef.current.pinColumn(colDef.field, side);\r\n    onClick(event);\r\n  }, [apiRef, colDef.field, onClick]);\r\n  const unpinColumn = event => {\r\n    apiRef.current.unpinColumn(colDef.field);\r\n    onClick(event);\r\n  };\r\n  const pinToLeftMenuItem = /*#__PURE__*/_jsxs(MenuItem, {\r\n    onClick: pinColumn(GridPinnedColumnPosition.LEFT),\r\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\r\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuPinLeftIcon, {\r\n        fontSize: \"small\"\r\n      })\r\n    }), /*#__PURE__*/_jsx(ListItemText, {\r\n      children: apiRef.current.getLocaleText('pinToLeft')\r\n    })]\r\n  });\r\n  const pinToRightMenuItem = /*#__PURE__*/_jsxs(MenuItem, {\r\n    onClick: pinColumn(GridPinnedColumnPosition.RIGHT),\r\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\r\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuPinRightIcon, {\r\n        fontSize: \"small\"\r\n      })\r\n    }), /*#__PURE__*/_jsx(ListItemText, {\r\n      children: apiRef.current.getLocaleText('pinToRight')\r\n    })]\r\n  });\r\n  if (!colDef) {\r\n    return null;\r\n  }\r\n  const side = apiRef.current.isColumnPinned(colDef.field);\r\n  if (side) {\r\n    const otherSide = side === GridPinnedColumnPosition.RIGHT ? GridPinnedColumnPosition.LEFT : GridPinnedColumnPosition.RIGHT;\r\n    const label = otherSide === GridPinnedColumnPosition.RIGHT ? 'pinToRight' : 'pinToLeft';\r\n    const Icon = side === GridPinnedColumnPosition.RIGHT ? rootProps.slots.columnMenuPinLeftIcon : rootProps.slots.columnMenuPinRightIcon;\r\n    return /*#__PURE__*/_jsxs(React.Fragment, {\r\n      children: [/*#__PURE__*/_jsxs(MenuItem, {\r\n        onClick: pinColumn(otherSide),\r\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\r\n          children: /*#__PURE__*/_jsx(Icon, {\r\n            fontSize: \"small\"\r\n          })\r\n        }), /*#__PURE__*/_jsx(ListItemText, {\r\n          children: apiRef.current.getLocaleText(label)\r\n        })]\r\n      }), /*#__PURE__*/_jsxs(MenuItem, {\r\n        onClick: unpinColumn,\r\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\r\n          children: apiRef.current.getLocaleText('unpin')\r\n        })]\r\n      })]\r\n    });\r\n  }\r\n  if (theme.direction === 'rtl') {\r\n    return /*#__PURE__*/_jsxs(React.Fragment, {\r\n      children: [pinToRightMenuItem, pinToLeftMenuItem]\r\n    });\r\n  }\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [pinToLeftMenuItem, pinToRightMenuItem]\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuPinningItem.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  colDef: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n} : void 0;\r\nexport { GridColumnMenuPinningItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { getDataGridUtilityClass, useGridSelector } from '@mui/x-data-grid';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\r\nimport { gridDetailPanelExpandedRowsContentCacheSelector } from '../hooks/features/detailPanel/gridDetailPanelSelector';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    isExpanded\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['detailPanelToggleCell', isExpanded && 'detailPanelToggleCell--expanded']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\nfunction GridDetailPanelToggleCell(props) {\r\n  const {\r\n    id,\r\n    value: isExpanded\r\n  } = props;\r\n  const rootProps = useGridRootProps();\r\n  const apiRef = useGridApiContext();\r\n  const ownerState = {\r\n    classes: rootProps.classes,\r\n    isExpanded\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\r\n  const hasContent = /*#__PURE__*/React.isValidElement(contentCache[id]);\r\n  const Icon = isExpanded ? rootProps.slots.detailPanelCollapseIcon : rootProps.slots.detailPanelExpandIcon;\r\n  return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\r\n    size: \"small\",\r\n    tabIndex: -1,\r\n    disabled: !hasContent,\r\n    className: classes.root,\r\n    \"aria-label\": isExpanded ? apiRef.current.getLocaleText('collapseDetailPanel') : apiRef.current.getLocaleText('expandDetailPanel')\r\n  }, rootProps.slotProps?.baseIconButton, {\r\n    children: /*#__PURE__*/_jsx(Icon, {\r\n      fontSize: \"inherit\"\r\n    })\r\n  }));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? GridDetailPanelToggleCell.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * GridApi that let you manipulate the grid.\r\n   */\r\n  api: PropTypes.object.isRequired,\r\n  /**\r\n   * The mode of the cell.\r\n   */\r\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\r\n  /**\r\n   * The column of the row that the current cell belongs to.\r\n   */\r\n  colDef: PropTypes.object.isRequired,\r\n  /**\r\n   * The column field of the cell that triggered the event.\r\n   */\r\n  field: PropTypes.string.isRequired,\r\n  /**\r\n   * A ref allowing to set imperative focus.\r\n   * It can be passed to the element that should receive focus.\r\n   * @ignore - do not document.\r\n   */\r\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      focus: PropTypes.func.isRequired\r\n    })\r\n  })]),\r\n  /**\r\n   * The cell value formatted with the column valueFormatter.\r\n   */\r\n  formattedValue: PropTypes.any,\r\n  /**\r\n   * If true, the cell is the active element.\r\n   */\r\n  hasFocus: PropTypes.bool.isRequired,\r\n  /**\r\n   * The grid row id.\r\n   */\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  /**\r\n   * If true, the cell is editable.\r\n   */\r\n  isEditable: PropTypes.bool,\r\n  /**\r\n   * The row model of the row that the current cell belongs to.\r\n   */\r\n  row: PropTypes.any.isRequired,\r\n  /**\r\n   * The node of the row that the current cell belongs to.\r\n   */\r\n  rowNode: PropTypes.object.isRequired,\r\n  /**\r\n   * the tabIndex value.\r\n   */\r\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\r\n  /**\r\n   * The cell value.\r\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport { GridDetailPanelToggleCell };", "import { createSelectorMemoized } from '@mui/x-data-grid/internals';\r\nexport const gridDetailPanelExpandedRowIdsSelector = state => state.detailPanel.expandedRowIds;\r\nexport const gridDetailPanelExpandedRowsContentCacheSelector = state => state.detailPanel.contentCache;\r\nexport const gridDetailPanelRawHeightCacheSelector = state => state.detailPanel.heightCache;\r\n\r\n// TODO v6: Make this selector return the full object, including the autoHeight flag\r\nexport const gridDetailPanelExpandedRowsHeightCacheSelector = createSelectorMemoized(gridDetailPanelRawHeightCacheSelector, heightCache => Object.entries(heightCache).reduce((acc, [id, {\r\n  height\r\n}]) => {\r\n  acc[id] = height || 0;\r\n  return acc;\r\n}, {}));", "import * as React from 'react';\r\nimport { createSvgIcon } from '@mui/material/utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const GridPushPinRightIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\r\n  transform: \"rotate(-30 15 10)\",\r\n  children: /*#__PURE__*/_jsx(\"path\", {\r\n    d: \"M16,9V4l1,0c0.55,0,1-0.45,1-1v0c0-0.55-0.45-1-1-1H7C6.45,2,6,2.45,6,3v0 c0,0.55,0.45,1,1,1l1,0v5c0,1.66-1.34,3-3,3h0v2h5.97v7l1,1l1-1v-7H19v-2h0C17.34,12,16,10.66,16,9z\",\r\n    fillRule: \"evenodd\"\r\n  })\r\n}), 'PushPinRight');\r\nexport const GridPushPinLeftIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\r\n  transform: \"rotate(30 8 12)\",\r\n  children: /*#__PURE__*/_jsx(\"path\", {\r\n    d: \"M16,9V4l1,0c0.55,0,1-0.45,1-1v0c0-0.55-0.45-1-1-1H7C6.45,2,6,2.45,6,3v0 c0,0.55,0.45,1,1,1l1,0v5c0,1.66-1.34,3-3,3h0v2h5.97v7l1,1l1-1v-7H19v-2h0C17.34,12,16,10.66,16,9z\",\r\n    fillRule: \"evenodd\"\r\n  })\r\n}), 'PushPinLeft');", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"operators\", \"item\", \"field\", \"buttonRef\", \"headerFilterMenuRef\", \"disabled\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useGridApiContext, useGridSelector } from '@mui/x-data-grid';\r\nimport { refType, unstable_useId as useId } from '@mui/utils';\r\nimport { gridHeaderFilteringMenuSelector } from '@mui/x-data-grid/internals';\r\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst sx = {\r\n  width: 22,\r\n  height: 22,\r\n  margin: 'auto 0 10px 5px'\r\n};\r\nfunction GridHeaderFilterMenuContainer(props) {\r\n  const {\r\n      operators,\r\n      item,\r\n      field,\r\n      buttonRef,\r\n      headerFilterMenuRef,\r\n      disabled = false\r\n    } = props,\r\n    others = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const buttonId = useId();\r\n  const menuId = useId();\r\n  const rootProps = useGridRootProps();\r\n  const apiRef = useGridApiContext();\r\n  const menuOpenField = useGridSelector(apiRef, gridHeaderFilteringMenuSelector);\r\n  const open = Boolean(menuOpenField === field && headerFilterMenuRef.current);\r\n  const handleClick = event => {\r\n    headerFilterMenuRef.current = event.currentTarget;\r\n    apiRef.current.showHeaderFilterMenu(field);\r\n  };\r\n  if (!rootProps.slots.headerFilterMenu) {\r\n    return null;\r\n  }\r\n  const label = apiRef.current.getLocaleText('filterPanelOperator');\r\n  const labelString = label ? String(label) : undefined;\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\r\n      id: buttonId,\r\n      ref: buttonRef,\r\n      \"aria-label\": labelString,\r\n      title: labelString,\r\n      \"aria-controls\": menuId,\r\n      \"aria-expanded\": open ? 'true' : undefined,\r\n      \"aria-haspopup\": \"true\",\r\n      tabIndex: -1,\r\n      size: \"small\",\r\n      onClick: handleClick,\r\n      sx: sx,\r\n      disabled: disabled\r\n    }, rootProps.slotProps?.baseIconButton, {\r\n      children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {\r\n        fontSize: \"small\"\r\n      })\r\n    })), /*#__PURE__*/_jsx(rootProps.slots.headerFilterMenu, _extends({\r\n      field: field,\r\n      open: open,\r\n      item: item,\r\n      target: headerFilterMenuRef.current,\r\n      operators: operators,\r\n      labelledBy: buttonId,\r\n      id: menuId\r\n    }, others))]\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterMenuContainer.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  applyFilterChanges: PropTypes.func.isRequired,\r\n  buttonRef: refType,\r\n  disabled: PropTypes.bool,\r\n  field: PropTypes.string.isRequired,\r\n  headerFilterMenuRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired,\r\n  item: PropTypes.shape({\r\n    field: PropTypes.string.isRequired,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    operator: PropTypes.string.isRequired,\r\n    value: PropTypes.any\r\n  }).isRequired,\r\n  operators: PropTypes.arrayOf(PropTypes.shape({\r\n    getApplyFilterFn: PropTypes.func.isRequired,\r\n    getValueAsString: PropTypes.func,\r\n    headerLabel: PropTypes.string,\r\n    InputComponent: PropTypes.elementType,\r\n    InputComponentProps: PropTypes.object,\r\n    label: PropTypes.string,\r\n    requiresFilterValue: PropTypes.bool,\r\n    value: PropTypes.string.isRequired\r\n  })).isRequired\r\n} : void 0;\r\nexport { GridHeaderFilterMenuContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"colIndex\", \"height\", \"hasFocus\", \"width\", \"headerClassName\", \"colDef\", \"item\", \"headerFilterMenuRef\", \"InputComponentProps\", \"showClearIcon\", \"pinnedPosition\", \"style\", \"indexInSection\", \"sectionLength\", \"gridHasFiller\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\r\nimport { gridVisibleColumnFieldsSelector, getDataGridUtilityClass, useGridSelector, gridFilterModelSelector, gridFilterableColumnLookupSelector } from '@mui/x-data-grid';\r\nimport { fastMemo, useGridPrivateApiContext, gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector, isNavigationKey, shouldCellShowLeftBorder, shouldCellShowRightBorder } from '@mui/x-data-grid/internals';\r\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\r\nimport { GridHeaderFilterMenuContainer } from './GridHeaderFilterMenuContainer';\r\nimport { GridHeaderFilterClearButton } from './GridHeaderFilterClearButton';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    colDef,\r\n    classes,\r\n    showRightBorder,\r\n    showLeftBorder,\r\n    pinnedPosition\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\nconst dateSx = {\r\n  [`& input[value=\"\"]:not(:focus)`]: {\r\n    color: 'transparent'\r\n  }\r\n};\r\nconst GridHeaderFilterCell = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const {\r\n      colIndex,\r\n      height,\r\n      hasFocus,\r\n      width,\r\n      headerClassName,\r\n      colDef,\r\n      item,\r\n      headerFilterMenuRef,\r\n      InputComponentProps,\r\n      showClearIcon = true,\r\n      pinnedPosition,\r\n      style: styleProp,\r\n      indexInSection,\r\n      sectionLength,\r\n      gridHasFiller\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const apiRef = useGridPrivateApiContext();\r\n  const columnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\r\n  const rootProps = useGridRootProps();\r\n  const cellRef = React.useRef(null);\r\n  const handleRef = useForkRef(ref, cellRef);\r\n  const inputRef = React.useRef(null);\r\n  const buttonRef = React.useRef(null);\r\n  const editingField = useGridSelector(apiRef, gridHeaderFilteringEditFieldSelector);\r\n  const isEditing = editingField === colDef.field;\r\n  const menuOpenField = useGridSelector(apiRef, gridHeaderFilteringMenuSelector);\r\n  const isMenuOpen = menuOpenField === colDef.field;\r\n\r\n  // TODO: Support for `isAnyOf` operator\r\n  const filterOperators = React.useMemo(() => {\r\n    if (!colDef.filterOperators) {\r\n      return [];\r\n    }\r\n    return colDef.filterOperators.filter(operator => operator.value !== 'isAnyOf');\r\n  }, [colDef.filterOperators]);\r\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\r\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\r\n  const isFilterReadOnly = React.useMemo(() => {\r\n    if (!filterModel?.items.length) {\r\n      return false;\r\n    }\r\n    const filterModelItem = filterModel.items.find(it => it.field === colDef.field);\r\n    return filterModelItem ? !filterableColumnsLookup[filterModelItem.field] : false;\r\n  }, [colDef.field, filterModel, filterableColumnsLookup]);\r\n  const currentOperator = React.useMemo(() => filterOperators.find(operator => operator.value === item.operator) ?? filterOperators[0], [item.operator, filterOperators]);\r\n  const InputComponent = colDef.filterable || isFilterReadOnly ? currentOperator.InputComponent : null;\r\n  const applyFilterChanges = React.useCallback(updatedItem => {\r\n    if (item.value && !updatedItem.value) {\r\n      apiRef.current.deleteFilterItem(updatedItem);\r\n      return;\r\n    }\r\n    apiRef.current.upsertFilterItem(updatedItem);\r\n  }, [apiRef, item]);\r\n  const clearFilterItem = React.useCallback(() => {\r\n    apiRef.current.deleteFilterItem(item);\r\n  }, [apiRef, item]);\r\n  let headerFilterComponent;\r\n  if (colDef.renderHeaderFilter) {\r\n    headerFilterComponent = colDef.renderHeaderFilter(_extends({}, props, {\r\n      inputRef\r\n    }));\r\n  }\r\n  React.useLayoutEffect(() => {\r\n    if (hasFocus && !isMenuOpen) {\r\n      let focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\r\n      if (isEditing && InputComponent) {\r\n        focusableElement = inputRef.current;\r\n      }\r\n      const elementToFocus = focusableElement || cellRef.current;\r\n      elementToFocus?.focus();\r\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\r\n    }\r\n  }, [InputComponent, apiRef, hasFocus, isEditing, isMenuOpen]);\r\n  const onKeyDown = React.useCallback(event => {\r\n    if (isMenuOpen || isNavigationKey(event.key) || isFilterReadOnly) {\r\n      return;\r\n    }\r\n    switch (event.key) {\r\n      case 'Escape':\r\n        if (isEditing) {\r\n          apiRef.current.stopHeaderFilterEditMode();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n        if (isEditing) {\r\n          if (!event.defaultPrevented) {\r\n            apiRef.current.stopHeaderFilterEditMode();\r\n            break;\r\n          }\r\n        }\r\n        if (event.metaKey || event.ctrlKey) {\r\n          headerFilterMenuRef.current = buttonRef.current;\r\n          apiRef.current.showHeaderFilterMenu(colDef.field);\r\n          break;\r\n        }\r\n        apiRef.current.startHeaderFilterEditMode(colDef.field);\r\n        break;\r\n      case 'Tab':\r\n        {\r\n          if (isEditing) {\r\n            const fieldToFocus = columnFields[colIndex + (event.shiftKey ? -1 : 1)] ?? null;\r\n            if (fieldToFocus) {\r\n              apiRef.current.startHeaderFilterEditMode(fieldToFocus);\r\n              apiRef.current.setColumnHeaderFilterFocus(fieldToFocus, event);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      default:\r\n        if (isEditing || event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) {\r\n          break;\r\n        }\r\n        apiRef.current.startHeaderFilterEditMode(colDef.field);\r\n        break;\r\n    }\r\n  }, [apiRef, colDef.field, colIndex, columnFields, headerFilterMenuRef, isEditing, isFilterReadOnly, isMenuOpen]);\r\n  const publish = React.useCallback((eventName, propHandler) => event => {\r\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\r\n    if (propHandler) {\r\n      propHandler(event);\r\n    }\r\n  }, [apiRef, colDef.field]);\r\n  const onMouseDown = React.useCallback(event => {\r\n    if (!hasFocus) {\r\n      if (inputRef.current?.contains?.(event.target)) {\r\n        inputRef.current.focus();\r\n      }\r\n      apiRef.current.setColumnHeaderFilterFocus(colDef.field, event);\r\n    }\r\n  }, [apiRef, colDef.field, hasFocus]);\r\n  const mouseEventsHandlers = React.useMemo(() => ({\r\n    onKeyDown: publish('headerFilterKeyDown', onKeyDown),\r\n    onClick: publish('headerFilterClick'),\r\n    onMouseDown: publish('headerFilterMouseDown', onMouseDown),\r\n    onBlur: publish('headerFilterBlur')\r\n  }), [onMouseDown, onKeyDown, publish]);\r\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\r\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\r\n  const ownerState = _extends({}, rootProps, {\r\n    pinnedPosition,\r\n    colDef,\r\n    showLeftBorder,\r\n    showRightBorder\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const isNoInputOperator = currentOperator.requiresFilterValue === false;\r\n  const isApplied = Boolean(item?.value) || isNoInputOperator;\r\n  const label = currentOperator.headerLabel ?? apiRef.current.getLocaleText(`headerFilterOperator${capitalize(item.operator)}`);\r\n  const isFilterActive = isApplied || hasFocus;\r\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\r\n    className: clsx(classes.root, headerClassName),\r\n    ref: handleRef,\r\n    style: _extends({\r\n      height,\r\n      width,\r\n      minWidth: width,\r\n      maxWidth: width\r\n    }, styleProp),\r\n    role: \"columnheader\",\r\n    \"aria-colindex\": colIndex + 1,\r\n    \"aria-label\": headerFilterComponent == null ? colDef.headerName ?? colDef.field : undefined\r\n  }, other, mouseEventsHandlers, {\r\n    children: [headerFilterComponent, InputComponent && headerFilterComponent === undefined ? /*#__PURE__*/_jsxs(React.Fragment, {\r\n      children: [/*#__PURE__*/_jsx(InputComponent, _extends({\r\n        apiRef: apiRef,\r\n        item: item,\r\n        inputRef: inputRef,\r\n        applyValue: applyFilterChanges,\r\n        onFocus: () => apiRef.current.startHeaderFilterEditMode(colDef.field),\r\n        onBlur: event => {\r\n          apiRef.current.stopHeaderFilterEditMode();\r\n          // Blurring an input element should reset focus state only if `relatedTarget` is not the header filter cell\r\n          if (!event.relatedTarget?.className.includes('columnHeader')) {\r\n            apiRef.current.setState(state => _extends({}, state, {\r\n              focus: {\r\n                cell: null,\r\n                columnHeader: null,\r\n                columnHeaderFilter: null,\r\n                columnGroupHeader: null\r\n              }\r\n            }));\r\n          }\r\n        },\r\n        label: capitalize(label),\r\n        placeholder: \"\",\r\n        isFilterActive: isFilterActive,\r\n        clearButton: showClearIcon && isApplied ? /*#__PURE__*/_jsx(GridHeaderFilterClearButton, {\r\n          onClick: clearFilterItem,\r\n          disabled: isFilterReadOnly\r\n        }) : null,\r\n        disabled: isFilterReadOnly || isNoInputOperator,\r\n        tabIndex: -1,\r\n        InputLabelProps: null,\r\n        sx: colDef.type === 'date' || colDef.type === 'dateTime' ? dateSx : undefined\r\n      }, isNoInputOperator ? {\r\n        value: ''\r\n      } : {}, currentOperator?.InputComponentProps, InputComponentProps)), /*#__PURE__*/_jsx(GridHeaderFilterMenuContainer, {\r\n        operators: filterOperators,\r\n        item: item,\r\n        field: colDef.field,\r\n        disabled: isFilterReadOnly,\r\n        applyFilterChanges: applyFilterChanges,\r\n        headerFilterMenuRef: headerFilterMenuRef,\r\n        buttonRef: buttonRef\r\n      })]\r\n    }) : null]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterCell.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  colDef: PropTypes.object.isRequired,\r\n  colIndex: PropTypes.number.isRequired,\r\n  gridHasFiller: PropTypes.bool.isRequired,\r\n  hasFocus: PropTypes.bool,\r\n  /**\r\n   * Class name that will be added in the column header cell.\r\n   */\r\n  headerClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  headerFilterMenuRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  indexInSection: PropTypes.number.isRequired,\r\n  InputComponentProps: PropTypes.object,\r\n  item: PropTypes.shape({\r\n    field: PropTypes.string.isRequired,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    operator: PropTypes.string.isRequired,\r\n    value: PropTypes.any\r\n  }).isRequired,\r\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\r\n  sectionLength: PropTypes.number.isRequired,\r\n  showClearIcon: PropTypes.bool,\r\n  sortIndex: PropTypes.number,\r\n  style: PropTypes.object,\r\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\r\n  width: PropTypes.number.isRequired\r\n} : void 0;\r\nconst Memoized = fastMemo(GridHeaderFilterCell);\r\nexport { Memoized as GridHeaderFilterCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst sx = {\r\n  padding: '2px'\r\n};\r\nfunction GridHeaderFilterClearButton(props) {\r\n  const rootProps = useGridRootProps();\r\n  return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\r\n    tabIndex: -1,\r\n    \"aria-label\": \"Clear filter\",\r\n    size: \"small\",\r\n    sx: sx\r\n  }, props, rootProps.slotProps?.baseIconButton, {\r\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuClearIcon, {\r\n      fontSize: \"inherit\"\r\n    })\r\n  }));\r\n}\r\nexport { GridHeaderFilterClearButton };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { unstable_capitalize as capitalize, HTMLElementType } from '@mui/utils';\r\nimport { useGridApiContext, GridMenu } from '@mui/x-data-grid';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction GridHeaderFilterMenu({\r\n  open,\r\n  field,\r\n  target,\r\n  applyFilterChanges,\r\n  operators,\r\n  item,\r\n  id,\r\n  labelledBy\r\n}) {\r\n  const apiRef = useGridApiContext();\r\n  const hideMenu = React.useCallback(() => {\r\n    apiRef.current.hideHeaderFilterMenu();\r\n  }, [apiRef]);\r\n  const handleListKeyDown = React.useCallback(event => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n    }\r\n    if (event.key === 'Escape' || event.key === 'Tab') {\r\n      hideMenu();\r\n    }\r\n  }, [hideMenu]);\r\n  if (!target) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(GridMenu, {\r\n    placement: \"bottom-end\",\r\n    open: open,\r\n    target: target,\r\n    onClose: hideMenu,\r\n    children: /*#__PURE__*/_jsx(MenuList, {\r\n      \"aria-labelledby\": labelledBy,\r\n      id: id,\r\n      onKeyDown: handleListKeyDown,\r\n      children: operators.map((op, i) => {\r\n        const label = op?.headerLabel ?? apiRef.current.getLocaleText(`headerFilterOperator${capitalize(op.value)}`);\r\n        return /*#__PURE__*/_jsx(MenuItem, {\r\n          onClick: () => {\r\n            applyFilterChanges(_extends({}, item, {\r\n              operator: op.value\r\n            }));\r\n            hideMenu();\r\n          },\r\n          autoFocus: i === 0 ? open : false,\r\n          selected: op.value === item.operator,\r\n          children: label\r\n        }, `${field}-${op.value}`);\r\n      })\r\n    })\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterMenu.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  applyFilterChanges: PropTypes.func.isRequired,\r\n  field: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  item: PropTypes.shape({\r\n    field: PropTypes.string.isRequired,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    operator: PropTypes.string.isRequired,\r\n    value: PropTypes.any\r\n  }).isRequired,\r\n  labelledBy: PropTypes.string.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  operators: PropTypes.arrayOf(PropTypes.shape({\r\n    getApplyFilterFn: PropTypes.func.isRequired,\r\n    getValueAsString: PropTypes.func,\r\n    headerLabel: PropTypes.string,\r\n    InputComponent: PropTypes.elementType,\r\n    InputComponentProps: PropTypes.object,\r\n    label: PropTypes.string,\r\n    requiresFilterValue: PropTypes.bool,\r\n    value: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  target: HTMLElementType\r\n} : void 0;\r\nexport { GridHeaderFilterMenu };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nexport const getGroupRowIdFromPath = path => {\r\n  const pathStr = path.map(groupingCriteria => `${groupingCriteria.field}/${groupingCriteria.key}`).join('-');\r\n  return `auto-generated-row-${pathStr}`;\r\n};\r\nexport const getNodePathInTree = ({\r\n  id,\r\n  tree\r\n}) => {\r\n  const path = [];\r\n  let node = tree[id];\r\n  while (node.id !== GRID_ROOT_GROUP_ID) {\r\n    path.push({\r\n      field: node.type === 'leaf' ? null : node.groupingField,\r\n      key: node.groupingKey\r\n    });\r\n    node = tree[node.parent];\r\n  }\r\n  path.reverse();\r\n  return path;\r\n};\r\nexport const updateGroupDefaultExpansion = (node, defaultGroupingExpansionDepth, isGroupExpandedByDefault) => {\r\n  let childrenExpanded;\r\n  if (node.id === GRID_ROOT_GROUP_ID) {\r\n    childrenExpanded = true;\r\n  } else if (isGroupExpandedByDefault) {\r\n    childrenExpanded = isGroupExpandedByDefault(node);\r\n  } else {\r\n    childrenExpanded = defaultGroupingExpansionDepth === -1 || defaultGroupingExpansionDepth > node.depth;\r\n  }\r\n  node.childrenExpanded = childrenExpanded;\r\n  return node;\r\n};\r\n\r\n/**\r\n * Insert a node in the tree\r\n */\r\nexport const insertNodeInTree = (node, tree, treeDepths, previousTree) => {\r\n  // 1. Insert node in the tree.\r\n  tree[node.id] = node;\r\n\r\n  // 2. Increment the `treeDepths` object for the node's depth.\r\n  treeDepths[node.depth] = (treeDepths[node.depth] ?? 0) + 1;\r\n\r\n  // 3. Register the new node in its parent.\r\n  const parentNode = tree[node.parent];\r\n  if (node.type === 'group' || node.type === 'leaf') {\r\n    // For groups and leaves,\r\n    // Register the node from its parents `children` and `childrenFromPath` properties.\r\n    const groupingFieldName = node.groupingField ?? '__no_field__';\r\n    const groupingKeyName = node.groupingKey ?? '__no_key__';\r\n    const groupingField = parentNode.childrenFromPath?.[groupingFieldName];\r\n    if (previousTree !== null && previousTree[parentNode.id] === tree[parentNode.id]) {\r\n      parentNode.children = [...parentNode.children, node.id];\r\n    } else {\r\n      parentNode.children.push(node.id);\r\n    }\r\n    if (groupingField == null) {\r\n      parentNode.childrenFromPath[groupingFieldName] = {\r\n        [groupingKeyName.toString()]: node.id\r\n      };\r\n    } else {\r\n      groupingField[groupingKeyName.toString()] = node.id;\r\n    }\r\n  } else if (node.type === 'footer') {\r\n    // For footers,\r\n    // Register the node from its parent `footerId` property.\r\n    parentNode.footerId = node.id;\r\n  }\r\n};\r\n\r\n/**\r\n * Removes a node from the tree\r\n */\r\nexport const removeNodeFromTree = ({\r\n  node,\r\n  tree,\r\n  treeDepths\r\n}) => {\r\n  // 1. Remove node from the tree.\r\n  delete tree[node.id];\r\n\r\n  // 2. Decrement the `treeDepths` object for the node's depth.\r\n  const nodeDepth = node.depth;\r\n  const currentNodeCount = treeDepths[nodeDepth];\r\n  if (currentNodeCount === 1) {\r\n    delete treeDepths[nodeDepth];\r\n  } else {\r\n    treeDepths[nodeDepth] = currentNodeCount - 1;\r\n  }\r\n\r\n  // 3. Unregister the new node in its parent.\r\n  const parentNode = tree[node.parent];\r\n  // For footers,\r\n  // Unregister the node from its parent `footerId` property.\r\n  if (node.type === 'footer') {\r\n    tree[parentNode.id] = _extends({}, parentNode, {\r\n      footerId: null\r\n    });\r\n  }\r\n  // For groups and leaves,\r\n  // Unregister the node from its parents `children` and `childrenFromPath` properties.\r\n  else {\r\n    const groupingField = node.groupingField ?? '__no_field__';\r\n    const groupingKey = node.groupingKey ?? '__no_key__';\r\n\r\n    // TODO rows v6: Can we avoid this linear complexity ?\r\n    const children = parentNode.children.filter(childId => childId !== node.id);\r\n    const childrenFromPath = parentNode.childrenFromPath;\r\n    delete childrenFromPath[groupingField][groupingKey.toString()];\r\n    tree[parentNode.id] = _extends({}, parentNode, {\r\n      children,\r\n      childrenFromPath\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Updates the `id` and `isAutoGenerated` properties of a group node.\r\n */\r\nexport const updateGroupNodeIdAndAutoGenerated = ({\r\n  node,\r\n  updatedNode,\r\n  previousTree,\r\n  tree,\r\n  treeDepths\r\n}) => {\r\n  // 1. Set the new parent for all children from the old group\r\n  node.children.forEach(childId => {\r\n    tree[childId] = _extends({}, tree[childId], {\r\n      parent: updatedNode.id\r\n    });\r\n  });\r\n\r\n  // 2. Remove the old group from the tree\r\n  removeNodeFromTree({\r\n    node,\r\n    tree,\r\n    treeDepths\r\n  });\r\n\r\n  // 3. Add the new group in the tree\r\n  const groupNode = _extends({}, node, updatedNode);\r\n  insertNodeInTree(groupNode, tree, treeDepths, previousTree);\r\n};\r\nexport const createUpdatedGroupsManager = () => ({\r\n  value: {},\r\n  addAction(groupId, action) {\r\n    if (!this.value[groupId]) {\r\n      this.value[groupId] = {};\r\n    }\r\n    this.value[groupId][action] = true;\r\n  }\r\n});\r\nexport const getVisibleRowsLookup = ({\r\n  tree,\r\n  filteredRowsLookup\r\n}) => {\r\n  if (!filteredRowsLookup) {\r\n    return {};\r\n  }\r\n  const visibleRowsLookup = {};\r\n  const handleTreeNode = (node, areAncestorsExpanded) => {\r\n    const isPassingFiltering = filteredRowsLookup[node.id];\r\n    if (node.type === 'group') {\r\n      node.children.forEach(childId => {\r\n        const childNode = tree[childId];\r\n        handleTreeNode(childNode, areAncestorsExpanded && !!node.childrenExpanded);\r\n      });\r\n    }\r\n    visibleRowsLookup[node.id] = isPassingFiltering && areAncestorsExpanded;\r\n\r\n    // TODO rows v6: Should we keep storing the visibility status of footer independently or rely on the group visibility in the selector ?\r\n    if (node.type === 'group' && node.footerId != null) {\r\n      visibleRowsLookup[node.footerId] = isPassingFiltering && areAncestorsExpanded && !!node.childrenExpanded;\r\n    }\r\n  };\r\n  const nodes = Object.values(tree);\r\n  for (let i = 0; i < nodes.length; i += 1) {\r\n    const node = nodes[i];\r\n    if (node.depth === 0) {\r\n      handleTreeNode(node, true);\r\n    }\r\n  }\r\n  return visibleRowsLookup;\r\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nimport { updateGroupDefaultExpansion, getGroupRowIdFromPath, insertNodeInTree, updateGroupNodeIdAndAutoGenerated } from './utils';\r\n/**\r\n * Inserts a data row in a tree.\r\n * For each steps of its path:\r\n * - if a node exists with the same partial path, it will register this node as the ancestor of the data row.\r\n * - if not, it will create an auto-generated node and register it as ancestor of the data row.\r\n */\r\nexport const insertDataRowInTree = ({\r\n  id,\r\n  path,\r\n  updatedGroupsManager,\r\n  previousTree,\r\n  tree,\r\n  treeDepths,\r\n  onDuplicatePath,\r\n  isGroupExpandedByDefault,\r\n  defaultGroupingExpansionDepth\r\n}) => {\r\n  let parentNodeId = GRID_ROOT_GROUP_ID;\r\n  for (let depth = 0; depth < path.length; depth += 1) {\r\n    const {\r\n      key,\r\n      field\r\n    } = path[depth];\r\n    const fieldWithDefaultValue = field ?? '__no_field__';\r\n    const keyWithDefaultValue = key ?? '__no_key__';\r\n    const existingNodeIdWithPartialPath = tree[parentNodeId].childrenFromPath?.[fieldWithDefaultValue]?.[keyWithDefaultValue.toString()];\r\n\r\n    // When we reach the last step of the path,\r\n    // We need to create a node for the row passed to `insertNodeInTree`\r\n    if (depth === path.length - 1) {\r\n      // If no node matches the full path,\r\n      // We create a leaf node for the data row.\r\n      if (existingNodeIdWithPartialPath == null) {\r\n        const leafNode = {\r\n          type: 'leaf',\r\n          id,\r\n          depth,\r\n          parent: parentNodeId,\r\n          groupingKey: key\r\n        };\r\n        updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\r\n        insertNodeInTree(leafNode, tree, treeDepths, previousTree);\r\n      } else {\r\n        const existingNodeWithPartialPath = tree[existingNodeIdWithPartialPath];\r\n\r\n        // If we already have an auto-generated group matching the partial path,\r\n        // We replace it with the node from of data row passed to `insertNodeInTree`\r\n        if (existingNodeWithPartialPath.type === 'group' && existingNodeWithPartialPath.isAutoGenerated) {\r\n          updatedGroupsManager?.addAction(parentNodeId, 'removeChildren');\r\n          updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\r\n          updateGroupNodeIdAndAutoGenerated({\r\n            tree,\r\n            previousTree,\r\n            treeDepths,\r\n            node: existingNodeWithPartialPath,\r\n            updatedNode: {\r\n              id,\r\n              isAutoGenerated: false\r\n            }\r\n          });\r\n        } else {\r\n          // If we have another row matching the partial path, then there is a duplicate in the dataset.\r\n          // We warn the user and skip the current row.\r\n          onDuplicatePath?.(existingNodeIdWithPartialPath, id, path);\r\n        }\r\n      }\r\n    }\r\n    // For the intermediary steps of the path,\r\n    // We need to make sure that there is a node matching the partial path.\r\n    //\r\n    // If no node matches the partial path,\r\n    // We create an auto-generated group node.\r\n    else if (existingNodeIdWithPartialPath == null) {\r\n      const nodeId = getGroupRowIdFromPath(path.slice(0, depth + 1));\r\n      const autoGeneratedGroupNode = {\r\n        type: 'group',\r\n        id: nodeId,\r\n        parent: parentNodeId,\r\n        depth,\r\n        isAutoGenerated: true,\r\n        groupingKey: key,\r\n        groupingField: field,\r\n        children: [],\r\n        childrenFromPath: {},\r\n        childrenExpanded: false\r\n      };\r\n      updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\r\n      insertNodeInTree(updateGroupDefaultExpansion(autoGeneratedGroupNode, defaultGroupingExpansionDepth, isGroupExpandedByDefault), tree, treeDepths, previousTree);\r\n      parentNodeId = nodeId;\r\n    }\r\n    // For the intermediary steps of the path\r\n    // If a node matches the partial path, we use it as parent for the next step\r\n    else {\r\n      const currentGroupNode = tree[existingNodeIdWithPartialPath];\r\n\r\n      // If the node matching the partial path is not a group, we turn it into a group\r\n      if (currentGroupNode.type !== 'group') {\r\n        const groupNode = {\r\n          type: 'group',\r\n          id: currentGroupNode.id,\r\n          parent: currentGroupNode.parent,\r\n          depth: currentGroupNode.depth,\r\n          isAutoGenerated: false,\r\n          groupingKey: key,\r\n          groupingField: field,\r\n          children: [],\r\n          childrenFromPath: {},\r\n          childrenExpanded: false\r\n        };\r\n        tree[existingNodeIdWithPartialPath] = updateGroupDefaultExpansion(groupNode, defaultGroupingExpansionDepth, isGroupExpandedByDefault);\r\n      }\r\n      parentNodeId = currentGroupNode.id;\r\n    }\r\n  }\r\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nimport { buildRootGroup } from '@mui/x-data-grid/internals';\r\nimport { insertDataRowInTree } from './insertDataRowInTree';\r\n/**\r\n * Transform a list of rows into a tree structure where each row references its parent and children.\r\n */\r\nexport const createRowTree = params => {\r\n  const dataRowIds = [];\r\n  const tree = {\r\n    [GRID_ROOT_GROUP_ID]: buildRootGroup()\r\n  };\r\n  const treeDepths = {};\r\n  for (let i = 0; i < params.nodes.length; i += 1) {\r\n    const node = params.nodes[i];\r\n    dataRowIds.push(node.id);\r\n    insertDataRowInTree({\r\n      tree,\r\n      previousTree: params.previousTree,\r\n      id: node.id,\r\n      path: node.path,\r\n      onDuplicatePath: params.onDuplicatePath,\r\n      treeDepths,\r\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\r\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\r\n    });\r\n  }\r\n  return {\r\n    tree,\r\n    treeDepths,\r\n    groupingName: params.groupingName,\r\n    dataRowIds\r\n  };\r\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\n// Single-linked list node\r\nclass Node {\r\n  constructor(data, next) {\r\n    this.next = void 0;\r\n    this.data = void 0;\r\n    this.next = next;\r\n    this.data = data;\r\n  }\r\n  insertAfter(list) {\r\n    if (!list.first || !list.last) {\r\n      return;\r\n    }\r\n    const next = this.next;\r\n    this.next = list.first;\r\n    list.last.next = next;\r\n  }\r\n}\r\n\r\n// Single-linked list container\r\nclass List {\r\n  constructor(first, last) {\r\n    this.first = void 0;\r\n    this.last = void 0;\r\n    this.first = first;\r\n    this.last = last;\r\n  }\r\n  data() {\r\n    const array = [];\r\n    this.forEach(node => {\r\n      array.push(node.data);\r\n    });\r\n    return array;\r\n  }\r\n  forEach(fn) {\r\n    let current = this.first;\r\n    while (current !== null) {\r\n      fn(current);\r\n      current = current.next;\r\n    }\r\n  }\r\n  static from(array) {\r\n    if (array.length === 0) {\r\n      return new List(null, null);\r\n    }\r\n    let index = 0;\r\n    const first = new Node(array[index], null);\r\n    let current = first;\r\n    while (index + 1 < array.length) {\r\n      index += 1;\r\n      const node = new Node(array[index], null);\r\n      current.next = node;\r\n      current = node;\r\n    }\r\n    return new List(first, current);\r\n  }\r\n}\r\nexport const sortRowTree = params => {\r\n  const {\r\n    rowTree,\r\n    disableChildrenSorting,\r\n    sortRowList,\r\n    shouldRenderGroupBelowLeaves\r\n  } = params;\r\n  const sortedGroupedByParentRows = new Map();\r\n  const sortGroup = node => {\r\n    const shouldSortGroup = !!sortRowList && (!disableChildrenSorting || node.depth === -1);\r\n    let sortedRowIds;\r\n    if (shouldSortGroup) {\r\n      for (let i = 0; i < node.children.length; i += 1) {\r\n        const childNode = rowTree[node.children[i]];\r\n        if (childNode.type === 'group') {\r\n          sortGroup(childNode);\r\n        }\r\n      }\r\n      sortedRowIds = sortRowList(node.children.map(childId => rowTree[childId]));\r\n    } else if (shouldRenderGroupBelowLeaves) {\r\n      const childrenLeaves = [];\r\n      const childrenGroups = [];\r\n      for (let i = 0; i < node.children.length; i += 1) {\r\n        const childId = node.children[i];\r\n        const childNode = rowTree[childId];\r\n        if (childNode.type === 'group') {\r\n          sortGroup(childNode);\r\n          childrenGroups.push(childId);\r\n        } else if (childNode.type === 'leaf') {\r\n          childrenLeaves.push(childId);\r\n        }\r\n      }\r\n      sortedRowIds = [...childrenLeaves, ...childrenGroups];\r\n    } else {\r\n      for (let i = 0; i < node.children.length; i += 1) {\r\n        const childNode = rowTree[node.children[i]];\r\n        if (childNode.type === 'group') {\r\n          sortGroup(childNode);\r\n        }\r\n      }\r\n      sortedRowIds = [...node.children];\r\n    }\r\n    if (node.footerId != null) {\r\n      sortedRowIds.push(node.footerId);\r\n    }\r\n    sortedGroupedByParentRows.set(node.id, sortedRowIds);\r\n  };\r\n  sortGroup(rowTree[GRID_ROOT_GROUP_ID]);\r\n  const rootList = List.from(sortedGroupedByParentRows.get(GRID_ROOT_GROUP_ID));\r\n  rootList.forEach(node => {\r\n    const children = sortedGroupedByParentRows.get(node.data);\r\n    if (children?.length) {\r\n      node.insertAfter(List.from(children));\r\n    }\r\n  });\r\n  return rootList.data();\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nimport { isDeepEqual, getTreeNodeDescendants } from '@mui/x-data-grid/internals';\r\nimport { insertDataRowInTree } from './insertDataRowInTree';\r\nimport { removeDataRowFromTree } from './removeDataRowFromTree';\r\nimport { createUpdatedGroupsManager, getNodePathInTree } from './utils';\r\nexport const updateRowTree = params => {\r\n  const tree = _extends({}, params.previousTree);\r\n  const treeDepths = _extends({}, params.previousTreeDepth);\r\n  const updatedGroupsManager = createUpdatedGroupsManager();\r\n  for (let i = 0; i < params.nodes.inserted.length; i += 1) {\r\n    const {\r\n      id,\r\n      path\r\n    } = params.nodes.inserted[i];\r\n    insertDataRowInTree({\r\n      previousTree: params.previousTree,\r\n      tree,\r\n      treeDepths,\r\n      updatedGroupsManager,\r\n      id,\r\n      path,\r\n      onDuplicatePath: params.onDuplicatePath,\r\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\r\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\r\n    });\r\n  }\r\n  for (let i = 0; i < params.nodes.removed.length; i += 1) {\r\n    const nodeId = params.nodes.removed[i];\r\n    removeDataRowFromTree({\r\n      tree,\r\n      treeDepths,\r\n      updatedGroupsManager,\r\n      id: nodeId\r\n    });\r\n  }\r\n  for (let i = 0; i < params.nodes.modified.length; i += 1) {\r\n    const {\r\n      id,\r\n      path\r\n    } = params.nodes.modified[i];\r\n    const pathInPreviousTree = getNodePathInTree({\r\n      tree,\r\n      id\r\n    });\r\n    const isInSameGroup = isDeepEqual(pathInPreviousTree, path);\r\n    if (!isInSameGroup) {\r\n      removeDataRowFromTree({\r\n        tree,\r\n        treeDepths,\r\n        updatedGroupsManager,\r\n        id\r\n      });\r\n      insertDataRowInTree({\r\n        previousTree: params.previousTree,\r\n        tree,\r\n        treeDepths,\r\n        updatedGroupsManager,\r\n        id,\r\n        path,\r\n        onDuplicatePath: params.onDuplicatePath,\r\n        isGroupExpandedByDefault: params.isGroupExpandedByDefault,\r\n        defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\r\n      });\r\n    } else {\r\n      updatedGroupsManager?.addAction(tree[id].parent, 'modifyChildren');\r\n    }\r\n  }\r\n\r\n  // TODO rows v6: Avoid walking the whole tree, we should be able to generate the new list only using slices.\r\n  const dataRowIds = getTreeNodeDescendants(tree, GRID_ROOT_GROUP_ID, true);\r\n  return {\r\n    tree,\r\n    treeDepths,\r\n    groupingName: params.groupingName,\r\n    dataRowIds,\r\n    updatedGroupsManager\r\n  };\r\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nimport { getNodePathInTree, getGroupRowIdFromPath, removeNodeFromTree, updateGroupNodeIdAndAutoGenerated } from './utils';\r\nconst removeNodeAndCleanParent = ({\r\n  node,\r\n  tree,\r\n  treeDepths,\r\n  updatedGroupsManager\r\n}) => {\r\n  removeNodeFromTree({\r\n    node,\r\n    tree,\r\n    treeDepths\r\n  });\r\n  if (node.type === 'group' && node.footerId != null) {\r\n    removeNodeFromTree({\r\n      node: tree[node.footerId],\r\n      tree,\r\n      treeDepths\r\n    });\r\n  }\r\n  const parentNode = tree[node.parent];\r\n  updatedGroupsManager?.addAction(parentNode.id, 'removeChildren');\r\n  const shouldDeleteGroup = parentNode.id !== GRID_ROOT_GROUP_ID && parentNode.children.length === 0;\r\n  if (shouldDeleteGroup) {\r\n    if (parentNode.isAutoGenerated) {\r\n      removeNodeAndCleanParent({\r\n        node: parentNode,\r\n        tree,\r\n        treeDepths\r\n      });\r\n    } else {\r\n      tree[parentNode.id] = {\r\n        type: 'leaf',\r\n        id: parentNode.id,\r\n        depth: parentNode.depth,\r\n        parent: parentNode.parent,\r\n        groupingKey: parentNode.groupingKey\r\n      };\r\n    }\r\n  }\r\n};\r\nconst replaceDataGroupWithAutoGeneratedGroup = ({\r\n  node,\r\n  tree,\r\n  treeDepths,\r\n  updatedGroupsManager\r\n}) => {\r\n  updatedGroupsManager?.addAction(node.parent, 'removeChildren');\r\n  updatedGroupsManager?.addAction(node.parent, 'insertChildren');\r\n  updateGroupNodeIdAndAutoGenerated({\r\n    previousTree: null,\r\n    tree,\r\n    treeDepths,\r\n    node,\r\n    updatedNode: {\r\n      id: getGroupRowIdFromPath(getNodePathInTree({\r\n        id: node.id,\r\n        tree\r\n      })),\r\n      isAutoGenerated: true\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Removed a data row from the tree.\r\n * If the node is a non-empty group, replace it with an auto-generated group to be able to keep displaying its children.\r\n * If not, remove it and recursively clean its parent with the following rules:\r\n * - An empty auto-generated should be removed from the tree\r\n * - An empty non-auto-generated should be turned into a leaf\r\n */\r\nexport const removeDataRowFromTree = ({\r\n  id,\r\n  tree,\r\n  treeDepths,\r\n  updatedGroupsManager\r\n}) => {\r\n  const node = tree[id];\r\n  if (node.type === 'group' && node.children.length > 0) {\r\n    replaceDataGroupWithAutoGeneratedGroup({\r\n      node,\r\n      tree,\r\n      treeDepths,\r\n      updatedGroupsManager\r\n    });\r\n  } else {\r\n    removeNodeAndCleanParent({\r\n      node,\r\n      tree,\r\n      treeDepths,\r\n      updatedGroupsManager\r\n    });\r\n  }\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridSelector, gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector, useGridApiMethod, useGridApiEventHandler, GridPinnedColumnPosition, gridColumnFieldsSelector } from '@mui/x-data-grid';\r\nimport { useGridRegisterPipeProcessor, gridPinnedColumnsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '@mui/x-data-grid/internals';\r\nexport const columnPinningStateInitializer = (state, props, apiRef) => {\r\n  apiRef.current.caches.columnPinning = {\r\n    orderedFieldsBeforePinningColumns: null\r\n  };\r\n  let model;\r\n  if (props.pinnedColumns) {\r\n    model = props.pinnedColumns;\r\n  } else if (props.initialState?.pinnedColumns) {\r\n    model = props.initialState.pinnedColumns;\r\n  } else {\r\n    model = {};\r\n  }\r\n  return _extends({}, state, {\r\n    pinnedColumns: model\r\n  });\r\n};\r\nexport const useGridColumnPinning = (apiRef, props) => {\r\n  const pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\r\n\r\n  /**\r\n   * PRE-PROCESSING\r\n   */\r\n  const calculateScrollLeft = React.useCallback((initialValue, params) => {\r\n    const visiblePinnedColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\r\n    if (!params.colIndex || visiblePinnedColumns.left.length === 0 && visiblePinnedColumns.right.length === 0) {\r\n      return initialValue;\r\n    }\r\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\r\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\r\n    const columnPositions = gridColumnPositionsSelector(apiRef);\r\n    const clientWidth = apiRef.current.virtualScrollerRef.current.clientWidth;\r\n\r\n    // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\r\n    const scrollLeft = Math.abs(apiRef.current.virtualScrollerRef.current.scrollLeft);\r\n    const offsetWidth = visibleColumns[params.colIndex].computedWidth;\r\n    const offsetLeft = columnPositions[params.colIndex];\r\n    const leftPinnedColumnsWidth = columnPositions[visiblePinnedColumns.left.length];\r\n    const rightPinnedColumnsWidth = columnsTotalWidth - columnPositions[columnPositions.length - visiblePinnedColumns.right.length];\r\n    const elementBottom = offsetLeft + offsetWidth;\r\n    if (elementBottom - (clientWidth - rightPinnedColumnsWidth) > scrollLeft) {\r\n      const left = elementBottom - (clientWidth - rightPinnedColumnsWidth);\r\n      return _extends({}, initialValue, {\r\n        left\r\n      });\r\n    }\r\n    if (offsetLeft < scrollLeft + leftPinnedColumnsWidth) {\r\n      const left = offsetLeft - leftPinnedColumnsWidth;\r\n      return _extends({}, initialValue, {\r\n        left\r\n      });\r\n    }\r\n    return initialValue;\r\n  }, [apiRef]);\r\n  const addColumnMenuItems = React.useCallback((columnMenuItems, colDef) => {\r\n    if (props.disableColumnPinning) {\r\n      return columnMenuItems;\r\n    }\r\n    if (colDef.pinnable === false) {\r\n      return columnMenuItems;\r\n    }\r\n    return [...columnMenuItems, 'columnMenuPinningItem'];\r\n  }, [props.disableColumnPinning]);\r\n  const checkIfCanBeReordered = React.useCallback((initialValue, {\r\n    targetIndex\r\n  }) => {\r\n    const visiblePinnedColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\r\n    if (visiblePinnedColumns.left.length === 0 && visiblePinnedColumns.right.length === 0) {\r\n      return initialValue;\r\n    }\r\n    if (visiblePinnedColumns.left.length > 0 && targetIndex < visiblePinnedColumns.left.length) {\r\n      return false;\r\n    }\r\n    if (visiblePinnedColumns.right.length > 0) {\r\n      const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\r\n      const firstRightPinnedColumnIndex = visibleColumns.length - visiblePinnedColumns.right.length;\r\n      return targetIndex >= firstRightPinnedColumnIndex ? false : initialValue;\r\n    }\r\n    return initialValue;\r\n  }, [apiRef]);\r\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\r\n    const pinnedColumnsToExport = gridPinnedColumnsSelector(apiRef.current.state);\r\n    const shouldExportPinnedColumns =\r\n    // Always export if the `exportOnlyDirtyModels` property is not activated\r\n    !context.exportOnlyDirtyModels ||\r\n    // Always export if the model is controlled\r\n    props.pinnedColumns != null ||\r\n    // Always export if the model has been initialized\r\n    props.initialState?.pinnedColumns != null ||\r\n    // Export if the model is not empty\r\n    (pinnedColumnsToExport.left ?? []).length > 0 || (pinnedColumnsToExport.right ?? []).length > 0;\r\n    if (!shouldExportPinnedColumns) {\r\n      return prevState;\r\n    }\r\n    return _extends({}, prevState, {\r\n      pinnedColumns: pinnedColumnsToExport\r\n    });\r\n  }, [apiRef, props.pinnedColumns, props.initialState?.pinnedColumns]);\r\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\r\n    const newPinnedColumns = context.stateToRestore.pinnedColumns;\r\n    if (newPinnedColumns != null) {\r\n      setState(apiRef, newPinnedColumns);\r\n    }\r\n    return params;\r\n  }, [apiRef]);\r\n  useGridRegisterPipeProcessor(apiRef, 'scrollToIndexes', calculateScrollLeft);\r\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\r\n  useGridRegisterPipeProcessor(apiRef, 'canBeReordered', checkIfCanBeReordered);\r\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\r\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\r\n  apiRef.current.registerControlState({\r\n    stateId: 'pinnedColumns',\r\n    propModel: props.pinnedColumns,\r\n    propOnChange: props.onPinnedColumnsChange,\r\n    stateSelector: gridPinnedColumnsSelector,\r\n    changeEvent: 'pinnedColumnsChange'\r\n  });\r\n  const pinColumn = React.useCallback((field, side) => {\r\n    if (apiRef.current.isColumnPinned(field) === side) {\r\n      return;\r\n    }\r\n    const otherSide = side === GridPinnedColumnPosition.RIGHT ? GridPinnedColumnPosition.LEFT : GridPinnedColumnPosition.RIGHT;\r\n    const newPinnedColumns = {\r\n      [side]: [...(pinnedColumns[side] || []), field],\r\n      [otherSide]: (pinnedColumns[otherSide] || []).filter(column => column !== field)\r\n    };\r\n    apiRef.current.setPinnedColumns(newPinnedColumns);\r\n  }, [apiRef, pinnedColumns]);\r\n  const unpinColumn = React.useCallback(field => {\r\n    apiRef.current.setPinnedColumns({\r\n      left: (pinnedColumns.left || []).filter(column => column !== field),\r\n      right: (pinnedColumns.right || []).filter(column => column !== field)\r\n    });\r\n  }, [apiRef, pinnedColumns.left, pinnedColumns.right]);\r\n  const getPinnedColumns = React.useCallback(() => {\r\n    return gridPinnedColumnsSelector(apiRef.current.state);\r\n  }, [apiRef]);\r\n  const setPinnedColumns = React.useCallback(newPinnedColumns => {\r\n    setState(apiRef, newPinnedColumns);\r\n    apiRef.current.forceUpdate();\r\n  }, [apiRef]);\r\n  const isColumnPinned = React.useCallback(field => {\r\n    const leftPinnedColumns = pinnedColumns.left || [];\r\n    if (leftPinnedColumns.includes(field)) {\r\n      return GridPinnedColumnPosition.LEFT;\r\n    }\r\n    const rightPinnedColumns = pinnedColumns.right || [];\r\n    if (rightPinnedColumns.includes(field)) {\r\n      return GridPinnedColumnPosition.RIGHT;\r\n    }\r\n    return false;\r\n  }, [pinnedColumns.left, pinnedColumns.right]);\r\n  const columnPinningApi = {\r\n    pinColumn,\r\n    unpinColumn,\r\n    getPinnedColumns,\r\n    setPinnedColumns,\r\n    isColumnPinned\r\n  };\r\n  useGridApiMethod(apiRef, columnPinningApi, 'public');\r\n  const handleColumnOrderChange = params => {\r\n    if (!apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns) {\r\n      return;\r\n    }\r\n    const {\r\n      column,\r\n      targetIndex,\r\n      oldIndex\r\n    } = params;\r\n    const delta = targetIndex > oldIndex ? 1 : -1;\r\n    const latestColumnFields = gridColumnFieldsSelector(apiRef);\r\n\r\n    /**\r\n     * When a column X is reordered to somewhere else, the position where this column X is dropped\r\n     * on must be moved to left or right to make room for it. The ^^^ below represents the column\r\n     * which gave space to receive X.\r\n     *\r\n     * | X | B | C | D | -> | B | C | D | X | (for example X moved to after D, so delta=1)\r\n     *              ^^^              ^^^\r\n     *\r\n     * | A | B | C | X | -> | X | A | B | C | (for example X moved before A, so delta=-1)\r\n     *  ^^^                      ^^^\r\n     *\r\n     * If column P is pinned, it will not move to provide space. However, it will jump to the next\r\n     * non-pinned column.\r\n     *\r\n     * | X | B | P | D | -> | B | D | P | X | (for example X moved to after D, with P pinned)\r\n     *              ^^^          ^^^\r\n     */\r\n    const siblingField = latestColumnFields[targetIndex - delta];\r\n    const newOrderedFieldsBeforePinningColumns = [...apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns];\r\n\r\n    // The index to start swapping fields\r\n    let i = newOrderedFieldsBeforePinningColumns.findIndex(currentColumn => currentColumn === column.field);\r\n    // The index of the field to swap with\r\n    let j = i + delta;\r\n\r\n    // When to stop swapping fields.\r\n    // We stop one field before because the swap is done with i + 1 (if delta=1)\r\n    const stop = newOrderedFieldsBeforePinningColumns.findIndex(currentColumn => currentColumn === siblingField);\r\n    while (delta > 0 ? i < stop : i > stop) {\r\n      // If the field to swap with is a pinned column, jump to the next\r\n      while (apiRef.current.isColumnPinned(newOrderedFieldsBeforePinningColumns[j])) {\r\n        j += delta;\r\n      }\r\n      const temp = newOrderedFieldsBeforePinningColumns[i];\r\n      newOrderedFieldsBeforePinningColumns[i] = newOrderedFieldsBeforePinningColumns[j];\r\n      newOrderedFieldsBeforePinningColumns[j] = temp;\r\n      i = j;\r\n      j = i + delta;\r\n    }\r\n    apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = newOrderedFieldsBeforePinningColumns;\r\n  };\r\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnOrderChange);\r\n  React.useEffect(() => {\r\n    if (props.pinnedColumns) {\r\n      apiRef.current.setPinnedColumns(props.pinnedColumns);\r\n    }\r\n  }, [apiRef, props.pinnedColumns]);\r\n};\r\nfunction setState(apiRef, model) {\r\n  apiRef.current.setState(state => _extends({}, state, {\r\n    pinnedColumns: model\r\n  }));\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { gridPinnedColumnsSelector, useGridRegisterPipeProcessor, eslintUseValue, gridVisiblePinnedColumnDefinitionsSelector } from '@mui/x-data-grid/internals';\r\nexport const useGridColumnPinningPreProcessors = (apiRef, props) => {\r\n  const {\r\n    disableColumnPinning\r\n  } = props;\r\n  let pinnedColumns;\r\n  if (apiRef.current.state.columns) {\r\n    pinnedColumns = gridPinnedColumnsSelector(apiRef.current.state);\r\n  } else {\r\n    pinnedColumns = null;\r\n  }\r\n  const prevAllPinnedColumns = React.useRef([]);\r\n  const reorderPinnedColumns = React.useCallback(columnsState => {\r\n    eslintUseValue(pinnedColumns);\r\n    if (columnsState.orderedFields.length === 0 || disableColumnPinning) {\r\n      return columnsState;\r\n    }\r\n\r\n    // HACK: This is a hack needed because the pipe processors aren't pure enough. What\r\n    // they should be is `gridState -> gridState` transformers, but they only transform a slice\r\n    // of the state, not the full state. So if they need access to other parts of the state (like\r\n    // the `state.columns.orderedFields` in this case), they might lag behind because the selectors\r\n    // are selecting the old state in `apiRef`, not the state being computed in the current pipe processor.\r\n    const savedState = apiRef.current.state;\r\n    apiRef.current.state = _extends({}, savedState, {\r\n      columns: columnsState\r\n    });\r\n    const visibleColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\r\n    apiRef.current.state = savedState;\r\n    // HACK: Ends here //\r\n\r\n    const leftPinnedColumns = visibleColumns.left.map(c => c.field);\r\n    const rightPinnedColumns = visibleColumns.right.map(c => c.field);\r\n    let newOrderedFields;\r\n    const allPinnedColumns = [...leftPinnedColumns, ...rightPinnedColumns];\r\n    const {\r\n      orderedFieldsBeforePinningColumns\r\n    } = apiRef.current.caches.columnPinning;\r\n    if (orderedFieldsBeforePinningColumns) {\r\n      newOrderedFields = new Array(columnsState.orderedFields.length).fill(null);\r\n      const newOrderedFieldsBeforePinningColumns = [...newOrderedFields];\r\n\r\n      // Contains the fields not added to the orderedFields array yet\r\n      const remainingFields = [...columnsState.orderedFields];\r\n\r\n      // First, we check if the column was unpinned since the last processing.\r\n      // If yes and it still exists, we move it back to the same position it was before pinning\r\n      prevAllPinnedColumns.current.forEach(field => {\r\n        if (!allPinnedColumns.includes(field) && columnsState.lookup[field]) {\r\n          // Get the position before pinning\r\n          const index = orderedFieldsBeforePinningColumns.indexOf(field);\r\n          newOrderedFields[index] = field;\r\n          newOrderedFieldsBeforePinningColumns[index] = field;\r\n          // This field was already consumed so we prevent from being added again\r\n          remainingFields.splice(remainingFields.indexOf(field), 1);\r\n        }\r\n      });\r\n\r\n      // For columns still pinned, we keep stored their original positions\r\n      allPinnedColumns.forEach(field => {\r\n        let index = orderedFieldsBeforePinningColumns.indexOf(field);\r\n        // If index = -1, the pinned field didn't exist in the last processing, it's possibly being added now\r\n        // If index >= newOrderedFieldsBeforePinningColumns.length, then one or more columns were removed\r\n        // In both cases, use the position from the columns array\r\n        // TODO: detect removed columns and decrease the positions after it\r\n        if (index === -1 || index >= newOrderedFieldsBeforePinningColumns.length) {\r\n          index = columnsState.orderedFields.indexOf(field);\r\n        }\r\n\r\n        // The fallback above may make the column to be inserted in a position already occupied\r\n        // In this case, put it in any empty slot available\r\n        if (newOrderedFieldsBeforePinningColumns[index] !== null) {\r\n          index = 0;\r\n          while (newOrderedFieldsBeforePinningColumns[index] !== null) {\r\n            index += 1;\r\n          }\r\n        }\r\n        newOrderedFields[index] = field;\r\n        newOrderedFieldsBeforePinningColumns[index] = field;\r\n        // This field was already consumed so we prevent from being added again\r\n        remainingFields.splice(remainingFields.indexOf(field), 1);\r\n      });\r\n\r\n      // The fields remaining are those that're neither pinnned nor were unpinned\r\n      // For these, we spread them across both arrays making sure to not override existing values\r\n      let i = 0;\r\n      remainingFields.forEach(field => {\r\n        while (newOrderedFieldsBeforePinningColumns[i] !== null) {\r\n          i += 1;\r\n        }\r\n        newOrderedFieldsBeforePinningColumns[i] = field;\r\n        newOrderedFields[i] = field;\r\n      });\r\n      apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = newOrderedFieldsBeforePinningColumns;\r\n    } else {\r\n      newOrderedFields = [...columnsState.orderedFields];\r\n      apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = [...columnsState.orderedFields];\r\n    }\r\n    prevAllPinnedColumns.current = allPinnedColumns;\r\n    const centerColumns = newOrderedFields.filter(field => {\r\n      return !leftPinnedColumns.includes(field) && !rightPinnedColumns.includes(field);\r\n    });\r\n    return _extends({}, columnsState, {\r\n      orderedFields: [...leftPinnedColumns, ...centerColumns, ...rightPinnedColumns]\r\n    });\r\n  }, [apiRef, disableColumnPinning, pinnedColumns]);\r\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', reorderPinnedColumns);\r\n  const isColumnPinned = React.useCallback((initialValue, field) => apiRef.current.isColumnPinned(field), [apiRef]);\r\n  useGridRegisterPipeProcessor(apiRef, 'isColumnPinned', isColumnPinned);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridDataRowIdsSelector } from '@mui/x-data-grid';\r\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from './gridDetailPanelToggleColDef';\r\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from './gridDetailPanelSelector';\r\n// FIXME: calling `api.updateDimensions()` here triggers a cycle where `updateDimensions` is\r\n// called 3 times when opening/closing a panel.\r\n\r\nexport const detailPanelStateInitializer = (state, props) => {\r\n  return _extends({}, state, {\r\n    detailPanel: {\r\n      heightCache: {},\r\n      expandedRowIds: props.detailPanelExpandedRowIds ?? props.initialState?.detailPanel?.expandedRowIds ?? []\r\n    }\r\n  });\r\n};\r\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\r\n  if (typeof getDetailPanelContent !== 'function') {\r\n    return {};\r\n  }\r\n\r\n  // TODO change to lazy approach using a Proxy\r\n  // only call getDetailPanelContent when asked for an id\r\n  const rowIds = gridDataRowIdsSelector(apiRef);\r\n  const contentCache = rowIds.reduce((acc, id) => {\r\n    const params = apiRef.current.getRowParams(id);\r\n    acc[id] = getDetailPanelContent(params);\r\n    return acc;\r\n  }, {});\r\n  const heightCache = rowIds.reduce((acc, id) => {\r\n    if (contentCache[id] == null) {\r\n      return acc;\r\n    }\r\n    const params = apiRef.current.getRowParams(id);\r\n    const height = getDetailPanelHeight(params);\r\n    const autoHeight = height === 'auto';\r\n    acc[id] = {\r\n      autoHeight,\r\n      height: autoHeight ? previousHeightCache[id]?.height : height\r\n    };\r\n    return acc;\r\n  }, {});\r\n  return {\r\n    contentCache,\r\n    heightCache\r\n  };\r\n}\r\nexport const useGridDetailPanel = (apiRef, props) => {\r\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\r\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\r\n  const handleCellClick = React.useCallback((params, event) => {\r\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\r\n      return;\r\n    }\r\n    const content = contentCache[params.id];\r\n    if (! /*#__PURE__*/React.isValidElement(content)) {\r\n      return;\r\n    }\r\n\r\n    // Ignore if the user didn't click specifically in the \"i\" button\r\n    if (event.target === event.currentTarget) {\r\n      return;\r\n    }\r\n    apiRef.current.toggleDetailPanel(params.id);\r\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\r\n  const handleCellKeyDown = React.useCallback((params, event) => {\r\n    if (props.getDetailPanelContent == null) {\r\n      return;\r\n    }\r\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\r\n      apiRef.current.toggleDetailPanel(params.id);\r\n    }\r\n  }, [apiRef, props.getDetailPanelContent]);\r\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\r\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\r\n  apiRef.current.registerControlState({\r\n    stateId: 'detailPanels',\r\n    propModel: props.detailPanelExpandedRowIds,\r\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\r\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\r\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\r\n  });\r\n  const toggleDetailPanel = React.useCallback(id => {\r\n    if (props.getDetailPanelContent == null) {\r\n      return;\r\n    }\r\n    const content = contentCache[id];\r\n    if (! /*#__PURE__*/React.isValidElement(content)) {\r\n      return;\r\n    }\r\n    const ids = apiRef.current.getExpandedDetailPanels();\r\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\r\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\r\n  const getExpandedDetailPanels = React.useCallback(() => gridDetailPanelExpandedRowIdsSelector(apiRef.current.state), [apiRef]);\r\n  const setExpandedDetailPanels = React.useCallback(ids => {\r\n    apiRef.current.setState(state => {\r\n      return _extends({}, state, {\r\n        detailPanel: _extends({}, state.detailPanel, {\r\n          expandedRowIds: ids\r\n        })\r\n      });\r\n    });\r\n    apiRef.current.updateDimensions();\r\n    apiRef.current.forceUpdate();\r\n  }, [apiRef]);\r\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\r\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\r\n    if (!heightCache[id] || heightCache[id].height === height) {\r\n      return;\r\n    }\r\n    apiRef.current.setState(state => {\r\n      return _extends({}, state, {\r\n        detailPanel: _extends({}, state.detailPanel, {\r\n          heightCache: _extends({}, heightCache, {\r\n            [id]: _extends({}, heightCache[id], {\r\n              height\r\n            })\r\n          })\r\n        })\r\n      });\r\n    });\r\n    apiRef.current.updateDimensions();\r\n    apiRef.current.requestPipeProcessorsApplication('rowHeight');\r\n  }, [apiRef]);\r\n  const detailPanelHasAutoHeight = React.useCallback(id => {\r\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\r\n    return heightCache[id] ? heightCache[id].autoHeight : false;\r\n  }, [apiRef]);\r\n  const detailPanelPubicApi = {\r\n    toggleDetailPanel,\r\n    getExpandedDetailPanels,\r\n    setExpandedDetailPanels\r\n  };\r\n  const detailPanelPrivateApi = {\r\n    storeDetailPanelHeight,\r\n    detailPanelHasAutoHeight\r\n  };\r\n  useGridApiMethod(apiRef, detailPanelPubicApi, 'public');\r\n  useGridApiMethod(apiRef, detailPanelPrivateApi, 'private');\r\n  React.useEffect(() => {\r\n    if (props.detailPanelExpandedRowIds) {\r\n      const currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\r\n      if (currentModel !== props.detailPanelExpandedRowIds) {\r\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\r\n      }\r\n    }\r\n  }, [apiRef, props.detailPanelExpandedRowIds]);\r\n  const updateCachesAndForceUpdate = React.useCallback(() => {\r\n    apiRef.current.setState(state => {\r\n      return _extends({}, state, {\r\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\r\n      });\r\n    });\r\n    apiRef.current.updateDimensions?.();\r\n    apiRef.current.forceUpdate();\r\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\r\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\r\n  const previousGetDetailPanelContentProp = React.useRef();\r\n  const previousGetDetailPanelHeightProp = React.useRef();\r\n  const updateCachesIfNeeded = React.useCallback(() => {\r\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\r\n      return;\r\n    }\r\n    apiRef.current.setState(state => {\r\n      return _extends({}, state, {\r\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\r\n      });\r\n    });\r\n    apiRef.current.updateDimensions?.();\r\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\r\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\r\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\r\n  const addDetailHeight = React.useCallback((initialValue, row) => {\r\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\r\n      initialValue.detail = 0;\r\n      return initialValue;\r\n    }\r\n    updateCachesIfNeeded();\r\n    const heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\r\n    initialValue.detail = heightCache[row.id] ?? 0; // Fallback to zero because the cache might not be ready yet (for example page was changed)\r\n    return initialValue;\r\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\r\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight);\r\n  const isFirstRender = React.useRef(true);\r\n  if (isFirstRender.current) {\r\n    isFirstRender.current = false;\r\n    updateCachesIfNeeded();\r\n  }\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\r\nimport { GridDetailPanelToggleCell } from '../../../components/GridDetailPanelToggleCell';\r\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';\r\nexport const GRID_DETAIL_PANEL_TOGGLE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\r\n  type: 'custom',\r\n  field: GRID_DETAIL_PANEL_TOGGLE_FIELD,\r\n  editable: false,\r\n  sortable: false,\r\n  filterable: false,\r\n  resizable: false,\r\n  // @ts-ignore\r\n  aggregable: false,\r\n  disableColumnMenu: true,\r\n  disableReorder: true,\r\n  disableExport: true,\r\n  align: 'left',\r\n  width: 40,\r\n  valueGetter: (value, row, column, apiRef) => {\r\n    const rowId = apiRef.current.getRowId(row);\r\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\r\n    return expandedRowIds.includes(rowId);\r\n  },\r\n  renderCell: params => /*#__PURE__*/_jsx(GridDetailPanelToggleCell, _extends({}, params)),\r\n  renderHeader: () => null\r\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { gridClasses } from '@mui/x-data-grid';\r\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\r\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\r\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\r\n  const addToggleColumn = React.useCallback(columnsState => {\r\n    if (props.getDetailPanelContent == null) {\r\n      // Remove the toggle column, when it exists\r\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\r\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\r\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\r\n      }\r\n      return columnsState;\r\n    }\r\n\r\n    // Don't add the toggle column if there's already one\r\n    // The user might have manually added it to have it in a custom position\r\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\r\n      return columnsState;\r\n    }\r\n\r\n    // Otherwise, add the toggle column at the beginning\r\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\r\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\r\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\r\n    });\r\n    return columnsState;\r\n  }, [privateApiRef, props.getDetailPanelContent]);\r\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\r\n    if (props.getDetailPanelContent == null) {\r\n      return classes;\r\n    }\r\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\r\n    if (!expandedRowIds.includes(id)) {\r\n      return classes;\r\n    }\r\n    return [...classes, gridClasses['row--detailPanelExpanded']];\r\n  }, [privateApiRef, props.getDetailPanelContent]);\r\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\r\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\r\n};", "import * as React from 'react';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { useGridLogger, useGridApiEventHandler, getDataGridUtilityClass, useGridSelector, gridSortModelSelector, gridRowMaximumTreeDepthSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\r\nimport { gridEditRowsStateSelector } from '@mui/x-data-grid/internals';\r\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\r\nvar Direction = /*#__PURE__*/function (Direction) {\r\n  Direction[Direction[\"UP\"] = 0] = \"UP\";\r\n  Direction[Direction[\"DOWN\"] = 1] = \"DOWN\";\r\n  return Direction;\r\n}(Direction || {});\r\nlet previousMousePosition = null;\r\nlet previousReorderState = {\r\n  previousTargetId: null,\r\n  dragDirection: null\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    rowDragging: ['row--dragging']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\n\r\n/**\r\n * Only available in DataGridPro\r\n * @requires useGridRows (method)\r\n */\r\nexport const useGridRowReorder = (apiRef, props) => {\r\n  const logger = useGridLogger(apiRef, 'useGridRowReorder');\r\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\r\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\r\n  const dragRowNode = React.useRef(null);\r\n  const originRowIndex = React.useRef(null);\r\n  const removeDnDStylesTimeout = React.useRef();\r\n  const ownerState = {\r\n    classes: props.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const [dragRowId, setDragRowId] = React.useState('');\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(removeDnDStylesTimeout.current);\r\n    };\r\n  }, []);\r\n\r\n  // TODO: remove sortModel check once row reorder is sorting compatible\r\n  // remove treeDepth once row reorder is tree compatible\r\n  const isRowReorderDisabled = React.useMemo(() => {\r\n    return !props.rowReordering || !!sortModel.length || treeDepth !== 1;\r\n  }, [props.rowReordering, sortModel, treeDepth]);\r\n  const handleDragStart = React.useCallback((params, event) => {\r\n    // Call the gridEditRowsStateSelector directly to avoid infnite loop\r\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\r\n    if (isRowReorderDisabled || Object.keys(editRowsState).length !== 0) {\r\n      return;\r\n    }\r\n    logger.debug(`Start dragging row ${params.id}`);\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    dragRowNode.current = event.currentTarget;\r\n    dragRowNode.current.classList.add(classes.rowDragging);\r\n    setDragRowId(params.id);\r\n    removeDnDStylesTimeout.current = setTimeout(() => {\r\n      dragRowNode.current.classList.remove(classes.rowDragging);\r\n    });\r\n    originRowIndex.current = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\r\n    apiRef.current.setCellFocus(params.id, GRID_REORDER_COL_DEF.field);\r\n  }, [isRowReorderDisabled, classes.rowDragging, logger, apiRef]);\r\n  const handleDragOver = React.useCallback((params, event) => {\r\n    if (dragRowId === '') {\r\n      return;\r\n    }\r\n    const rowNode = apiRef.current.getRowNode(params.id);\r\n    if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\r\n      return;\r\n    }\r\n    logger.debug(`Dragging over row ${params.id}`);\r\n    event.preventDefault();\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    const mouseMovementDiff = previousMousePosition ? previousMousePosition.y - event.clientY : event.clientY;\r\n    if (params.id !== dragRowId) {\r\n      const targetRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\r\n      const dragDirection = mouseMovementDiff > 0 ? Direction.DOWN : Direction.UP;\r\n      const currentReorderState = {\r\n        dragDirection,\r\n        previousTargetId: params.id\r\n      };\r\n      const isStateChanged = currentReorderState.dragDirection !== previousReorderState.dragDirection || currentReorderState.previousTargetId !== previousReorderState.previousTargetId;\r\n      if (previousReorderState.dragDirection === null || Math.abs(mouseMovementDiff) >= 1 && isStateChanged) {\r\n        apiRef.current.setRowIndex(dragRowId, targetRowIndex);\r\n        previousReorderState = currentReorderState;\r\n      }\r\n    }\r\n    previousMousePosition = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    };\r\n  }, [apiRef, logger, dragRowId]);\r\n  const handleDragEnd = React.useCallback((params, event) => {\r\n    // Call the gridEditRowsStateSelector directly to avoid infnite loop\r\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\r\n    if (dragRowId === '' || isRowReorderDisabled || Object.keys(editRowsState).length !== 0) {\r\n      return;\r\n    }\r\n    logger.debug('End dragging row');\r\n    event.preventDefault();\r\n    // Prevent drag events propagation.\r\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\r\n    event.stopPropagation();\r\n    clearTimeout(removeDnDStylesTimeout.current);\r\n    dragRowNode.current = null;\r\n    previousReorderState.dragDirection = null;\r\n\r\n    // Check if the row was dropped outside the grid.\r\n    if (event.dataTransfer.dropEffect === 'none') {\r\n      // Accessing params.field may contain the wrong field as header elements are reused\r\n      apiRef.current.setRowIndex(dragRowId, originRowIndex.current);\r\n      originRowIndex.current = null;\r\n    } else {\r\n      // Emit the rowOrderChange event only once when the reordering stops.\r\n      const rowOrderChangeParams = {\r\n        row: apiRef.current.getRow(dragRowId),\r\n        targetIndex: apiRef.current.getRowIndexRelativeToVisibleRows(params.id),\r\n        oldIndex: originRowIndex.current\r\n      };\r\n      apiRef.current.publishEvent('rowOrderChange', rowOrderChangeParams);\r\n    }\r\n    setDragRowId('');\r\n  }, [isRowReorderDisabled, logger, apiRef, dragRowId]);\r\n  useGridApiEventHandler(apiRef, 'rowDragStart', handleDragStart);\r\n  useGridApiEventHandler(apiRef, 'rowDragOver', handleDragOver);\r\n  useGridApiEventHandler(apiRef, 'rowDragEnd', handleDragEnd);\r\n  useGridApiEventHandler(apiRef, 'cellDragOver', handleDragOver);\r\n  useGridApiOptionHandler(apiRef, 'rowOrderChange', props.onRowOrderChange);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\r\nimport { renderRowReorderCell } from '../../../components/GridRowReorderCell';\r\nexport const GRID_REORDER_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\r\n  type: 'custom',\r\n  field: '__reorder__',\r\n  sortable: false,\r\n  filterable: false,\r\n  width: 50,\r\n  align: 'center',\r\n  headerAlign: 'center',\r\n  disableColumnMenu: true,\r\n  disableExport: true,\r\n  disableReorder: true,\r\n  resizable: false,\r\n  // @ts-ignore\r\n  aggregable: false,\r\n  renderHeader: () => ' ',\r\n  renderCell: renderRowReorderCell\r\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { gridRowMaximumTreeDepthSelector, gridSortModelSelector, useGridApiContext, useGridSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\r\nimport { gridEditRowsStateSelector, isEventTargetInPortal } from '@mui/x-data-grid/internals';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    isDraggable,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['rowReorderCell', isDraggable && 'rowReorderCell--draggable'],\r\n    placeholder: ['rowReorderCellPlaceholder']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\nfunction GridRowReorderCell(params) {\r\n  const apiRef = useGridApiContext();\r\n  const rootProps = useGridRootProps();\r\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\r\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\r\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  const cellValue = params.row.__reorder__ || params.id;\r\n\r\n  // TODO: remove sortModel and treeDepth checks once row reorder is compatible\r\n  const isDraggable = React.useMemo(() => !!rootProps.rowReordering && !sortModel.length && treeDepth === 1 && Object.keys(editRowsState).length === 0, [rootProps.rowReordering, sortModel, treeDepth, editRowsState]);\r\n  const ownerState = {\r\n    isDraggable,\r\n    classes: rootProps.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const publish = React.useCallback((eventName, propHandler) => event => {\r\n    // Ignore portal\r\n    if (isEventTargetInPortal(event)) {\r\n      return;\r\n    }\r\n\r\n    // The row might have been deleted\r\n    if (!apiRef.current.getRow(params.id)) {\r\n      return;\r\n    }\r\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(params.id), event);\r\n    if (propHandler) {\r\n      propHandler(event);\r\n    }\r\n  }, [apiRef, params.id]);\r\n  const draggableEventHandlers = isDraggable ? {\r\n    onDragStart: publish('rowDragStart'),\r\n    onDragOver: publish('rowDragOver'),\r\n    onDragEnd: publish('rowDragEnd')\r\n  } : null;\r\n  if (params.rowNode.type === 'footer') {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\r\n    className: classes.root,\r\n    draggable: isDraggable\r\n  }, draggableEventHandlers, {\r\n    children: [/*#__PURE__*/_jsx(rootProps.slots.rowReorderIcon, {}), /*#__PURE__*/_jsx(\"div\", {\r\n      className: classes.placeholder,\r\n      children: cellValue\r\n    })]\r\n  }));\r\n}\r\nexport { GridRowReorderCell };\r\nexport const renderRowReorderCell = params => {\r\n  if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(GridRowReorderCell, _extends({}, params));\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\r\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  return React.useMemo(() => {\r\n    const slots = {\r\n      rowReorderCellContainer: ['rowReorderCellContainer'],\r\n      columnHeaderReorder: ['columnHeaderReorder']\r\n    };\r\n    return composeClasses(slots, getDataGridUtilityClass, classes);\r\n  }, [classes]);\r\n};\r\nexport const useGridRowReorderPreProcessors = (privateApiRef, props) => {\r\n  const ownerState = {\r\n    classes: props.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const updateReorderColumn = React.useCallback(columnsState => {\r\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\r\n      cellClassName: classes.rowReorderCellContainer,\r\n      headerClassName: classes.columnHeaderReorder,\r\n      headerName: privateApiRef.current.getLocaleText('rowReorderingHeaderName')\r\n    });\r\n    const shouldHaveReorderColumn = props.rowReordering;\r\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\r\n    if (shouldHaveReorderColumn && haveReorderColumn) {\r\n      return columnsState;\r\n    }\r\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\r\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\r\n      columnsState.orderedFields = [reorderColumn.field, ...columnsState.orderedFields];\r\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\r\n      delete columnsState.lookup[reorderColumn.field];\r\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== reorderColumn.field);\r\n    }\r\n    return columnsState;\r\n  }, [privateApiRef, classes, props.rowReordering]);\r\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateReorderColumn);\r\n};", "import * as React from 'react';\r\nimport { useGridApiEventHandler, useGridSelector, gridSortModelSelector, gridFilterModelSelector, gridRenderContextSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\r\nimport { getVisibleRows } from '@mui/x-data-grid/internals';\r\nfunction findSkeletonRowsSection({\r\n  apiRef,\r\n  visibleRows,\r\n  range\r\n}) {\r\n  let {\r\n    firstRowIndex,\r\n    lastRowIndex\r\n  } = range;\r\n  const visibleRowsSection = visibleRows.slice(range.firstRowIndex, range.lastRowIndex);\r\n  let startIndex = 0;\r\n  let endIndex = visibleRowsSection.length - 1;\r\n  let isSkeletonSectionFound = false;\r\n  while (!isSkeletonSectionFound && firstRowIndex < lastRowIndex) {\r\n    const isStartingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[startIndex].id)?.type === 'skeletonRow';\r\n    const isEndingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[endIndex].id)?.type === 'skeletonRow';\r\n    if (isStartingWithASkeletonRow && isEndingWithASkeletonRow) {\r\n      isSkeletonSectionFound = true;\r\n    }\r\n    if (!isStartingWithASkeletonRow) {\r\n      startIndex += 1;\r\n      firstRowIndex += 1;\r\n    }\r\n    if (!isEndingWithASkeletonRow) {\r\n      endIndex -= 1;\r\n      lastRowIndex -= 1;\r\n    }\r\n  }\r\n  return isSkeletonSectionFound ? {\r\n    firstRowIndex,\r\n    lastRowIndex\r\n  } : undefined;\r\n}\r\n\r\n/**\r\n * @requires useGridRows (state)\r\n * @requires useGridPagination (state)\r\n * @requires useGridDimensions (method) - can be after\r\n * @requires useGridScroll (method\r\n */\r\nexport const useGridLazyLoader = (privateApiRef, props) => {\r\n  const sortModel = useGridSelector(privateApiRef, gridSortModelSelector);\r\n  const filterModel = useGridSelector(privateApiRef, gridFilterModelSelector);\r\n  const renderedRowsIntervalCache = React.useRef({\r\n    firstRowToRender: 0,\r\n    lastRowToRender: 0\r\n  });\r\n  const isDisabled = props.rowsLoadingMode !== 'server';\r\n  const handleRenderedRowsIntervalChange = React.useCallback(params => {\r\n    if (isDisabled) {\r\n      return;\r\n    }\r\n    const fetchRowsParams = {\r\n      firstRowToRender: params.firstRowIndex,\r\n      lastRowToRender: params.lastRowIndex,\r\n      sortModel,\r\n      filterModel\r\n    };\r\n    if (renderedRowsIntervalCache.current.firstRowToRender === params.firstRowIndex && renderedRowsIntervalCache.current.lastRowToRender === params.lastRowIndex) {\r\n      return;\r\n    }\r\n    renderedRowsIntervalCache.current = {\r\n      firstRowToRender: params.firstRowIndex,\r\n      lastRowToRender: params.lastRowIndex\r\n    };\r\n    if (sortModel.length === 0 && filterModel.items.length === 0) {\r\n      const currentVisibleRows = getVisibleRows(privateApiRef, {\r\n        pagination: props.pagination,\r\n        paginationMode: props.paginationMode\r\n      });\r\n      const skeletonRowsSection = findSkeletonRowsSection({\r\n        apiRef: privateApiRef,\r\n        visibleRows: currentVisibleRows.rows,\r\n        range: {\r\n          firstRowIndex: params.firstRowIndex,\r\n          lastRowIndex: params.lastRowIndex\r\n        }\r\n      });\r\n      if (!skeletonRowsSection) {\r\n        return;\r\n      }\r\n      fetchRowsParams.firstRowToRender = skeletonRowsSection.firstRowIndex;\r\n      fetchRowsParams.lastRowToRender = skeletonRowsSection.lastRowIndex;\r\n    }\r\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\r\n  }, [privateApiRef, isDisabled, props.pagination, props.paginationMode, sortModel, filterModel]);\r\n  const handleGridSortModelChange = React.useCallback(newSortModel => {\r\n    if (isDisabled) {\r\n      return;\r\n    }\r\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\r\n    const renderContext = gridRenderContextSelector(privateApiRef);\r\n    const fetchRowsParams = {\r\n      firstRowToRender: renderContext.firstRowIndex,\r\n      lastRowToRender: renderContext.lastRowIndex,\r\n      sortModel: newSortModel,\r\n      filterModel\r\n    };\r\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\r\n  }, [privateApiRef, isDisabled, filterModel]);\r\n  const handleGridFilterModelChange = React.useCallback(newFilterModel => {\r\n    if (isDisabled) {\r\n      return;\r\n    }\r\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\r\n    const renderContext = gridRenderContextSelector(privateApiRef);\r\n    const fetchRowsParams = {\r\n      firstRowToRender: renderContext.firstRowIndex,\r\n      lastRowToRender: renderContext.lastRowIndex,\r\n      sortModel,\r\n      filterModel: newFilterModel\r\n    };\r\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\r\n  }, [privateApiRef, isDisabled, sortModel]);\r\n  useGridApiEventHandler(privateApiRef, 'renderedRowsIntervalChange', handleRenderedRowsIntervalChange);\r\n  useGridApiEventHandler(privateApiRef, 'sortModelChange', handleGridSortModelChange);\r\n  useGridApiEventHandler(privateApiRef, 'filterModelChange', handleGridFilterModelChange);\r\n  useGridApiOptionHandler(privateApiRef, 'fetchRows', props.onFetchRows);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\r\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\r\nexport const useGridLazyLoaderPreProcessors = (privateApiRef, props) => {\r\n  const addSkeletonRows = React.useCallback(groupingParams => {\r\n    const rootGroup = groupingParams.tree[GRID_ROOT_GROUP_ID];\r\n    if (props.rowsLoadingMode !== 'server' || !props.rowCount || rootGroup.children.length >= props.rowCount) {\r\n      return groupingParams;\r\n    }\r\n    const tree = _extends({}, groupingParams.tree);\r\n    const rootGroupChildren = [...rootGroup.children];\r\n    for (let i = 0; i < props.rowCount - rootGroup.children.length; i += 1) {\r\n      const skeletonId = getSkeletonRowId(i);\r\n      rootGroupChildren.push(skeletonId);\r\n      const skeletonRowNode = {\r\n        type: 'skeletonRow',\r\n        id: skeletonId,\r\n        parent: GRID_ROOT_GROUP_ID,\r\n        depth: 0\r\n      };\r\n      tree[skeletonId] = skeletonRowNode;\r\n    }\r\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\r\n      children: rootGroupChildren\r\n    });\r\n    return _extends({}, groupingParams, {\r\n      tree\r\n    });\r\n  }, [props.rowCount, props.rowsLoadingMode]);\r\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateRows', addSkeletonRows);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridApiMethod } from '@mui/x-data-grid';\r\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\r\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\r\n  const cache = {\r\n    topIds: [],\r\n    bottomIds: [],\r\n    idLookup: {}\r\n  };\r\n  pinnedRows?.top?.forEach(rowModel => {\r\n    const id = getRowIdFromRowModel(rowModel, getRowId);\r\n    cache.topIds.push(id);\r\n    cache.idLookup[id] = rowModel;\r\n  });\r\n  pinnedRows?.bottom?.forEach(rowModel => {\r\n    const id = getRowIdFromRowModel(rowModel, getRowId);\r\n    cache.bottomIds.push(id);\r\n    cache.idLookup[id] = rowModel;\r\n  });\r\n  return cache;\r\n}\r\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\r\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\r\n  return _extends({}, state, {\r\n    rows: _extends({}, state.rows, {\r\n      additionalRowGroups: _extends({}, state.rows?.additionalRowGroups, {\r\n        pinnedRows: {\r\n          top: [],\r\n          bottom: []\r\n        }\r\n      })\r\n    })\r\n  });\r\n};\r\nexport const useGridRowPinning = (apiRef, props) => {\r\n  const setPinnedRows = React.useCallback(newPinnedRows => {\r\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\r\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\r\n  }, [apiRef, props.getRowId]);\r\n  useGridApiMethod(apiRef, {\r\n    unstable_setPinnedRows: setPinnedRows\r\n  }, 'public');\r\n  const isFirstRender = React.useRef(true);\r\n  React.useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\r\n  }, [apiRef, props.pinnedRows]);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\r\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\r\nimport { insertNodeInTree } from '../../../utils/tree/utils';\r\nexport function addPinnedRow({\r\n  groupingParams,\r\n  rowModel,\r\n  rowId,\r\n  position,\r\n  apiRef,\r\n  isAutoGenerated\r\n}) {\r\n  const dataRowIdToModelLookup = _extends({}, groupingParams.dataRowIdToModelLookup);\r\n  const dataRowIdToIdLookup = _extends({}, groupingParams.dataRowIdToIdLookup);\r\n  const tree = _extends({}, groupingParams.tree);\r\n  const treeDepths = _extends({}, groupingParams.treeDepths);\r\n\r\n  // TODO: warn if id is already present in `props.rows`\r\n\r\n  const node = {\r\n    type: 'pinnedRow',\r\n    id: rowId,\r\n    depth: 0,\r\n    parent: GRID_ROOT_GROUP_ID,\r\n    isAutoGenerated\r\n  };\r\n  insertNodeInTree(node, tree, treeDepths, null);\r\n  if (!isAutoGenerated) {\r\n    dataRowIdToModelLookup[rowId] = rowModel;\r\n    dataRowIdToIdLookup[rowId] = rowId;\r\n  }\r\n  // Do not push it to ids list so that pagination is not affected by pinned rows\r\n\r\n  apiRef.current.caches.rows.dataRowIdToModelLookup[rowId] = _extends({}, rowModel);\r\n  apiRef.current.caches.rows.dataRowIdToIdLookup[rowId] = rowId;\r\n  const previousPinnedRows = groupingParams.additionalRowGroups?.pinnedRows || {};\r\n  const newPinnedRow = {\r\n    id: rowId,\r\n    model: rowModel\r\n  };\r\n  if (groupingParams.additionalRowGroups?.pinnedRows?.[position]?.includes(newPinnedRow)) {\r\n    return _extends({}, groupingParams, {\r\n      dataRowIdToModelLookup,\r\n      dataRowIdToIdLookup,\r\n      tree,\r\n      treeDepths\r\n    });\r\n  }\r\n  return _extends({}, groupingParams, {\r\n    dataRowIdToModelLookup,\r\n    dataRowIdToIdLookup,\r\n    tree,\r\n    treeDepths,\r\n    additionalRowGroups: _extends({}, groupingParams.additionalRowGroups, {\r\n      pinnedRows: _extends({}, previousPinnedRows, {\r\n        [position]: [...(previousPinnedRows[position] || []), newPinnedRow]\r\n      })\r\n    })\r\n  });\r\n}\r\nexport const useGridRowPinningPreProcessors = apiRef => {\r\n  const addPinnedRows = React.useCallback(groupingParams => {\r\n    const pinnedRowsCache = apiRef.current.caches.pinnedRows || {};\r\n    let newGroupingParams = _extends({}, groupingParams, {\r\n      additionalRowGroups: _extends({}, groupingParams.additionalRowGroups, {\r\n        // reset pinned rows state\r\n        pinnedRows: {}\r\n      })\r\n    });\r\n    pinnedRowsCache.topIds?.forEach(rowId => {\r\n      newGroupingParams = addPinnedRow({\r\n        groupingParams: newGroupingParams,\r\n        rowModel: pinnedRowsCache.idLookup[rowId],\r\n        rowId,\r\n        position: 'top',\r\n        apiRef,\r\n        isAutoGenerated: false\r\n      });\r\n    });\r\n    pinnedRowsCache.bottomIds?.forEach(rowId => {\r\n      newGroupingParams = addPinnedRow({\r\n        groupingParams: newGroupingParams,\r\n        rowModel: pinnedRowsCache.idLookup[rowId],\r\n        rowId,\r\n        position: 'bottom',\r\n        apiRef,\r\n        isAutoGenerated: false\r\n      });\r\n    });\r\n\r\n    // If row with the same `id` is present both in `rows` and `pinnedRows` - remove it from the root group children\r\n    if (pinnedRowsCache.bottomIds?.length || pinnedRowsCache.topIds?.length) {\r\n      const shouldKeepRow = rowId => {\r\n        if (newGroupingParams.tree[rowId] && newGroupingParams.tree[rowId].type === 'pinnedRow') {\r\n          return false;\r\n        }\r\n        return true;\r\n      };\r\n      const rootGroupNode = newGroupingParams.tree[GRID_ROOT_GROUP_ID];\r\n      newGroupingParams.tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroupNode, {\r\n        children: rootGroupNode.children.filter(shouldKeepRow)\r\n      });\r\n      newGroupingParams.dataRowIds = newGroupingParams.dataRowIds.filter(shouldKeepRow);\r\n    }\r\n    return newGroupingParams;\r\n  }, [apiRef]);\r\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addPinnedRows);\r\n};", "import { useGridInitialization, useGridInitializeState, useGridClipboard, useGridColumnMenu, useGridColumns, columnsStateInitializer, useGridDensity, useGridCsvExport, useGridPrintExport, useGridFilter, filterStateInitializer, useGridFocus, useGridKeyboardNavigation, useGridPagination, paginationStateInitializer, useGridPreferencesPanel, useGridEditing, editingStateInitializer, useGridRows, useGridRowsPreProcessors, rowsStateInitializer, useGridRowsMeta, useGridParamsApi, useGridRowSelection, useGridSorting, sortingStateInitializer, useGridScroll, useGridEvents, dimensionsStateInitializer, useGridDimensions, useGridStatePersistence, useGridRowSelectionPreProcessors, useGridColumnSpanning, columnMenuStateInitializer, densityStateInitializer, focusStateInitializer, preferencePanelStateInitializer, rowsMetaStateInitializer, rowSelectionStateInitializer, useGridColumnGrouping, columnGroupsStateInitializer, headerFilteringStateInitializer, useGridHeaderFiltering, virtualizationStateInitializer, useGridVirtualization, useGridColumnResize, columnResizeStateInitializer } from '@mui/x-data-grid/internals';\r\n// Pro-only features\r\nimport { useGridInfiniteLoader } from '../hooks/features/infiniteLoader/useGridInfiniteLoader';\r\nimport { useGridColumnReorder, columnReorderStateInitializer } from '../hooks/features/columnReorder/useGridColumnReorder';\r\nimport { useGridTreeData } from '../hooks/features/treeData/useGridTreeData';\r\nimport { useGridTreeDataPreProcessors } from '../hooks/features/treeData/useGridTreeDataPreProcessors';\r\nimport { useGridColumnPinning, columnPinningStateInitializer } from '../hooks/features/columnPinning/useGridColumnPinning';\r\nimport { useGridColumnPinningPreProcessors } from '../hooks/features/columnPinning/useGridColumnPinningPreProcessors';\r\nimport { useGridDetailPanel, detailPanelStateInitializer } from '../hooks/features/detailPanel/useGridDetailPanel';\r\nimport { useGridDetailPanelPreProcessors } from '../hooks/features/detailPanel/useGridDetailPanelPreProcessors';\r\nimport { useGridRowReorder } from '../hooks/features/rowReorder/useGridRowReorder';\r\nimport { useGridRowReorderPreProcessors } from '../hooks/features/rowReorder/useGridRowReorderPreProcessors';\r\nimport { useGridLazyLoader } from '../hooks/features/lazyLoader/useGridLazyLoader';\r\nimport { useGridLazyLoaderPreProcessors } from '../hooks/features/lazyLoader/useGridLazyLoaderPreProcessors';\r\nimport { useGridRowPinning, rowPinningStateInitializer } from '../hooks/features/rowPinning/useGridRowPinning';\r\nimport { useGridRowPinningPreProcessors } from '../hooks/features/rowPinning/useGridRowPinningPreProcessors';\r\nexport const useDataGridProComponent = (inputApiRef, props) => {\r\n  const apiRef = useGridInitialization(inputApiRef, props);\r\n\r\n  /**\r\n   * Register all pre-processors called during state initialization here.\r\n   */\r\n  useGridRowSelectionPreProcessors(apiRef, props);\r\n  useGridRowReorderPreProcessors(apiRef, props);\r\n  useGridTreeDataPreProcessors(apiRef, props);\r\n  useGridLazyLoaderPreProcessors(apiRef, props);\r\n  useGridRowPinningPreProcessors(apiRef);\r\n  useGridDetailPanelPreProcessors(apiRef, props);\r\n  // The column pinning `hydrateColumns` pre-processor must be after every other `hydrateColumns` pre-processors\r\n  // Because it changes the order of the columns.\r\n  useGridColumnPinningPreProcessors(apiRef, props);\r\n  useGridRowsPreProcessors(apiRef);\r\n\r\n  /**\r\n   * Register all state initializers here.\r\n   */\r\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\r\n  useGridInitializeState(headerFilteringStateInitializer, apiRef, props);\r\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\r\n  useGridInitializeState(detailPanelStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnPinningStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\r\n  useGridInitializeState(rowPinningStateInitializer, apiRef, props);\r\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\r\n  useGridInitializeState(editingStateInitializer, apiRef, props);\r\n  useGridInitializeState(focusStateInitializer, apiRef, props);\r\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\r\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\r\n  useGridInitializeState(filterStateInitializer, apiRef, props);\r\n  useGridInitializeState(densityStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnReorderStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\r\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\r\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\r\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\r\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\r\n  useGridHeaderFiltering(apiRef, props);\r\n  useGridTreeData(apiRef);\r\n  useGridKeyboardNavigation(apiRef, props);\r\n  useGridRowSelection(apiRef, props);\r\n  useGridColumnPinning(apiRef, props);\r\n  useGridRowPinning(apiRef, props);\r\n  useGridColumns(apiRef, props);\r\n  useGridRows(apiRef, props);\r\n  useGridParamsApi(apiRef);\r\n  useGridDetailPanel(apiRef, props);\r\n  useGridColumnSpanning(apiRef);\r\n  useGridColumnGrouping(apiRef, props);\r\n  useGridEditing(apiRef, props);\r\n  useGridFocus(apiRef, props);\r\n  useGridPreferencesPanel(apiRef, props);\r\n  useGridFilter(apiRef, props);\r\n  useGridSorting(apiRef, props);\r\n  useGridDensity(apiRef, props);\r\n  useGridColumnReorder(apiRef, props);\r\n  useGridColumnResize(apiRef, props);\r\n  useGridPagination(apiRef, props);\r\n  useGridRowsMeta(apiRef, props);\r\n  useGridRowReorder(apiRef, props);\r\n  useGridScroll(apiRef, props);\r\n  useGridInfiniteLoader(apiRef, props);\r\n  useGridLazyLoader(apiRef, props);\r\n  useGridColumnMenu(apiRef);\r\n  useGridCsvExport(apiRef, props);\r\n  useGridPrintExport(apiRef, props);\r\n  useGridClipboard(apiRef, props);\r\n  useGridDimensions(apiRef, props);\r\n  useGridEvents(apiRef, props);\r\n  useGridStatePersistence(apiRef);\r\n  useGridVirtualization(apiRef, props);\r\n  return apiRef;\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useThemeProps } from '@mui/material/styles';\r\nimport { GRID_DEFAULT_LOCALE_TEXT, DATA_GRID_PROPS_DEFAULT_VALUES } from '@mui/x-data-grid';\r\nimport { computeSlots, useProps } from '@mui/x-data-grid/internals';\r\nimport { DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS } from '../constants/dataGridProDefaultSlotsComponents';\r\n\r\n/**\r\n * The default values of `DataGridProPropsWithDefaultValue` to inject in the props of DataGridPro.\r\n */\r\nexport const DATA_GRID_PRO_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, {\r\n  scrollEndThreshold: 80,\r\n  treeData: false,\r\n  defaultGroupingExpansionDepth: 0,\r\n  autosizeOnMount: false,\r\n  disableAutosize: false,\r\n  disableColumnPinning: false,\r\n  keepColumnPositionIfDraggedOutside: false,\r\n  disableChildrenFiltering: false,\r\n  disableChildrenSorting: false,\r\n  rowReordering: false,\r\n  rowsLoadingMode: 'client',\r\n  getDetailPanelHeight: () => 500,\r\n  headerFilters: false\r\n});\r\nconst defaultSlots = DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS;\r\nexport const useDataGridProProps = inProps => {\r\n  const themedProps = useProps(\r\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\r\n  useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiDataGrid'\r\n  }));\r\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\r\n  const slots = React.useMemo(() => computeSlots({\r\n    defaultSlots,\r\n    slots: themedProps.slots\r\n  }), [themedProps.slots]);\r\n  return React.useMemo(() => _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, themedProps, {\r\n    localeText,\r\n    slots,\r\n    signature: 'DataGridPro'\r\n  }), [themedProps, localeText, slots]);\r\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '@mui/x-data-grid/internals';\r\nimport { GridProColumnMenu } from '../components/GridProColumnMenu';\r\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\r\nimport { GridHeaderFilterMenu } from '../components/headerFiltering/GridHeaderFilterMenu';\r\nimport { GridHeaderFilterCell } from '../components/headerFiltering/GridHeaderFilterCell';\r\nimport { GridDetailPanels } from '../components/GridDetailPanels';\r\nimport { GridPinnedRows } from '../components/GridPinnedRows';\r\nimport materialSlots from '../material';\r\nexport const DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS = _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS, materialSlots, {\r\n  columnMenu: GridProColumnMenu,\r\n  columnHeaders: GridColumnHeaders,\r\n  detailPanels: GridDetailPanels,\r\n  headerFilterCell: GridHeaderFilterCell,\r\n  headerFilterMenu: GridHeaderFilterMenu,\r\n  pinnedRows: GridPinnedRows\r\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { GridGenericColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from '@mui/x-data-grid';\r\nimport { GridColumnMenuPinningItem } from './GridColumnMenuPinningItem';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const GRID_COLUMN_MENU_SLOTS_PRO = _extends({}, GRID_COLUMN_MENU_SLOTS, {\r\n  columnMenuPinningItem: GridColumnMenuPinningItem\r\n});\r\nexport const GRID_COLUMN_MENU_SLOT_PROPS_PRO = _extends({}, GRID_COLUMN_MENU_SLOT_PROPS, {\r\n  columnMenuPinningItem: {\r\n    displayOrder: 15\r\n  }\r\n});\r\nexport const GridProColumnMenu = /*#__PURE__*/React.forwardRef(function GridProColumnMenu(props, ref) {\r\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    defaultSlots: GRID_COLUMN_MENU_SLOTS_PRO,\r\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS_PRO\r\n  }));\r\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"style\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { GridBaseColumnHeaders } from '@mui/x-data-grid/internals';\r\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst Filler = styled('div')({\r\n  flex: 1,\r\n  backgroundColor: 'var(--DataGrid-containerBackground)'\r\n});\r\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\r\n  const {\r\n      className,\r\n      visibleColumns,\r\n      sortColumnLookup,\r\n      filterColumnLookup,\r\n      columnHeaderTabIndexState,\r\n      columnGroupHeaderTabIndexState,\r\n      columnHeaderFocus,\r\n      columnGroupHeaderFocus,\r\n      headerGroupingMaxDepth,\r\n      columnMenuState,\r\n      columnVisibility,\r\n      columnGroupsHeaderStructure,\r\n      hasOtherElementInTabSequence\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    getInnerProps,\r\n    getColumnHeadersRow,\r\n    getColumnFiltersRow,\r\n    getColumnGroupHeadersRows\r\n  } = useGridColumnHeaders({\r\n    visibleColumns,\r\n    sortColumnLookup,\r\n    filterColumnLookup,\r\n    columnHeaderTabIndexState,\r\n    hasOtherElementInTabSequence,\r\n    columnGroupHeaderTabIndexState,\r\n    columnHeaderFocus,\r\n    columnGroupHeaderFocus,\r\n    headerGroupingMaxDepth,\r\n    columnMenuState,\r\n    columnVisibility,\r\n    columnGroupsHeaderStructure\r\n  });\r\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\r\n    ref: ref,\r\n    className: className\r\n  }, other, getInnerProps(), {\r\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow(), getColumnFiltersRow(), /*#__PURE__*/_jsx(Filler, {})]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  columnGroupHeaderFocus: PropTypes.shape({\r\n    depth: PropTypes.number.isRequired,\r\n    field: PropTypes.string.isRequired\r\n  }),\r\n  columnGroupHeaderTabIndexState: PropTypes.shape({\r\n    depth: PropTypes.number.isRequired,\r\n    field: PropTypes.string.isRequired\r\n  }),\r\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\r\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    groupId: PropTypes.string\r\n  }))).isRequired,\r\n  columnHeaderFocus: PropTypes.shape({\r\n    field: PropTypes.string.isRequired\r\n  }),\r\n  columnHeaderTabIndexState: PropTypes.shape({\r\n    field: PropTypes.string.isRequired\r\n  }),\r\n  columnMenuState: PropTypes.shape({\r\n    field: PropTypes.string,\r\n    open: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  columnVisibility: PropTypes.object.isRequired,\r\n  filterColumnLookup: PropTypes.object.isRequired,\r\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\r\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\r\n  sortColumnLookup: PropTypes.object.isRequired,\r\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\r\n} : void 0;\r\nexport { GridColumnHeaders };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"getColumnsToRender\", \"renderContext\", \"leftRenderContext\", \"rightRenderContext\", \"pinnedColumns\", \"visibleColumns\", \"getCellOffsetStyle\"];\r\nimport * as React from 'react';\r\nimport { gridFocusColumnHeaderFilterSelector, useGridSelector, gridFilterModelSelector, gridTabIndexColumnHeaderFilterSelector, getDataGridUtilityClass, GridPinnedColumnPosition, gridDimensionsSelector } from '@mui/x-data-grid';\r\nimport { useGridColumnHeaders as useGridColumnHeadersCommunity, useGridPrivateApiContext, getGridFilter, GridColumnHeaderRow } from '@mui/x-data-grid/internals';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { useGridRootProps } from '../../utils/useGridRootProps';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  return React.useMemo(() => {\r\n    const slots = {\r\n      headerFilterRow: ['headerFilterRow']\r\n    };\r\n    return composeClasses(slots, getDataGridUtilityClass, classes);\r\n  }, [classes]);\r\n};\r\nconst filterItemsCache = Object.create(null);\r\nexport const useGridColumnHeaders = props => {\r\n  const apiRef = useGridPrivateApiContext();\r\n  const {\r\n    headerGroupingMaxDepth,\r\n    hasOtherElementInTabSequence\r\n  } = props;\r\n  const columnHeaderFilterTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderFilterSelector);\r\n  const _useGridColumnHeaders = useGridColumnHeadersCommunity(_extends({}, props, {\r\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence || columnHeaderFilterTabIndexState !== null\r\n    })),\r\n    {\r\n      getColumnsToRender,\r\n      renderContext,\r\n      leftRenderContext,\r\n      rightRenderContext,\r\n      pinnedColumns,\r\n      visibleColumns,\r\n      getCellOffsetStyle\r\n    } = _useGridColumnHeaders,\r\n    otherProps = _objectWithoutPropertiesLoose(_useGridColumnHeaders, _excluded);\r\n  const headerFiltersRef = React.useRef(null);\r\n  apiRef.current.register('private', {\r\n    headerFiltersElementRef: headerFiltersRef\r\n  });\r\n  const headerFilterMenuRef = React.useRef(null);\r\n  const rootProps = useGridRootProps();\r\n  const classes = useUtilityClasses(rootProps);\r\n  const disableHeaderFiltering = !rootProps.headerFilters;\r\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\r\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\r\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\r\n  const columnHeaderFilterFocus = useGridSelector(apiRef, gridFocusColumnHeaderFilterSelector);\r\n  const getFilterItem = React.useCallback(colDef => {\r\n    const filterModelItem = filterModel?.items.find(it => it.field === colDef.field && it.operator !== 'isAnyOf');\r\n    if (filterModelItem != null) {\r\n      // there's a valid `filterModelItem` for this column\r\n      return filterModelItem;\r\n    }\r\n    const defaultCachedItem = filterItemsCache[colDef.field];\r\n    if (defaultCachedItem != null) {\r\n      // there's a cached `defaultItem` for this column\r\n      return defaultCachedItem;\r\n    }\r\n    // there's no cached `defaultItem` for this column, let's generate one and cache it\r\n    const defaultItem = getGridFilter(colDef);\r\n    filterItemsCache[colDef.field] = defaultItem;\r\n    return defaultItem;\r\n  }, [filterModel]);\r\n  const getColumnFilters = params => {\r\n    const {\r\n      renderedColumns,\r\n      firstColumnToRender\r\n    } = getColumnsToRender(params);\r\n    const filters = [];\r\n    for (let i = 0; i < renderedColumns.length; i += 1) {\r\n      const colDef = renderedColumns[i];\r\n      const columnIndex = firstColumnToRender + i;\r\n      const hasFocus = columnHeaderFilterFocus?.field === colDef.field;\r\n      const isFirstColumn = columnIndex === 0;\r\n      const tabIndexField = columnHeaderFilterTabIndexState?.field;\r\n      const tabIndex = tabIndexField === colDef.field || isFirstColumn && !props.hasOtherElementInTabSequence ? 0 : -1;\r\n      const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\r\n        field: colDef.field,\r\n        colDef\r\n      }) : colDef.headerClassName;\r\n      const item = getFilterItem(colDef);\r\n      const pinnedPosition = params?.position;\r\n      const style = getCellOffsetStyle({\r\n        pinnedPosition,\r\n        columnIndex,\r\n        computedWidth: colDef.computedWidth\r\n      });\r\n      filters.push( /*#__PURE__*/_jsx(rootProps.slots.headerFilterCell, _extends({\r\n        colIndex: columnIndex,\r\n        height: dimensions.headerFilterHeight,\r\n        width: colDef.computedWidth,\r\n        colDef: colDef,\r\n        hasFocus: hasFocus,\r\n        tabIndex: tabIndex,\r\n        headerFilterMenuRef: headerFilterMenuRef,\r\n        headerClassName: headerClassName,\r\n        \"data-field\": colDef.field,\r\n        item: item,\r\n        pinnedPosition: pinnedPosition,\r\n        style: style,\r\n        indexInSection: i,\r\n        sectionLength: renderedColumns.length,\r\n        gridHasFiller: gridHasFiller\r\n      }, rootProps.slotProps?.headerFilterCell), `${colDef.field}-filter`));\r\n    }\r\n    return otherProps.getFillers(params, filters, 0, true);\r\n  };\r\n  const getColumnFiltersRow = () => {\r\n    if (disableHeaderFiltering) {\r\n      return null;\r\n    }\r\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\r\n      ref: headerFiltersRef,\r\n      className: classes.headerFilterRow,\r\n      role: \"row\",\r\n      \"aria-rowindex\": headerGroupingMaxDepth + 2,\r\n      ownerState: rootProps,\r\n      children: [leftRenderContext && getColumnFilters({\r\n        position: GridPinnedColumnPosition.LEFT,\r\n        renderContext: leftRenderContext,\r\n        minFirstColumn: leftRenderContext.firstColumnIndex,\r\n        maxLastColumn: leftRenderContext.lastColumnIndex\r\n      }), getColumnFilters({\r\n        renderContext,\r\n        minFirstColumn: pinnedColumns.left.length,\r\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\r\n      }), rightRenderContext && getColumnFilters({\r\n        position: GridPinnedColumnPosition.RIGHT,\r\n        renderContext: rightRenderContext,\r\n        minFirstColumn: rightRenderContext.firstColumnIndex,\r\n        maxLastColumn: rightRenderContext.lastColumnIndex\r\n      })]\r\n    });\r\n  };\r\n  return _extends({}, otherProps, {\r\n    getColumnFiltersRow\r\n  });\r\n};", "import * as React from 'react';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { getDataGridUtilityClass, useGridSelector } from '@mui/x-data-grid';\r\nimport { EMPTY_DETAIL_PANELS } from '@mui/x-data-grid/internals';\r\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelExpandedRowIdsSelector } from '../hooks/features/detailPanel';\r\nimport { GridDetailPanel } from './GridDetailPanel';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = () => {\r\n  const slots = {\r\n    detailPanel: ['detailPanel']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, {});\r\n};\r\nexport function GridDetailPanels(props) {\r\n  const rootProps = useGridRootProps();\r\n  if (!rootProps.getDetailPanelContent) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/React.createElement(GridDetailPanelsImpl, props);\r\n}\r\nfunction GridDetailPanelsImpl({\r\n  virtualScroller\r\n}) {\r\n  const apiRef = useGridPrivateApiContext();\r\n  const classes = useUtilityClasses();\r\n  const {\r\n    setPanels\r\n  } = virtualScroller;\r\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\r\n  const detailPanelsContent = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\r\n  const detailPanelsHeights = useGridSelector(apiRef, gridDetailPanelExpandedRowsHeightCacheSelector);\r\n  const getDetailPanel = React.useCallback(rowId => {\r\n    const content = detailPanelsContent[rowId];\r\n\r\n    // Check if the id exists in the current page\r\n    const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\r\n    const exists = rowIndex !== undefined;\r\n    if (! /*#__PURE__*/React.isValidElement(content) || !exists) {\r\n      return null;\r\n    }\r\n    const hasAutoHeight = apiRef.current.detailPanelHasAutoHeight(rowId);\r\n    const height = hasAutoHeight ? 'auto' : detailPanelsHeights[rowId];\r\n    return /*#__PURE__*/_jsx(GridDetailPanel, {\r\n      rowId: rowId,\r\n      height: height,\r\n      className: classes.detailPanel,\r\n      children: content\r\n    }, `panel-${rowId}`);\r\n  }, [apiRef, classes.detailPanel, detailPanelsHeights, detailPanelsContent]);\r\n  React.useEffect(() => {\r\n    if (expandedRowIds.length === 0) {\r\n      setPanels(EMPTY_DETAIL_PANELS);\r\n    } else {\r\n      setPanels(new Map(expandedRowIds.map(rowId => [rowId, getDetailPanel(rowId)])));\r\n    }\r\n  }, [expandedRowIds, setPanels, getDetailPanel]);\r\n  return null;\r\n}", "import { useGridPrivateApiContext as useCommunityGridPrivateApiContext } from '@mui/x-data-grid/internals';\r\nexport const useGridPrivateApiContext = useCommunityGridPrivateApiContext;", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useResizeObserver } from '@mui/x-data-grid/internals';\r\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\r\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst DetailPanel = styled('div', {\r\n  name: 'MuiDataGrid',\r\n  slot: 'DetailPanel',\r\n  overridesResolver: (props, styles) => styles.detailPanel\r\n})(({\r\n  theme\r\n}) => ({\r\n  width: 'calc(var(--DataGrid-rowWidth) - var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\r\n  backgroundColor: (theme.vars || theme).palette.background.default,\r\n  overflow: 'auto'\r\n}));\r\nfunction GridDetailPanel(props) {\r\n  const {\r\n    rowId,\r\n    height,\r\n    className,\r\n    children\r\n  } = props;\r\n  const apiRef = useGridPrivateApiContext();\r\n  const ref = React.useRef(null);\r\n  const rootProps = useGridRootProps();\r\n  const ownerState = rootProps;\r\n  const hasAutoHeight = height === 'auto';\r\n  React.useLayoutEffect(() => {\r\n    if (hasAutoHeight && typeof ResizeObserver === 'undefined') {\r\n      // Fallback for IE\r\n      apiRef.current.storeDetailPanelHeight(rowId, ref.current.clientHeight);\r\n    }\r\n  }, [apiRef, hasAutoHeight, rowId]);\r\n  useResizeObserver(ref, entries => {\r\n    const [entry] = entries;\r\n    const observedHeight = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\r\n    apiRef.current.storeDetailPanelHeight(rowId, observedHeight);\r\n  }, hasAutoHeight);\r\n  return /*#__PURE__*/_jsx(DetailPanel, {\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    role: \"presentation\",\r\n    style: {\r\n      height\r\n    },\r\n    className: className,\r\n    children: children\r\n  });\r\n}\r\nexport { GridDetailPanel };", "import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { getDataGridUtilityClass, gridClasses, useGridSelector } from '@mui/x-data-grid';\r\nimport { gridPinnedRowsSelector, gridRenderContextSelector, useGridPrivateApiContext } from '@mui/x-data-grid/internals';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = () => {\r\n  const slots = {\r\n    root: ['pinnedRows']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, {});\r\n};\r\nexport function GridPinnedRows({\r\n  position,\r\n  virtualScroller\r\n}) {\r\n  const classes = useUtilityClasses();\r\n  const apiRef = useGridPrivateApiContext();\r\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\r\n  const pinnedRowsData = useGridSelector(apiRef, gridPinnedRowsSelector);\r\n  const rows = pinnedRowsData[position];\r\n  const pinnedRenderContext = React.useMemo(() => ({\r\n    firstRowIndex: 0,\r\n    lastRowIndex: rows.length,\r\n    firstColumnIndex: renderContext.firstColumnIndex,\r\n    lastColumnIndex: renderContext.lastColumnIndex\r\n  }), [rows, renderContext.firstColumnIndex, renderContext.lastColumnIndex]);\r\n  if (rows.length === 0) {\r\n    return null;\r\n  }\r\n  const pinnedRows = virtualScroller.getRows({\r\n    position,\r\n    rows,\r\n    renderContext: pinnedRenderContext\r\n  });\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    className: clsx(classes.root, gridClasses[`pinnedRows--${position}`]),\r\n    role: \"presentation\",\r\n    children: pinnedRows\r\n  });\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { GridPushPinRightIcon, GridPushPinLeftIcon } from './icons';\r\nconst iconSlots = {\r\n  columnMenuPinRightIcon: GridPushPinRightIcon,\r\n  columnMenuPinLeftIcon: GridPushPinLeftIcon\r\n};\r\nconst materialSlots = _extends({}, iconSlots);\r\nexport default materialSlots;", "import { ponyfillGlobal } from '@mui/utils';\r\nexport const getReleaseInfo = () => {\r\n  const releaseInfo = \"MTcxNzEwMjgwMDAwMA==\";\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // A simple hack to set the value in the test environment (has no build step).\r\n    // eslint-disable-next-line no-useless-concat\r\n    if (releaseInfo === '__RELEASE' + '_INFO__') {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      return ponyfillGlobal.__MUI_RELEASE_INFO__;\r\n    }\r\n  }\r\n  return releaseInfo;\r\n};", "import { GridSignature, isNumber, propValidatorsDataGrid } from '@mui/x-data-grid/internals';\r\nexport const propValidatorsDataGridPro = [...propValidatorsDataGrid, props => props.pagination && props.hideFooterRowCount && 'MUI X: The `hideFooterRowCount` prop has no effect when the pagination is enabled.' || undefined, props => props.treeData && props.filterMode === 'server' && 'MUI X: The `filterMode=\"server\"` prop is not available when the `treeData` is enabled.' || undefined, props => !props.pagination && props.checkboxSelectionVisibleOnly && 'MUI X: The `checkboxSelectionVisibleOnly` prop has no effect when the pagination is not enabled.' || undefined, props => props.signature !== GridSignature.DataGrid && props.paginationMode === 'client' && props.rowsLoadingMode !== 'server' && isNumber(props.rowCount) && 'MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode=\"client\"`) has no effect. `rowCount` is only meant to be used with `paginationMode=\"server\"`.' || undefined];", "import { useGridApiRef as useCommunityGridApiRef } from '@mui/x-data-grid';\r\nexport const useGridApiRef = useCommunityGridApiRef;", "import './typeOverloads';\r\nimport { LicenseInfo as LicenseInfoExport } from '@mui/x-license';\r\n/**\r\n * @deprecated Use `@mui/x-license` package instead:\r\n * @example import { LicenseInfo } from '@mui/x-license';\r\n */\r\nexport class LicenseInfo extends LicenseInfoExport {}\r\nexport * from '@mui/x-data-grid/components';\r\nexport * from '@mui/x-data-grid/constants';\r\nexport * from '@mui/x-data-grid/hooks';\r\nexport * from '@mui/x-data-grid/models';\r\nexport * from '@mui/x-data-grid/context';\r\nexport * from '@mui/x-data-grid/utils';\r\nexport * from '@mui/x-data-grid/colDef';\r\nexport * from './DataGridPro';\r\nexport * from './hooks';\r\nexport * from './models';\r\nexport * from './components';\r\nexport * from './utils';\r\nexport { useGridApiContext, useGridApiRef, useGridRootProps } from './typeOverloads/reexports';\r\nexport { GridColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from './components/reexports';\r\nexport { GridColumnHeaders } from './components/GridColumnHeaders';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,IAAI,CAAC;AACX,IAAI,IAAI;AACR,OAAO,IAAI,MAAK;AACd,IAAE,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI;AAEvC;AACO,SAAS,IAAI,GAAG;AACrB,QAAM,QAAQ,CAAC;AACf,MAAI,GACF,GACA,GACA,IAAI,SAAS,UAAU,CAAC,CAAC,IAAI,KAC7B,IAAI,EAAE;AACR,QAAM,IAAI,CAAC,IAAI,YAAY,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;AACjD,MAAI,EAAE,IAAI,IAAI,IAAI;AAGlB,QAAM,EAAE,CAAC,IAAI,IAAI;AACjB,SAAO,CAAC,KAAI;AAEV,UAAM,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI;AAAA,EAC1C;AACA,OAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI;AAC9B,QAAI;AACJ,WAAO,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,MAAM,CAAC,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG;AAC7R,UAAI,EAAE,CAAC,IAAI;AACX,UAAI,EAAE,CAAC;AAAA,IACT;AAGA,SAAK,IAAI,GAAG;AAAI,QAAE,EAAE,CAAC,KAAK,EAAE,CAAC;AAAA,EAG/B;AACA,OAAK,IAAI,IAAI,IAAI,MAAK;AACpB,UAAM,EAAE,KAAK,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,SAAS,EAAE;AAAA,EAEpD;AACA,SAAO;AACT;;;ACxCA,IAAM,UAAU;AAUT,IAAM,eAAe,WAAS;AACnC,MAAI,SAAS;AACb,MAAI,MAAM,MAAM;AAChB,MAAI,MAAM,MAAM,MAAM;AACtB,MAAIA,KAAI;AACR,UAAQ,MAAM,QAAQ,uBAAuB,EAAE;AAC/C,SAAOA,KAAI,MAAM,QAAQ;AACvB,WAAO,QAAQ,QAAQ,MAAM,OAAOA,IAAG,CAAC;AACxC,WAAO,QAAQ,QAAQ,MAAM,OAAOA,IAAG,CAAC;AACxC,WAAO,QAAQ,QAAQ,MAAM,OAAOA,IAAG,CAAC;AACxC,WAAO,QAAQ,QAAQ,MAAM,OAAOA,IAAG,CAAC;AACxC,WAAO,QAAQ,IAAI,QAAQ;AAC3B,YAAQ,OAAO,OAAO,IAAI,QAAQ;AAClC,YAAQ,OAAO,MAAM,IAAI;AACzB,aAAS,SAAS,OAAO,aAAa,IAAI;AAC1C,QAAI,QAAQ,IAAI;AACd,eAAS,SAAS,OAAO,aAAa,IAAI;AAAA,IAC5C;AACA,QAAI,QAAQ,IAAI;AACd,eAAS,SAAS,OAAO,aAAa,IAAI;AAAA,IAC5C;AAAA,EACF;AACA,SAAO;AACT;;;AClCO,IAAM,iBAAiB,CAAC,OAAO,SAAS;;;ACAxC,IAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAc;;;ACdd,SAAS,UAAU,SAAS;AAC1B,UAAQ,MAAM,CAAC,iEAAiE,IAAI,GAAG,SAAS,IAAI,+DAA+D,EAAE,KAAK,IAAI,CAAC;AACjL;AACO,SAAS,6BAA6B;AAC3C,YAAU,CAAC,+BAA+B,IAAI,wHAAwH,IAAI,yGAAyG,yFAAyF,CAAC;AAC/W;AACO,SAAS,kCAAkC;AAChD,YAAU,CAAC,qCAAqC,IAAI,mPAAmP,IAAI,uHAAuH,wIAAwI,CAAC;AAC7iB;AACO,SAAS,2BAA2B;AAAA,EACzC;AAAA,EACA;AACF,GAAG;AACD,YAAU,CAAC,+BAA+B,IAAI,iEAAiE,WAAW,6BAA6B,IAAI,KAAK,IAAI,mGAAmG,gMAAgM,CAAC;AAC1c;AACO,SAAS,+BAA+B;AAAA,EAC7C;AACF,GAAG;AACD,YAAU,CAAC,mCAAmC,IAAI,qCAAqC,WAAW,qLAAqL,IAAI,yKAAyK,CAAC;AACvc;AACO,SAAS,sCAAsC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,YAAU,CAAC,+BAA+B,IAAI,wCAAwC,IAAI,sOAAsO,IAAI,oEAAoE,IAAI,wCAAwC,IAAI,4EAA4E,2EAA2E,IAAI,WAAW,IAAI,2HAA2H,IAAI,mCAAmC,IAAI,KAAK,eAAe,CAAC,IAAI,4BAA4B,UAAU,IAAI,EAAE,CAAC;AACh1B;AACO,SAAS,iCAAiC;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,QAAM,IAAI,MAAM,CAAC,+BAA+B,IAAI,wCAAwC,IAAI,sOAAsO,IAAI,oEAAoE,IAAI,wCAAwC,IAAI,4EAA4E,2EAA2E,IAAI,WAAW,IAAI,2HAA2H,IAAI,mCAAmC,IAAI,KAAK,eAAe,CAAC,IAAI,4BAA4B,UAAU,IAAI,EAAE,EAAE,KAAK,IAAI,CAAC;AACj2B;;;ACjCA;AAWA,uBAAe,uBAAuB,uBAAe,wBAAwB;AAAA,EAC3E,KAAK;AACP;AACO,IAAM,cAAN,MAAM,aAAY;AAAA,EACvB,OAAO,iBAAiB;AAEtB,WAAO,uBAAe;AAAA,EACxB;AAAA,EACA,OAAO,gBAAgB;AACrB,WAAO,aAAY,eAAe,EAAE;AAAA,EACtC;AAAA,EACA,OAAO,cAAc,KAAK;AACxB,UAAM,cAAc,aAAY,eAAe;AAC/C,gBAAY,MAAM;AAAA,EACpB;AACF;;;ACzBO,IAAI,iBAA8B,SAAUC,iBAAgB;AACjE,EAAAA,gBAAe,UAAU,IAAI;AAC7B,EAAAA,gBAAe,SAAS,IAAI;AAC5B,EAAAA,gBAAe,eAAe,IAAI;AAClC,EAAAA,gBAAe,oBAAoB,IAAI;AACvC,EAAAA,gBAAe,gBAAgB,IAAI;AACnC,EAAAA,gBAAe,OAAO,IAAI;AAC1B,EAAAA,gBAAe,YAAY,IAAI;AAC/B,SAAOA;AACT,EAAE,CAAC,CAAC;;;ACGJ,IAAM,YAAY;AAIlB,IAAM,wBAAwB,aAAW;AACvC,MAAI;AACJ,MAAI;AACF,sBAAkB,SAAS,QAAQ,MAAM,SAAS,EAAE,CAAC,GAAG,EAAE;AAC1D,QAAI,CAAC,mBAAmB,OAAO,MAAM,eAAe,GAAG;AACrD,wBAAkB;AAAA,IACpB;AAAA,EACF,SAAS,KAAK;AACZ,sBAAkB;AAAA,EACpB;AACA,SAAO;AAAA,IACL,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB;AAAA,EACF;AACF;AAKA,IAAM,wBAAwB,aAAW;AACvC,QAAM,cAAc;AAAA,IAClB,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,EACnB;AACA,UAAQ,MAAM,GAAG,EAAE,IAAI,WAAS,MAAM,MAAM,GAAG,CAAC,EAAE,OAAO,QAAM,GAAG,WAAW,CAAC,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACxG,QAAI,QAAQ,KAAK;AACf,kBAAY,QAAQ;AAAA,IACtB;AACA,QAAI,QAAQ,MAAM;AAChB,kBAAY,iBAAiB;AAAA,IAC/B;AACA,QAAI,QAAQ,KAAK;AACf,YAAM,kBAAkB,SAAS,OAAO,EAAE;AAC1C,UAAI,mBAAmB,CAAC,OAAO,MAAM,eAAe,GAAG;AACrD,oBAAY,kBAAkB;AAAA,MAChC;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAKA,IAAM,gBAAgB,oBAAkB;AACtC,QAAM,UAAU,aAAa,cAAc;AAC3C,MAAI,QAAQ,SAAS,cAAc,GAAG;AACpC,WAAO,sBAAsB,OAAO;AAAA,EACtC;AACA,MAAI,QAAQ,SAAS,MAAM,GAAG;AAC5B,WAAO,sBAAsB,OAAO;AAAA,EACtC;AACA,SAAO;AACT;AACO,SAAS,cAAc;AAAA,EAC5B,aAAAC;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,MAAI,CAACA,cAAa;AAChB,UAAM,IAAI,MAAM,0EAA0E;AAAA,EAC5F;AACA,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,QAAM,OAAO,WAAW,OAAO,GAAG,EAAE;AACpC,QAAM,UAAU,WAAW,OAAO,EAAE;AACpC,MAAI,SAAS,IAAI,OAAO,GAAG;AACzB,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,QAAM,UAAU,cAAc,OAAO;AACrC,MAAI,WAAW,MAAM;AACnB,YAAQ,MAAM,uDAAuD;AACrE,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,MAAI,QAAQ,kBAAkB,QAAQ,CAAC,iBAAiB,SAAS,QAAQ,cAAc,GAAG;AACxF,YAAQ,MAAM,sEAAsE;AACpF,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,MAAI,QAAQ,mBAAmB,MAAM;AACnC,YAAQ,MAAM,uEAAuE;AACrF,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,MAAI,QAAQ,mBAAmB,eAAe,OAAuC;AACnF,UAAM,eAAe,SAAS,aAAaA,YAAW,GAAG,EAAE;AAC3D,QAAI,OAAO,MAAM,YAAY,GAAG;AAC9B,YAAM,IAAI,MAAM,0EAA0E;AAAA,IAC5F;AACA,QAAI,QAAQ,kBAAkB,cAAc;AAC1C,aAAO;AAAA,QACL,QAAQ,eAAe;AAAA,MACzB;AAAA,IACF;AAAA,EACF,WAAW,QAAQ,mBAAmB,kBAAkB,QAAQ,mBAAmB,UAAU;AAC3F,SAAI,oBAAI,KAAK,GAAE,QAAQ,IAAI,QAAQ,iBAAiB;AAClD;AAAA;AAAA,SAEA,oBAAI,KAAK,GAAE,QAAQ,IAAI,QAAQ,kBAAkB,MAAO,OAAO,KAAK,MAAM;AAAA,QAAwC;AAChH,eAAO;AAAA,UACL,QAAQ,eAAe;AAAA,UACvB,MAAM;AAAA,YACJ,iBAAiB,QAAQ;AAAA,YACzB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,QACL,QAAQ,eAAe;AAAA,QACvB,MAAM;AAAA,UACJ,iBAAiB,QAAQ;AAAA,UACzB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,MAAI,QAAQ,SAAS,QAAQ,CAAC,eAAe,SAAS,QAAQ,KAAK,GAAG;AACpE,YAAQ,MAAM,qDAAqD;AACnE,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,MAAI,CAAC,eAAe,SAAS,QAAQ,KAAK,GAAG;AAC3C,WAAO;AAAA,MACL,QAAQ,eAAe;AAAA,IACzB;AAAA,EACF;AACA,SAAO;AAAA,IACL,QAAQ,eAAe;AAAA,EACzB;AACF;;;AC9JA;AACA,IAAAC,SAAuB;;;ACDvB,YAAuB;AACvB,IAAM,wBAA2C,oBAAc;AAAA,EAC7D,KAAK;AACP,CAAC;AACD,IAAI,MAAuC;AACzC,wBAAsB,cAAc;AACtC;AACA,IAAO,gCAAQ;;;ADAR,IAAM,wBAAwB,CAAC;AAC/B,SAAS,mBAAmB,aAAaC,cAAa;AAC3D,QAAM;AAAA,IACJ,KAAK;AAAA,EACP,IAAU,kBAAW,6BAAqB;AAC1C,SAAa,eAAQ,MAAM;AACzB,UAAM,aAAa,cAAc,YAAY,cAAc;AAG3D,QAAI,sBAAsB,WAAW,KAAK,sBAAsB,WAAW,EAAE,QAAQ,YAAY;AAC/F,aAAO,sBAAsB,WAAW,EAAE;AAAA,IAC5C;AACA,UAAM,iBAAiB,YAAY,SAAS,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,SAAS;AACxF,UAAM,OAAO,YAAY,SAAS,SAAS,IAAI,YAAY;AAC3D,UAAM,gBAAgB,cAAc;AAAA,MAClC,aAAAA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,kBAAkB,QAAQ,WAAW;AAC3C,QAAI,cAAc,WAAW,eAAe,OAAO;AAAA,IAEnD,WAAW,cAAc,WAAW,eAAe,SAAS;AAC1D,iCAA2B;AAAA,IAC7B,WAAW,cAAc,WAAW,eAAe,YAAY;AAC7D,sCAAgC;AAAA,IAClC,WAAW,cAAc,WAAW,eAAe,UAAU;AAC3D,iCAA2B;AAAA,QACzB;AAAA,QACA,aAAa;AAAA,MACf,CAAC;AAAA,IACH,WAAW,cAAc,WAAW,eAAe,oBAAoB;AACrE,4CAAsC,SAAS;AAAA,QAC7C;AAAA,MACF,GAAG,cAAc,IAAI,CAAC;AAAA,IACxB,WAAW,cAAc,WAAW,eAAe,eAAe;AAChE,uCAAiC,SAAS;AAAA,QACxC;AAAA,MACF,GAAG,cAAc,IAAI,CAAC;AAAA,IACxB,WAAW,cAAc,WAAW,eAAe,gBAAgB;AACjE,qCAA+B;AAAA,QAC7B,aAAa;AAAA,MACf,CAAC;AAAA,IACH,WAAW,MAAuC;AAChD,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AACA,0BAAsB,WAAW,IAAI;AAAA,MACnC,KAAK;AAAA,MACL,iBAAiB;AAAA,IACnB;AACA,WAAO;AAAA,EACT,GAAG,CAAC,aAAaA,cAAa,UAAU,CAAC;AAC3C;;;AE3DA,IAAAC,SAAuB;AAGvB,yBAA4B;AAC5B,SAAS,uBAAuB,eAAe;AAC7C,UAAQ,eAAe;AAAA,IACrB,KAAK,eAAe;AAAA,IACpB,KAAK,eAAe;AAClB,aAAO;AAAA,IACT,KAAK,eAAe;AAClB,aAAO;AAAA,IACT,KAAK,eAAe;AAClB,aAAO;AAAA,IACT,KAAK,eAAe;AAClB,aAAO;AAAA,IACT,KAAK,eAAe;AAClB,aAAO;AAAA,IACT;AACE,YAAM,IAAI,MAAM,iCAAiC;AAAA,EACrD;AACF;AACO,SAAS,UAAU,OAAO;AAC/B,QAAM;AAAA,IACJ;AAAA,IACA,aAAAC;AAAA,EACF,IAAI;AACJ,QAAM,gBAAgB,mBAAmB,aAAaA,YAAW;AACjE,MAAI,cAAc,WAAW,eAAe,OAAO;AACjD,WAAO;AAAA,EACT;AACA,aAAoB,mBAAAC,KAAK,OAAO;AAAA,IAC9B,OAAO;AAAA,MACL,UAAU;AAAA,MACV,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,eAAe;AAAA,MACf,UAAU;AAAA,IACZ;AAAA,IACA,UAAU,uBAAuB,cAAc,MAAM;AAAA,EACvD,CAAC;AACH;;;AC7CA,IAAAC,SAAuB;AAMvB,IAAAC,sBAA4B;;;ACHrB,SAAS,WAAW;AACzB,MAAI,OAAuC;AACzC,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,CAAC,yFAAyF,IAAI,2EAA2E,EAAE,KAAK,IAAI,CAAC;AACvM;AAKO,SAAS,kBAAkB;AAChC,MAAI,OAAuC;AACzC,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,CAAC,gGAAgG,IAAI,2EAA2E,EAAE,KAAK,IAAI,CAAC;AAC9M;;;AChBA;AACA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;;;ACJtB;AACA,IAAAC,SAAuB;AAIhB,IAAM,kCAAkC,CAAC,OAAO,UAAU,SAAS,CAAC,GAAG,OAAO;AAAA,EACnF,iBAAiB;AAAA,IACf,SAAS,MAAM,iBAAiB;AAAA,IAChC,SAAS;AAAA,IACT,UAAU;AAAA,EACZ;AACF,CAAC;AACM,IAAM,yBAAyB,CAAC,QAAQ,UAAU;AACvD,QAAM,SAAS,cAAc,QAAQ,wBAAwB;AAC7D,QAAM,uBAA6B,mBAAY,uBAAqB;AAClE,WAAO,QAAQ,SAAS,WAAS;AAG/B,UAAI,MAAM,cAAc,YAAY;AAClC,eAAO;AAAA,MACT;AACA,aAAO,SAAS,CAAC,GAAG,OAAO;AAAA,QACzB,iBAAiB;AAAA,UACf,SAAS,MAAM,iBAAiB;AAAA,UAChC,SAAS,kBAAkB,WAAW;AAAA,UACtC,UAAU,kBAAkB,YAAY;AAAA,QAC1C;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,WAAO,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,QAAQ,MAAM,WAAW,MAAM,aAAa,CAAC;AACjD,QAAM,4BAAkC,mBAAY,WAAS;AAC3D,WAAO,MAAM,kDAAkD,KAAK,EAAE;AACtE,WAAO,QAAQ,qBAAqB;AAAA,MAClC,SAAS;AAAA,IACX,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,MAAM,CAAC;AACnB,QAAM,2BAAiC,mBAAY,MAAM;AACvD,WAAO,MAAM,qCAAqC;AAClD,WAAO,QAAQ,qBAAqB;AAAA,MAClC,SAAS;AAAA,IACX,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,MAAM,CAAC;AACnB,QAAM,uBAA6B,mBAAY,WAAS;AACtD,WAAO,MAAM,yCAAyC,KAAK,EAAE;AAC7D,WAAO,QAAQ,qBAAqB;AAAA,MAClC,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,MAAM,CAAC;AACnB,QAAM,uBAA6B,mBAAY,MAAM;AACnD,WAAO,MAAM,4CAA4C;AACzD,QAAI,eAAe,OAAO,QAAQ,MAAM,gBAAgB;AACxD,QAAI,cAAc;AAChB,YAAM,eAAe,yBAAyB,MAAM;AACpD,YAAM,wBAAwB,kCAAkC,MAAM;AACtE,YAAM,gBAAgB,yBAAyB,MAAM;AAGrD,UAAI,CAAC,aAAa,YAAY,GAAG;AAC/B,uBAAe,cAAc,CAAC;AAAA,MAChC;AAGA,UAAI,sBAAsB,YAAY,MAAM,OAAO;AAEjD,cAAM,uBAAuB,cAAc,OAAO,WAAS;AACzD,cAAI,UAAU,cAAc;AAC1B,mBAAO;AAAA,UACT;AACA,iBAAO,sBAAsB,KAAK,MAAM;AAAA,QAC1C,CAAC;AACD,cAAM,aAAa,qBAAqB,QAAQ,YAAY;AAC5D,uBAAe,qBAAqB,aAAa,CAAC,KAAK,qBAAqB,aAAa,CAAC;AAAA,MAC5F;AACA,aAAO,QAAQ,qBAAqB;AAAA,QAClC,UAAU;AAAA,MACZ,CAAC;AACD,aAAO,QAAQ,2BAA2B,YAAY;AAAA,IACxD;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,CAAC;AACnB,QAAM,yBAAyB;AAAA,IAC7B;AAAA,EACF;AACA,QAAM,kBAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,mBAAiB,QAAQ,iBAAiB,QAAQ;AAClD,mBAAiB,QAAQ,wBAAwB,SAAS;AAK1D,QAAM,gBAAsB,cAAO,IAAI;AACvC,EAAM,iBAAU,MAAM;AACpB,QAAI,cAAc,SAAS;AACzB,oBAAc,UAAU;AAAA,IAC1B,OAAO;AACL,aAAO,QAAQ,qBAAqB;AAAA,QAClC,SAAS,MAAM,iBAAiB;AAAA,MAClC,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,aAAa,CAAC;AAClC;;;ACzGA,IAAAC,SAAuB;AAGvB;AAEA,IAAAC,sBAA4B;AAC5B,IAAM,gCAAgCC,gBAAO,KAAK,EAAE;AAAA,EAClD,UAAU;AAAA,EACV,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AACV,CAAC;AAOM,IAAM,wBAAwB,CAAC,QAAQ,UAAU;AACtD,QAAM,iBAAiB,gBAAgB,QAAQ,oCAAoC;AACnF,QAAM,cAAc,mBAAmB,QAAQ,KAAK;AACpD,QAAM,WAAiB,cAAO;AAC9B,QAAM,iBAAuB,cAAO,IAAI;AACxC,QAAM,YAAY,MAAM,oBAAoB,YAAY,CAAC,CAAC,MAAM;AAChE,QAAM,qBAAqB,yBAAiB,CAAC,CAAC,KAAK,MAAM;AAxB3D;AAyBI,UAAM,eAAe,MAAM;AAC3B,UAAM,iBAAiB,MAAM;AAC7B,QAAI,kBAAkB,iBAAiB,GAAG;AACxC,YAAM,mBAAmB,OAAO,QAAQ,oBAAoB;AAC5D,YAAM,qBAAqB;AAAA,QACzB;AAAA,QACA;AAAA,QACA,kBAAkB,YAAY,KAAK;AAAA,MACrC;AACA,aAAO,QAAQ,aAAa,iBAAiB,kBAAkB;AAC/D,qBAAS,YAAT,mBAAkB;AAElB,qBAAe,UAAU;AAAA,IAC3B;AAAA,EACF,CAAC;AACD,QAAM,kBAAkB,OAAO,QAAQ,mBAAmB;AAC1D,QAAM,aAAa,gBAAgB,QAAQ,sBAAsB;AACjE,QAAM,eAAe,MAAM,sBAAsB,WAAW,aAAa,WAAW,gBAAgB;AACpG,EAAM,iBAAU,MAAM;AA3CxB;AA4CI,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AACA,QAAI,CAAC,iBAAiB;AACpB;AAAA,IACF;AACA,mBAAS,YAAT,mBAAkB;AAClB,aAAS,UAAU,IAAI,qBAAqB,oBAAoB;AAAA,MAC9D,WAAW;AAAA,MACX,MAAM;AAAA,MACN,YAAY,WAAW,YAAY;AAAA,IACrC,CAAC;AACD,QAAI,eAAe,SAAS;AAC1B,eAAS,QAAQ,QAAQ,eAAe,OAAO;AAAA,IACjD;AAAA,EACF,GAAG,CAAC,iBAAiB,oBAAoB,WAAW,YAAY,CAAC;AACjE,QAAM,aAAmB,mBAAY,UAAQ;AA5D/C;AA8DI,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AACA,QAAI,eAAe,YAAY,MAAM;AACnC,qBAAS,YAAT,mBAAkB;AAClB,qBAAe,UAAU;AACzB,UAAI,eAAe,SAAS;AAC1B,uBAAS,YAAT,mBAAkB,QAAQ,eAAe;AAAA,MAC3C;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,CAAC;AACd,QAAM,mCAAyC,mBAAY,CAAC;AAAA,IAC1D;AAAA,EACF,MAAM;AACJ,QAAI,CAAC,WAAW;AACd,aAAO;AAAA,IACT;AACA,eAAoB,oBAAAC,KAAK,+BAA+B;AAAA,MACtD,KAAK;AAAA,MAIL,MAAM;AAAA,IACR,GAAG,WAAW,SAAS,EAAE;AAAA,EAC3B,GAAG,CAAC,WAAW,UAAU,CAAC;AAC1B,QAAM,2BAA2B;AAAA,IAC/B;AAAA,EACF;AACA,mBAAiB,QAAQ,0BAA0B,SAAS;AAC5D,0BAAwB,QAAQ,iBAAiB,MAAM,eAAe;AACxE;;;AC5FA;AACA,IAAAC,SAAuB;AACvB;;;ACDO,IAAM,4BAA4B,WAAS,MAAM;AACjD,IAAM,mCAAmC,eAAe,2BAA2B,mBAAiB,cAAc,OAAO;;;ADIhI,IAAM,6BAA6B;AACnC,IAAM,8BAA8B;AACpC,IAAM,0BAA0B,CAAC,oBAAoB,oBAAoB;AACvE,SAAO,mBAAmB,KAAK,gBAAgB,IAAI,8BAA8B;AACnF;AACA,IAAM,2BAA2B,CAAC,oBAAoB,oBAAoB,mBAAmB,MAAM,gBAAgB,KAAK,mBAAmB,MAAM,gBAAgB;AACjK,IAAM,oBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,sBAAsB,CAAC,wBAAwB;AAAA,EACjD;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACO,IAAM,gCAAgC,WAAS,SAAS,CAAC,GAAG,OAAO;AAAA,EACxE,eAAe;AAAA,IACb,SAAS;AAAA,EACX;AACF,CAAC;AAKM,IAAM,uBAAuB,CAAC,QAAQ,UAAU;AACrD,QAAM,SAAS,cAAc,QAAQ,sBAAsB;AAC3D,QAAM,cAAoB,cAAO,IAAI;AACrC,QAAM,iBAAuB,cAAO;AAAA,IAClC,GAAG;AAAA,IACH,GAAG;AAAA,EACL,CAAC;AACD,QAAM,oBAA0B,cAAO,IAAI;AAC3C,QAAM,mBAAyB,cAAO,CAAC,CAAC;AACxC,QAAM,yBAA+B,cAAO;AAC5C,QAAM,aAAa;AAAA,IACjB,SAAS,MAAM;AAAA,EACjB;AACA,QAAM,UAAU,kBAAkB,UAAU;AAC5C,QAAM,QAAQ,SAAS;AACvB,EAAM,iBAAU,MAAM;AACpB,WAAO,MAAM;AACX,mBAAa,uBAAuB,OAAO;AAAA,IAC7C;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,kBAAwB,mBAAY,CAAC,QAAQ,UAAU;AAC3D,QAAI,MAAM,wBAAwB,OAAO,OAAO,gBAAgB;AAC9D;AAAA,IACF;AACA,WAAO,MAAM,sBAAsB,OAAO,KAAK,EAAE;AAGjD,UAAM,gBAAgB;AACtB,gBAAY,UAAU,MAAM;AAC5B,gBAAY,QAAQ,UAAU,IAAI,QAAQ,oBAAoB;AAC9D,QAAI,MAAM,cAAc;AACtB,YAAM,aAAa,gBAAgB;AAAA,IACrC;AACA,WAAO,QAAQ,SAAS,WAAS,SAAS,CAAC,GAAG,OAAO;AAAA,MACnD,eAAe,SAAS,CAAC,GAAG,MAAM,eAAe;AAAA,QAC/C,SAAS,OAAO;AAAA,MAClB,CAAC;AAAA,IACH,CAAC,CAAC;AACF,WAAO,QAAQ,YAAY;AAC3B,2BAAuB,UAAU,WAAW,MAAM;AAChD,kBAAY,QAAQ,UAAU,OAAO,QAAQ,oBAAoB;AAAA,IACnE,CAAC;AACD,sBAAkB,UAAU,OAAO,QAAQ,eAAe,OAAO,OAAO,KAAK;AAC7E,UAAM,0BAA0B,OAAO,QAAQ,mBAAmB,OAAO,KAAK;AAC9E,UAAM,cAAc,kBAAkB;AACtC,UAAM,aAAa,OAAO,QAAQ,cAAc;AAChD,UAAM,eAAe,OAAO,QAAQ,mBAAmB;AACvD,UAAM,8BAA8B,cAAY;AAC9C,YAAM,QAAQ,WAAW,QAAQ,EAAE;AACnC,aAAO,OAAO,QAAQ,mBAAmB,KAAK;AAAA,IAChD;AAGA,QAAI,kBAAkB;AACtB,4BAAwB,QAAQ,aAAW;AApF/C;AAqFM,UAAI,GAAC,kBAAa,OAAO,MAApB,mBAAuB,iBAAgB;AAE1C,YAAI,cAAc,KAAK,4BAA4B,cAAc,CAAC,EAAE,SAAS,OAAO,GAAG;AACrF,4BAAkB;AAAA,QACpB,WAAW,cAAc,IAAI,WAAW,UAAU,4BAA4B,cAAc,CAAC,EAAE,SAAS,OAAO,GAAG;AAChH,4BAAkB;AAAA,QACpB;AAAA,MACF;AAAA,IACF,CAAC;AACD,qBAAiB,UAAU,CAAC;AAC5B,aAAS,gBAAgB,GAAG,gBAAgB,WAAW,QAAQ,iBAAiB,GAAG;AACjF,YAAM,YAAY,iBAAiB,cAAc,gBAAgB,IAAI;AACrE,YAAM,aAAa,gBAAgB,cAAc,gBAAgB,gBAAgB;AACjF,UAAI,oBAAoB,MAAM;AAE5B,YAAI,aAAa;AACjB,YAAI,aAAa,KAAK,4BAA4B,SAAS,EAAE,SAAS,eAAe,GAAG;AACtF,uBAAa;AAAA,QACf,WAAW,aAAa,WAAW,UAAU,4BAA4B,UAAU,EAAE,SAAS,eAAe,GAAG;AAC9G,uBAAa;AAAA,QACf;AACA,YAAI,CAAC,YAAY;AACf,2BAAiB,QAAQ,aAAa,IAAI;AAAA,QAC5C;AAAA,MACF;AAGA,UAAI,aAAa,KAAK,aAAa,WAAW,QAAQ;AACpD,oCAA4B,UAAU,EAAE,QAAQ,aAAW;AAjHnE;AAkHU,cAAI,4BAA4B,SAAS,EAAE,SAAS,OAAO,GAAG;AAC5D,gBAAI,CAAC,wBAAwB,SAAS,OAAO,GAAG;AAE9C,kBAAI,GAAC,kBAAa,OAAO,MAApB,mBAAuB,iBAAgB;AAC1C,iCAAiB,QAAQ,aAAa,IAAI;AAAA,cAC5C;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,GAAG,CAAC,MAAM,sBAAsB,QAAQ,sBAAsB,QAAQ,MAAM,CAAC;AAC7E,QAAM,kBAAwB,mBAAY,CAAC,QAAQ,UAAU;AAC3D,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AAAA,EACxB,GAAG,CAAC,CAAC;AACL,QAAM,iBAAuB,mBAAY,CAAC,QAAQ,UAAU;AAC1D,UAAM,eAAe,iCAAiC,MAAM;AAC5D,QAAI,CAAC,cAAc;AACjB;AAAA,IACF;AACA,WAAO,MAAM,qBAAqB,OAAO,KAAK,EAAE;AAChD,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AACtB,UAAM,cAAc;AAAA,MAClB,GAAG,MAAM;AAAA,MACT,GAAG,MAAM;AAAA,IACX;AACA,QAAI,OAAO,UAAU,gBAAgB,yBAAyB,eAAe,SAAS,WAAW,GAAG;AAClG,YAAM,iBAAiB,OAAO,QAAQ,eAAe,OAAO,OAAO,KAAK;AACxE,YAAM,wBAAwB,OAAO,QAAQ,eAAe,OAAO,OAAO,IAAI;AAC9E,YAAM,YAAY,OAAO,QAAQ,UAAU,OAAO,KAAK;AACvD,YAAM,eAAe,OAAO,QAAQ,eAAe,cAAc,KAAK;AACtE,YAAM,iBAAiB,OAAO,QAAQ,kBAAkB;AACxD,YAAM,aAAa,OAAO,QAAQ,cAAc;AAChD,YAAM,uBAAuB,wBAAwB,eAAe,SAAS,WAAW;AACxF,YAAM,eAAe,yBAAyB,+BAA+B,MAAM,cAAc,QAAQ,eAAe,iBAAiB,iBAAiB;AAC1J,YAAM,gBAAgB,yBAAyB,gCAAgC,MAAM,cAAc,QAAQ,iBAAiB,eAAe,eAAe;AAC1J,UAAI,gBAAgB,eAAe;AACjC,YAAI;AACJ,YAAI,6BAA6B;AACjC,YAAI,CAAC,UAAU,gBAAgB;AAC7B,2BAAiB;AAAA,QACnB,WAAW,cAAc;AACvB,2BAAiB,wBAAwB,KAAK,CAAC,eAAe,wBAAwB,CAAC,EAAE;AAAA,QAC3F,OAAO;AACL,2BAAiB,wBAAwB,eAAe,SAAS,KAAK,CAAC,eAAe,wBAAwB,CAAC,EAAE;AAAA,QACnH;AACA,YAAI,iBAAiB,QAAQ,cAAc,GAAG;AAC5C,cAAI;AACJ,cAAI,kBAAkB,iBAAiB;AACvC,cAAI,cAAc;AAChB,qCAAyB,wBAAwB,IAAI,eAAe,wBAAwB,CAAC,EAAE,QAAQ;AACvG,mBAAO,kBAAkB,KAAK,WAAW,eAAe,EAAE,UAAU,0BAA0B,iBAAiB,QAAQ,eAAe,GAAG;AACvI,4CAA8B;AAC9B,gCAAkB,iBAAiB;AAAA,YACrC;AAAA,UACF,OAAO;AACL,qCAAyB,wBAAwB,IAAI,eAAe,SAAS,eAAe,wBAAwB,CAAC,EAAE,QAAQ;AAC/H,mBAAO,kBAAkB,WAAW,SAAS,KAAK,WAAW,eAAe,EAAE,UAAU,0BAA0B,iBAAiB,QAAQ,eAAe,GAAG;AAC3J,4CAA8B;AAC9B,gCAAkB,iBAAiB;AAAA,YACrC;AAAA,UACF;AACA,cAAI,iBAAiB,QAAQ,eAAe,KAAK,WAAW,eAAe,EAAE,UAAU,wBAAwB;AAE7G,6BAAiB;AAAA,UACnB;AAAA,QACF;AACA,cAAM,0BAA0B,OAAO,QAAQ,6BAA6B,kBAAkB,gBAAgB;AAAA,UAC5G,aAAa;AAAA,QACf,CAAC;AACD,YAAI,yBAAyB;AAC3B,iBAAO,QAAQ,eAAe,cAAc,iBAAiB,0BAA0B;AAAA,QACzF;AAAA,MACF;AACA,qBAAe,UAAU;AAAA,IAC3B;AAAA,EACF,GAAG,CAAC,QAAQ,QAAQ,MAAM,SAAS,CAAC;AACpC,QAAM,gBAAsB,mBAAY,CAAC,QAAQ,UAAU;AACzD,UAAM,eAAe,iCAAiC,MAAM;AAC5D,QAAI,MAAM,wBAAwB,CAAC,cAAc;AAC/C;AAAA,IACF;AACA,WAAO,MAAM,kBAAkB;AAC/B,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AACtB,iBAAa,uBAAuB,OAAO;AAC3C,gBAAY,UAAU;AAGtB,QAAI,MAAM,aAAa,eAAe,UAAU,CAAC,MAAM,oCAAoC;AAEzF,aAAO,QAAQ,eAAe,cAAc,kBAAkB,OAAO;AACrE,wBAAkB,UAAU;AAAA,IAC9B,OAAO;AAEL,YAAM,0BAA0B;AAAA,QAC9B,QAAQ,OAAO,QAAQ,UAAU,YAAY;AAAA,QAC7C,aAAa,OAAO,QAAQ,uCAAuC,YAAY;AAAA,QAC/E,UAAU,kBAAkB;AAAA,MAC9B;AACA,aAAO,QAAQ,aAAa,qBAAqB,uBAAuB;AAAA,IAC1E;AACA,WAAO,QAAQ,SAAS,WAAS,SAAS,CAAC,GAAG,OAAO;AAAA,MACnD,eAAe,SAAS,CAAC,GAAG,MAAM,eAAe;AAAA,QAC/C,SAAS;AAAA,MACX,CAAC;AAAA,IACH,CAAC,CAAC;AACF,WAAO,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,MAAM,sBAAsB,MAAM,oCAAoC,QAAQ,MAAM,CAAC;AACzF,yBAAuB,QAAQ,yBAAyB,eAAe;AACvE,yBAAuB,QAAQ,yBAAyB,eAAe;AACvE,yBAAuB,QAAQ,wBAAwB,cAAc;AACrE,yBAAuB,QAAQ,uBAAuB,aAAa;AACnE,yBAAuB,QAAQ,iBAAiB,eAAe;AAC/D,yBAAuB,QAAQ,gBAAgB,cAAc;AAC7D,0BAAwB,QAAQ,qBAAqB,MAAM,mBAAmB;AAChF;;;AE9OA,IAAAC,SAAuB;;;ACAvB;AAMO,IAAM,kCAAkC,SAAS,CAAC,GAAG,qBAAqB;AAAA,EAC/E,MAAM;AAAA,EACN,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa,CAAC,OAAO,KAAK,QAAQ,WAAW;AAC3C,UAAM,QAAQ,OAAO,QAAQ,SAAS,GAAG;AACzC,UAAM,UAAU,OAAO,QAAQ,WAAW,KAAK;AAC/C,YAAO,mCAAS,UAAS,YAAW,mCAAS,UAAS,SAAS,QAAQ,cAAc;AAAA,EACvF;AACF,CAAC;AACM,IAAM,gCAAgC;AACtC,IAAM,oDAAoD;AAAA,EAC/D,OAAO;AAAA,EACP,UAAU;AAAA,EACV,WAAW;AACb;;;ADtBO,IAAM,kBAAkB,YAAU;AAIvC,QAAM,oBAA0B,mBAAY,CAAC,QAAQ,UAAU;AAC7D,UAAM,aAAa,OAAO,QAAQ,cAAc,OAAO,IAAI,OAAO,KAAK;AACvE,QAAI,WAAW,OAAO,UAAU,iCAAiC,MAAM,QAAQ,OAAO,CAAC,MAAM,UAAU;AACrG,UAAI,OAAO,QAAQ,SAAS,SAAS;AACnC;AAAA,MACF;AACA,aAAO,QAAQ,wBAAwB,OAAO,IAAI,CAAC,OAAO,QAAQ,gBAAgB;AAAA,IACpF;AAAA,EACF,GAAG,CAAC,MAAM,CAAC;AACX,yBAAuB,QAAQ,eAAe,iBAAiB;AACjE;;;AEjBA;AACA;AAEA,IAAAC,UAAuB;;;ACFhB,IAAM,qBAAqB;AAO3B,IAAM,4BAA4B,YAAU;AACjD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,qBAAqB,CAAC;AAC5B,QAAM,gCAAgC,CAAC;AACvC,QAAM,cAAc,CAAC;AACrB,QAAM,gBAAgB;AAAA,IACpB,oBAAoB;AAAA,IACpB,0BAA0B;AAAA,EAC5B;AACA,QAAM,iBAAiB,CAAC,MAAM,yBAAyB,yBAAyB;AAC9E,UAAM,oBAAoB,4BAA4B,KAAK,QAAQ;AACnE,QAAI;AACJ,QAAI,mBAAmB;AACrB,0BAAoB;AAAA,IACtB,WAAW,CAAC,wBAAwB,KAAK,SAAS,UAAU;AAC1D,0BAAoB;AAAA,IACtB,OAAO;AACL,YAAM,MAAM,OAAO,QAAQ,OAAO,KAAK,EAAE;AACzC,2BAAqB,KAAK,QAAW,aAAa;AAClD,0BAAoB,gBAAgB,CAAC,cAAc,kBAAkB,GAAG,CAAC,cAAc,wBAAwB,GAAG,OAAO,aAAa,OAAO,QAAQ,WAAW;AAAA,IAClK;AACA,QAAI,0BAA0B;AAC9B,QAAI,KAAK,SAAS,SAAS;AACzB,WAAK,SAAS,QAAQ,aAAW;AAC/B,cAAM,YAAY,QAAQ,OAAO;AACjC,cAAM,mBAAmB,eAAe,WAAW,qBAAqB,yBAAyB,wBAAwB,CAAC,CAAC,KAAK,gBAAgB;AAChJ,mCAA2B;AAAA,MAC7B,CAAC;AAAA,IACH;AACA,QAAI;AACJ,YAAQ,mBAAmB;AAAA,MACzB,KAAK,MACH;AACE,4BAAoB;AACpB;AAAA,MACF;AAAA,MACF,KAAK,OACH;AACE,4BAAoB,0BAA0B;AAC9C;AAAA,MACF;AAAA,MACF,SACE;AACE,4BAAoB;AACpB;AAAA,MACF;AAAA,IACJ;AACA,uBAAmB,KAAK,EAAE,IAAI;AAC9B,QAAI,CAAC,mBAAmB;AACtB,aAAO;AAAA,IACT;AACA,kCAA8B,KAAK,EAAE,IAAI;AACzC,QAAI,KAAK,SAAS,UAAU;AAC1B,aAAO;AAAA,IACT;AACA,WAAO,0BAA0B;AAAA,EACnC;AACA,QAAM,QAAQ,OAAO,OAAO,OAAO;AACnC,WAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK,GAAG;AACxC,UAAM,OAAO,MAAMA,EAAC;AACpB,QAAI,KAAK,UAAU,GAAG;AACpB,qBAAe,MAAM,MAAM,IAAI;AAAA,IACjC;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;ACjFA;AACA,IAAAC,SAAuB;AACvB,wBAAsB;AACtB;;;ACFO,IAAMC,oBAAmB;;;ACAzB,IAAMC,qBAAoB;;;AFOjC,IAAAC,sBAA2C;AAC3C,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,sBAAsB;AAAA,IAC7B,QAAQ,CAAC,4BAA4B;AAAA,EACvC;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACA,SAAS,yBAAyB,OAAO;AAnBzC;AAoBE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,mBAAmB;AAAA,EACrB,IAAI;AACJ,QAAM,YAAYC,kBAAiB;AACnC,QAAM,SAASC,mBAAkB;AACjC,QAAM,aAAa;AAAA,IACjB,SAAS,UAAU;AAAA,EACrB;AACA,QAAM,UAAUF,mBAAkB,UAAU;AAC5C,QAAM,gCAAgC,gBAAgB,QAAQ,yCAAyC;AACvG,QAAM,0BAA0B,8BAA8B,QAAQ,EAAE,KAAK;AAC7E,QAAM,OAAO,QAAQ,mBAAmB,UAAU,MAAM,uBAAuB,UAAU,MAAM;AAC/F,QAAM,cAAc,WAAS;AAC3B,WAAO,QAAQ,wBAAwB,IAAI,CAAC,QAAQ,gBAAgB;AACpE,WAAO,QAAQ,aAAa,IAAI,KAAK;AACrC,UAAM,gBAAgB;AAAA,EACxB;AACA,aAAoB,oBAAAG,MAAM,aAAK;AAAA,IAC7B,WAAW,QAAQ;AAAA,IACnB,IAAI;AAAA,MACF,IAAI,QAAQ,QAAQ;AAAA,IACtB;AAAA,IACA,UAAU,KAAc,oBAAAC,KAAK,OAAO;AAAA,MAClC,WAAW,QAAQ;AAAA,MACnB,UAAU,0BAA0B,SAAkB,oBAAAA,KAAK,UAAU,MAAM,gBAAgB,SAAS;AAAA,QAClG,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,cAAc,QAAQ,mBAAmB,OAAO,QAAQ,cAAc,kBAAkB,IAAI,OAAO,QAAQ,cAAc,gBAAgB;AAAA,MAC3I,IAAG,4CAAW,cAAX,mBAAsB,gBAAgB;AAAA,QACvC,cAAuB,oBAAAA,KAAK,MAAM;AAAA,UAChC,UAAU;AAAA,QACZ,CAAC;AAAA,MACH,CAAC,CAAC;AAAA,IACJ,CAAC,OAAgB,oBAAAD,MAAM,QAAQ;AAAA,MAC7B,UAAU,CAAC,mBAAmB,SAAY,QAAQ,cAAc,gBAAgB,CAAC,uBAAuB,0BAA0B,IAAI,KAAK,uBAAuB,MAAM,EAAE;AAAA,IAC5K,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AACA,OAAwC,yBAAyB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ3E,KAAK,kBAAAE,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAItB,UAAU,kBAAAA,QAAU,MAAM,CAAC,QAAQ,MAAM,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA,EAI5C,QAAQ,kBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAIzB,OAAO,kBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,iBAAiB,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,MAAM;AAAA,IACpE,SAAS,kBAAAA,QAAU,MAAM;AAAA,MACvB,OAAO,kBAAAA,QAAU,KAAK;AAAA,IACxB,CAAC;AAAA,EACH,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIH,gBAAgB,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI1B,UAAU,kBAAAA,QAAU,KAAK;AAAA,EACzB,qBAAqB,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI/B,IAAI,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA,EAI9D,YAAY,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,kBAAkB,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI5B,KAAK,kBAAAA,QAAU,IAAI;AAAA;AAAA;AAAA;AAAA,EAInB,SAAS,kBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAI1B,UAAU,kBAAAA,QAAU,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,OAAO,kBAAAA,QAAU;AACnB,IAAI;;;AGtIJ,IAAAC,UAAuB;AAEvB,IAAAC,qBAAsB;AAOtB,IAAAC,sBAA2C;AAC3C,SAAS,0BAA0B,OAAO;AACxC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,SAASC,mBAAkB;AACjC,QAAM,YAAYC,kBAAiB;AACnC,QAAM,QAAQ,SAAS;AACvB,QAAM,YAAkB,oBAAY,CAAAC,UAAQ,WAAS;AACnD,WAAO,QAAQ,UAAU,OAAO,OAAOA,KAAI;AAC3C,YAAQ,KAAK;AAAA,EACf,GAAG,CAAC,QAAQ,OAAO,OAAO,OAAO,CAAC;AAClC,QAAM,cAAc,WAAS;AAC3B,WAAO,QAAQ,YAAY,OAAO,KAAK;AACvC,YAAQ,KAAK;AAAA,EACf;AACA,QAAM,wBAAiC,oBAAAC,MAAM,kBAAU;AAAA,IACrD,SAAS,UAAU,yBAAyB,IAAI;AAAA,IAChD,UAAU,KAAc,oBAAAC,KAAK,sBAAc;AAAA,MACzC,cAAuB,oBAAAA,KAAK,UAAU,MAAM,uBAAuB;AAAA,QACjE,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC,OAAgB,oBAAAA,KAAK,sBAAc;AAAA,MAClC,UAAU,OAAO,QAAQ,cAAc,WAAW;AAAA,IACpD,CAAC,CAAC;AAAA,EACJ,CAAC;AACD,QAAM,yBAAkC,oBAAAD,MAAM,kBAAU;AAAA,IACtD,SAAS,UAAU,yBAAyB,KAAK;AAAA,IACjD,UAAU,KAAc,oBAAAC,KAAK,sBAAc;AAAA,MACzC,cAAuB,oBAAAA,KAAK,UAAU,MAAM,wBAAwB;AAAA,QAClE,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC,OAAgB,oBAAAA,KAAK,sBAAc;AAAA,MAClC,UAAU,OAAO,QAAQ,cAAc,YAAY;AAAA,IACrD,CAAC,CAAC;AAAA,EACJ,CAAC;AACD,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,QAAM,OAAO,OAAO,QAAQ,eAAe,OAAO,KAAK;AACvD,MAAI,MAAM;AACR,UAAM,YAAY,SAAS,yBAAyB,QAAQ,yBAAyB,OAAO,yBAAyB;AACrH,UAAM,QAAQ,cAAc,yBAAyB,QAAQ,eAAe;AAC5E,UAAM,OAAO,SAAS,yBAAyB,QAAQ,UAAU,MAAM,wBAAwB,UAAU,MAAM;AAC/G,eAAoB,oBAAAD,MAAY,kBAAU;AAAA,MACxC,UAAU,KAAc,oBAAAA,MAAM,kBAAU;AAAA,QACtC,SAAS,UAAU,SAAS;AAAA,QAC5B,UAAU,KAAc,oBAAAC,KAAK,sBAAc;AAAA,UACzC,cAAuB,oBAAAA,KAAK,MAAM;AAAA,YAChC,UAAU;AAAA,UACZ,CAAC;AAAA,QACH,CAAC,OAAgB,oBAAAA,KAAK,sBAAc;AAAA,UAClC,UAAU,OAAO,QAAQ,cAAc,KAAK;AAAA,QAC9C,CAAC,CAAC;AAAA,MACJ,CAAC,OAAgB,oBAAAD,MAAM,kBAAU;AAAA,QAC/B,SAAS;AAAA,QACT,UAAU,KAAc,oBAAAC,KAAK,sBAAc,CAAC,CAAC,OAAgB,oBAAAA,KAAK,sBAAc;AAAA,UAC9E,UAAU,OAAO,QAAQ,cAAc,OAAO;AAAA,QAChD,CAAC,CAAC;AAAA,MACJ,CAAC,CAAC;AAAA,IACJ,CAAC;AAAA,EACH;AACA,MAAI,MAAM,cAAc,OAAO;AAC7B,eAAoB,oBAAAD,MAAY,kBAAU;AAAA,MACxC,UAAU,CAAC,oBAAoB,iBAAiB;AAAA,IAClD,CAAC;AAAA,EACH;AACA,aAAoB,oBAAAA,MAAY,kBAAU;AAAA,IACxC,UAAU,CAAC,mBAAmB,kBAAkB;AAAA,EAClD,CAAC;AACH;AACA,OAAwC,0BAA0B,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5E,QAAQ,mBAAAE,QAAU,OAAO;AAAA,EACzB,SAAS,mBAAAA,QAAU,KAAK;AAC1B,IAAI;;;ACxFJ;AACA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;AACtB;;;ACFO,IAAM,wCAAwC,WAAS,MAAM,YAAY;AACzE,IAAM,kDAAkD,WAAS,MAAM,YAAY;AACnF,IAAM,wCAAwC,WAAS,MAAM,YAAY;AAGzE,IAAM,iDAAiD,uBAAuB,uCAAuC,iBAAe,OAAO,QAAQ,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI;AAAA,EACvL;AACF,CAAC,MAAM;AACL,MAAI,EAAE,IAAI,UAAU;AACpB,SAAO;AACT,GAAG,CAAC,CAAC,CAAC;;;ADHN,IAAAC,sBAA4B;AAC5B,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,yBAAyB,cAAc,iCAAiC;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACA,SAAS,0BAA0B,OAAO;AAnB1C;AAoBE,QAAM;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,EACT,IAAI;AACJ,QAAM,YAAYC,kBAAiB;AACnC,QAAM,SAASC,mBAAkB;AACjC,QAAM,aAAa;AAAA,IACjB,SAAS,UAAU;AAAA,IACnB;AAAA,EACF;AACA,QAAM,UAAUF,mBAAkB,UAAU;AAC5C,QAAM,eAAe,gBAAgB,QAAQ,+CAA+C;AAC5F,QAAM,aAAgC,uBAAe,aAAa,EAAE,CAAC;AACrE,QAAM,OAAO,aAAa,UAAU,MAAM,0BAA0B,UAAU,MAAM;AACpF,aAAoB,oBAAAG,KAAK,UAAU,MAAM,gBAAgB,SAAS;AAAA,IAChE,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU,CAAC;AAAA,IACX,WAAW,QAAQ;AAAA,IACnB,cAAc,aAAa,OAAO,QAAQ,cAAc,qBAAqB,IAAI,OAAO,QAAQ,cAAc,mBAAmB;AAAA,EACnI,IAAG,eAAU,cAAV,mBAAqB,gBAAgB;AAAA,IACtC,cAAuB,oBAAAA,KAAK,MAAM;AAAA,MAChC,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,CAAC;AACJ;AACA,OAAwC,0BAA0B,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ5E,KAAK,mBAAAC,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAItB,UAAU,mBAAAA,QAAU,MAAM,CAAC,QAAQ,MAAM,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA,EAI5C,QAAQ,mBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAIzB,OAAO,mBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,iBAAiB,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,MAAM,mBAAAA,QAAU,MAAM;AAAA,IACpE,SAAS,mBAAAA,QAAU,MAAM;AAAA,MACvB,OAAO,mBAAAA,QAAU,KAAK;AAAA,IACxB,CAAC;AAAA,EACH,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIH,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI1B,UAAU,mBAAAA,QAAU,KAAK;AAAA;AAAA;AAAA;AAAA,EAIzB,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA,EAI9D,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAItB,KAAK,mBAAAA,QAAU,IAAI;AAAA;AAAA;AAAA;AAAA,EAInB,SAAS,mBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAI1B,UAAU,mBAAAA,QAAU,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,OAAO,mBAAAA,QAAU;AACnB,IAAI;;;AE9GJ,IAAAC,UAAuB;AACvBC;AACA,IAAAC,sBAA4B;AACrB,IAAM,uBAAuB,kBAA4B,oBAAAC,KAAK,KAAK;AAAA,EACxE,WAAW;AAAA,EACX,cAAuB,oBAAAA,KAAK,QAAQ;AAAA,IAClC,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC;AACH,CAAC,GAAG,cAAc;AACX,IAAM,sBAAsB,kBAA4B,oBAAAA,KAAK,KAAK;AAAA,EACvE,WAAW;AAAA,EACX,cAAuB,oBAAAA,KAAK,QAAQ;AAAA,IAClC,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC;AACH,CAAC,GAAG,aAAa;;;AChBjB;AACA;AAEA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;AAEtB;AAGA,IAAAC,sBAA2C;AAP3C,IAAM,YAAY,CAAC,aAAa,QAAQ,SAAS,aAAa,uBAAuB,UAAU;AAQ/F,IAAM,KAAK;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,SAAS,8BAA8B,OAAO;AAf9C;AAgBE,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb,IAAI,OACJ,SAAS,8BAA8B,OAAO,SAAS;AACzD,QAAM,WAAW,MAAM;AACvB,QAAM,SAAS,MAAM;AACrB,QAAM,YAAYC,kBAAiB;AACnC,QAAM,SAAS,kBAAkB;AACjC,QAAM,gBAAgB,gBAAgB,QAAQ,+BAA+B;AAC7E,QAAM,OAAO,QAAQ,kBAAkB,SAAS,oBAAoB,OAAO;AAC3E,QAAM,cAAc,WAAS;AAC3B,wBAAoB,UAAU,MAAM;AACpC,WAAO,QAAQ,qBAAqB,KAAK;AAAA,EAC3C;AACA,MAAI,CAAC,UAAU,MAAM,kBAAkB;AACrC,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,OAAO,QAAQ,cAAc,qBAAqB;AAChE,QAAM,cAAc,QAAQ,OAAO,KAAK,IAAI;AAC5C,aAAoB,oBAAAC,MAAY,kBAAU;AAAA,IACxC,UAAU,KAAc,oBAAAC,KAAK,UAAU,MAAM,gBAAgB,SAAS;AAAA,MACpE,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,cAAc;AAAA,MACd,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,iBAAiB,OAAO,SAAS;AAAA,MACjC,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,SAAS;AAAA,MACT;AAAA,MACA;AAAA,IACF,IAAG,eAAU,cAAV,mBAAqB,gBAAgB;AAAA,MACtC,cAAuB,oBAAAA,KAAK,UAAU,MAAM,sBAAsB;AAAA,QAChE,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC,CAAC,OAAgB,oBAAAA,KAAK,UAAU,MAAM,kBAAkB,SAAS;AAAA,MAChE;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,oBAAoB;AAAA,MAC5B;AAAA,MACA,YAAY;AAAA,MACZ,IAAI;AAAA,IACN,GAAG,MAAM,CAAC,CAAC;AAAA,EACb,CAAC;AACH;AACA,OAAwC,8BAA8B,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhF,oBAAoB,mBAAAC,QAAU,KAAK;AAAA,EACnC,WAAW;AAAA,EACX,UAAU,mBAAAA,QAAU;AAAA,EACpB,OAAO,mBAAAA,QAAU,OAAO;AAAA,EACxB,qBAAqB,mBAAAA,QAAU,MAAM;AAAA,IACnC,SAAS,mBAAAA,QAAU;AAAA,EACrB,CAAC,EAAE;AAAA,EACH,MAAM,mBAAAA,QAAU,MAAM;AAAA,IACpB,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC;AAAA,IAC5D,UAAU,mBAAAA,QAAU,OAAO;AAAA,IAC3B,OAAO,mBAAAA,QAAU;AAAA,EACnB,CAAC,EAAE;AAAA,EACH,WAAW,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC3C,kBAAkB,mBAAAA,QAAU,KAAK;AAAA,IACjC,kBAAkB,mBAAAA,QAAU;AAAA,IAC5B,aAAa,mBAAAA,QAAU;AAAA,IACvB,gBAAgB,mBAAAA,QAAU;AAAA,IAC1B,qBAAqB,mBAAAA,QAAU;AAAA,IAC/B,OAAO,mBAAAA,QAAU;AAAA,IACjB,qBAAqB,mBAAAA,QAAU;AAAA,IAC/B,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC,CAAC,EAAE;AACN,IAAI;;;ACjGJ;AACA;AAEA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;AACtB;AACA;;;ACNA;AACA,IAAAC,UAAuB;AAEvB,IAAAC,sBAA4B;AAC5B,IAAMC,MAAK;AAAA,EACT,SAAS;AACX;AACA,SAAS,4BAA4B,OAAO;AAP5C;AAQE,QAAM,YAAYC,kBAAiB;AACnC,aAAoB,oBAAAC,KAAK,UAAU,MAAM,gBAAgB,SAAS;AAAA,IAChE,UAAU;AAAA,IACV,cAAc;AAAA,IACd,MAAM;AAAA,IACN,IAAIF;AAAA,EACN,GAAG,QAAO,eAAU,cAAV,mBAAqB,gBAAgB;AAAA,IAC7C,cAAuB,oBAAAE,KAAK,UAAU,MAAM,qBAAqB;AAAA,MAC/D,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,CAAC;AACJ;;;ADPA,IAAAC,uBAA2C;AAV3C,IAAMC,aAAY,CAAC,YAAY,UAAU,YAAY,SAAS,mBAAmB,UAAU,QAAQ,uBAAuB,uBAAuB,iBAAiB,kBAAkB,SAAS,kBAAkB,iBAAiB,eAAe;AAW/O,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,gBAAgB,OAAO,gBAAgB,UAAU,2BAA2B,OAAO,gBAAgB,YAAY,6BAA6B,OAAO,gBAAgB,WAAW,4BAA4B,mBAAmB,mBAAmB,iCAAiC,kBAAkB,gCAAgC,mBAAmB,UAAU,4BAA4B,mBAAmB,WAAW,2BAA2B;AAAA,EAC9b;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACA,IAAM,SAAS;AAAA,EACb,CAAC,+BAA+B,GAAG;AAAA,IACjC,OAAO;AAAA,EACT;AACF;AACA,IAAM,uBAA0C,mBAAW,CAAC,OAAO,QAAQ;AACzE,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OACJ,QAAQ,8BAA8B,OAAOD,UAAS;AACxD,QAAM,SAAS,yBAAyB;AACxC,QAAM,eAAe,gBAAgB,QAAQ,+BAA+B;AAC5E,QAAM,YAAYE,kBAAiB;AACnC,QAAM,UAAgB,eAAO,IAAI;AACjC,QAAM,YAAY,WAAW,KAAK,OAAO;AACzC,QAAM,WAAiB,eAAO,IAAI;AAClC,QAAM,YAAkB,eAAO,IAAI;AACnC,QAAM,eAAe,gBAAgB,QAAQ,oCAAoC;AACjF,QAAM,YAAY,iBAAiB,OAAO;AAC1C,QAAM,gBAAgB,gBAAgB,QAAQ,+BAA+B;AAC7E,QAAM,aAAa,kBAAkB,OAAO;AAG5C,QAAM,kBAAwB,gBAAQ,MAAM;AAC1C,QAAI,CAAC,OAAO,iBAAiB;AAC3B,aAAO,CAAC;AAAA,IACV;AACA,WAAO,OAAO,gBAAgB,OAAO,cAAY,SAAS,UAAU,SAAS;AAAA,EAC/E,GAAG,CAAC,OAAO,eAAe,CAAC;AAC3B,QAAM,cAAc,gBAAgB,QAAQ,uBAAuB;AACnE,QAAM,0BAA0B,gBAAgB,QAAQ,kCAAkC;AAC1F,QAAM,mBAAyB,gBAAQ,MAAM;AAC3C,QAAI,EAAC,2CAAa,MAAM,SAAQ;AAC9B,aAAO;AAAA,IACT;AACA,UAAM,kBAAkB,YAAY,MAAM,KAAK,QAAM,GAAG,UAAU,OAAO,KAAK;AAC9E,WAAO,kBAAkB,CAAC,wBAAwB,gBAAgB,KAAK,IAAI;AAAA,EAC7E,GAAG,CAAC,OAAO,OAAO,aAAa,uBAAuB,CAAC;AACvD,QAAM,kBAAwB,gBAAQ,MAAM,gBAAgB,KAAK,cAAY,SAAS,UAAU,KAAK,QAAQ,KAAK,gBAAgB,CAAC,GAAG,CAAC,KAAK,UAAU,eAAe,CAAC;AACtK,QAAM,iBAAiB,OAAO,cAAc,mBAAmB,gBAAgB,iBAAiB;AAChG,QAAM,qBAA2B,oBAAY,iBAAe;AAC1D,QAAI,KAAK,SAAS,CAAC,YAAY,OAAO;AACpC,aAAO,QAAQ,iBAAiB,WAAW;AAC3C;AAAA,IACF;AACA,WAAO,QAAQ,iBAAiB,WAAW;AAAA,EAC7C,GAAG,CAAC,QAAQ,IAAI,CAAC;AACjB,QAAM,kBAAwB,oBAAY,MAAM;AAC9C,WAAO,QAAQ,iBAAiB,IAAI;AAAA,EACtC,GAAG,CAAC,QAAQ,IAAI,CAAC;AACjB,MAAI;AACJ,MAAI,OAAO,oBAAoB;AAC7B,4BAAwB,OAAO,mBAAmB,SAAS,CAAC,GAAG,OAAO;AAAA,MACpE;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACA,EAAM,wBAAgB,MAAM;AAC1B,QAAI,YAAY,CAAC,YAAY;AAC3B,UAAI,mBAAmB,QAAQ,QAAQ,cAAc,gBAAgB;AACrE,UAAI,aAAa,gBAAgB;AAC/B,2BAAmB,SAAS;AAAA,MAC9B;AACA,YAAM,iBAAiB,oBAAoB,QAAQ;AACnD,uDAAgB;AAChB,aAAO,QAAQ,0BAA0B,QAAQ,aAAa;AAAA,IAChE;AAAA,EACF,GAAG,CAAC,gBAAgB,QAAQ,UAAU,WAAW,UAAU,CAAC;AAC5D,QAAM,YAAkB,oBAAY,WAAS;AAC3C,QAAI,cAAc,gBAAgB,MAAM,GAAG,KAAK,kBAAkB;AAChE;AAAA,IACF;AACA,YAAQ,MAAM,KAAK;AAAA,MACjB,KAAK;AACH,YAAI,WAAW;AACb,iBAAO,QAAQ,yBAAyB;AAAA,QAC1C;AACA;AAAA,MACF,KAAK;AACH,YAAI,WAAW;AACb,cAAI,CAAC,MAAM,kBAAkB;AAC3B,mBAAO,QAAQ,yBAAyB;AACxC;AAAA,UACF;AAAA,QACF;AACA,YAAI,MAAM,WAAW,MAAM,SAAS;AAClC,8BAAoB,UAAU,UAAU;AACxC,iBAAO,QAAQ,qBAAqB,OAAO,KAAK;AAChD;AAAA,QACF;AACA,eAAO,QAAQ,0BAA0B,OAAO,KAAK;AACrD;AAAA,MACF,KAAK,OACH;AACE,YAAI,WAAW;AACb,gBAAM,eAAe,aAAa,YAAY,MAAM,WAAW,KAAK,EAAE,KAAK;AAC3E,cAAI,cAAc;AAChB,mBAAO,QAAQ,0BAA0B,YAAY;AACrD,mBAAO,QAAQ,2BAA2B,cAAc,KAAK;AAAA,UAC/D;AAAA,QACF;AACA;AAAA,MACF;AAAA,MACF;AACE,YAAI,aAAa,MAAM,WAAW,MAAM,WAAW,MAAM,UAAU,MAAM,UAAU;AACjF;AAAA,QACF;AACA,eAAO,QAAQ,0BAA0B,OAAO,KAAK;AACrD;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,QAAQ,OAAO,OAAO,UAAU,cAAc,qBAAqB,WAAW,kBAAkB,UAAU,CAAC;AAC/G,QAAM,UAAgB,oBAAY,CAAC,WAAW,gBAAgB,WAAS;AACrE,WAAO,QAAQ,aAAa,WAAW,OAAO,QAAQ,sBAAsB,OAAO,KAAK,GAAG,KAAK;AAChG,QAAI,aAAa;AACf,kBAAY,KAAK;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,QAAQ,OAAO,KAAK,CAAC;AACzB,QAAM,cAAoB,oBAAY,WAAS;AA5JjD;AA6JI,QAAI,CAAC,UAAU;AACb,WAAI,oBAAS,YAAT,mBAAkB,aAAlB,4BAA6B,MAAM,SAAS;AAC9C,iBAAS,QAAQ,MAAM;AAAA,MACzB;AACA,aAAO,QAAQ,2BAA2B,OAAO,OAAO,KAAK;AAAA,IAC/D;AAAA,EACF,GAAG,CAAC,QAAQ,OAAO,OAAO,QAAQ,CAAC;AACnC,QAAM,sBAA4B,gBAAQ,OAAO;AAAA,IAC/C,WAAW,QAAQ,uBAAuB,SAAS;AAAA,IACnD,SAAS,QAAQ,mBAAmB;AAAA,IACpC,aAAa,QAAQ,yBAAyB,WAAW;AAAA,IACzD,QAAQ,QAAQ,kBAAkB;AAAA,EACpC,IAAI,CAAC,aAAa,WAAW,OAAO,CAAC;AACrC,QAAM,iBAAiB,yBAAyB,gBAAgB,cAAc;AAC9E,QAAM,kBAAkB,0BAA0B,gBAAgB,gBAAgB,eAAe,UAAU,wBAAwB,aAAa;AAChJ,QAAM,aAAa,SAAS,CAAC,GAAG,WAAW;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,QAAM,UAAUD,mBAAkB,UAAU;AAC5C,QAAM,oBAAoB,gBAAgB,wBAAwB;AAClE,QAAM,YAAY,QAAQ,6BAAM,KAAK,KAAK;AAC1C,QAAM,QAAQ,gBAAgB,eAAe,OAAO,QAAQ,cAAc,uBAAuB,WAAW,KAAK,QAAQ,CAAC,EAAE;AAC5H,QAAM,iBAAiB,aAAa;AACpC,aAAoB,qBAAAE,MAAM,OAAO,SAAS;AAAA,IACxC,WAAW,aAAK,QAAQ,MAAM,eAAe;AAAA,IAC7C,KAAK;AAAA,IACL,OAAO,SAAS;AAAA,MACd;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV,UAAU;AAAA,IACZ,GAAG,SAAS;AAAA,IACZ,MAAM;AAAA,IACN,iBAAiB,WAAW;AAAA,IAC5B,cAAc,yBAAyB,OAAO,OAAO,cAAc,OAAO,QAAQ;AAAA,EACpF,GAAG,OAAO,qBAAqB;AAAA,IAC7B,UAAU,CAAC,uBAAuB,kBAAkB,0BAA0B,aAAyB,qBAAAA,MAAY,kBAAU;AAAA,MAC3H,UAAU,KAAc,qBAAAC,KAAK,gBAAgB,SAAS;AAAA,QACpD;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,QACZ,SAAS,MAAM,OAAO,QAAQ,0BAA0B,OAAO,KAAK;AAAA,QACpE,QAAQ,WAAS;AA3MzB;AA4MU,iBAAO,QAAQ,yBAAyB;AAExC,cAAI,GAAC,WAAM,kBAAN,mBAAqB,UAAU,SAAS,kBAAiB;AAC5D,mBAAO,QAAQ,SAAS,WAAS,SAAS,CAAC,GAAG,OAAO;AAAA,cACnD,OAAO;AAAA,gBACL,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,oBAAoB;AAAA,gBACpB,mBAAmB;AAAA,cACrB;AAAA,YACF,CAAC,CAAC;AAAA,UACJ;AAAA,QACF;AAAA,QACA,OAAO,WAAW,KAAK;AAAA,QACvB,aAAa;AAAA,QACb;AAAA,QACA,aAAa,iBAAiB,gBAAyB,qBAAAA,KAAK,6BAA6B;AAAA,UACvF,SAAS;AAAA,UACT,UAAU;AAAA,QACZ,CAAC,IAAI;AAAA,QACL,UAAU,oBAAoB;AAAA,QAC9B,UAAU;AAAA,QACV,iBAAiB;AAAA,QACjB,IAAI,OAAO,SAAS,UAAU,OAAO,SAAS,aAAa,SAAS;AAAA,MACtE,GAAG,oBAAoB;AAAA,QACrB,OAAO;AAAA,MACT,IAAI,CAAC,GAAG,mDAAiB,qBAAqB,mBAAmB,CAAC,OAAgB,qBAAAA,KAAK,+BAA+B;AAAA,QACpH,WAAW;AAAA,QACX;AAAA,QACA,OAAO,OAAO;AAAA,QACd,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC,CAAC;AAAA,IACJ,CAAC,IAAI,IAAI;AAAA,EACX,CAAC,CAAC;AACJ,CAAC;AACD,OAAwC,qBAAqB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvE,QAAQ,mBAAAC,QAAU,OAAO;AAAA,EACzB,UAAU,mBAAAA,QAAU,OAAO;AAAA,EAC3B,eAAe,mBAAAA,QAAU,KAAK;AAAA,EAC9B,UAAU,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpB,iBAAiB,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,MAAM,mBAAAA,QAAU,MAAM,CAAC;AAAA,EACvE,qBAAqB,mBAAAA,QAAU,MAAM;AAAA,IACnC,SAAS,mBAAAA,QAAU;AAAA,EACrB,CAAC,EAAE;AAAA,EACH,QAAQ,mBAAAA,QAAU,OAAO;AAAA,EACzB,gBAAgB,mBAAAA,QAAU,OAAO;AAAA,EACjC,qBAAqB,mBAAAA,QAAU;AAAA,EAC/B,MAAM,mBAAAA,QAAU,MAAM;AAAA,IACpB,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC;AAAA,IAC5D,UAAU,mBAAAA,QAAU,OAAO;AAAA,IAC3B,OAAO,mBAAAA,QAAU;AAAA,EACnB,CAAC,EAAE;AAAA,EACH,gBAAgB,mBAAAA,QAAU,MAAM,CAAC,QAAQ,OAAO,CAAC;AAAA,EACjD,eAAe,mBAAAA,QAAU,OAAO;AAAA,EAChC,eAAe,mBAAAA,QAAU;AAAA,EACzB,WAAW,mBAAAA,QAAU;AAAA,EACrB,OAAO,mBAAAA,QAAU;AAAA,EACjB,UAAU,mBAAAA,QAAU,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAAA,EACnC,OAAO,mBAAAA,QAAU,OAAO;AAC1B,IAAI;AACJ,IAAM,WAAW,SAAS,oBAAoB;;;AEnR9C;AACA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;AAGtB;AAEA,IAAAC,uBAA4B;AAC5B,SAAS,qBAAqB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,QAAM,SAAS,kBAAkB;AACjC,QAAM,WAAiB,oBAAY,MAAM;AACvC,WAAO,QAAQ,qBAAqB;AAAA,EACtC,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,oBAA0B,oBAAY,WAAS;AACnD,QAAI,MAAM,QAAQ,OAAO;AACvB,YAAM,eAAe;AAAA,IACvB;AACA,QAAI,MAAM,QAAQ,YAAY,MAAM,QAAQ,OAAO;AACjD,eAAS;AAAA,IACX;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AACb,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,aAAoB,qBAAAC,KAAK,UAAU;AAAA,IACjC,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,cAAuB,qBAAAA,KAAK,kBAAU;AAAA,MACpC,mBAAmB;AAAA,MACnB;AAAA,MACA,WAAW;AAAA,MACX,UAAU,UAAU,IAAI,CAAC,IAAIC,OAAM;AACjC,cAAM,SAAQ,yBAAI,gBAAe,OAAO,QAAQ,cAAc,uBAAuB,WAAW,GAAG,KAAK,CAAC,EAAE;AAC3G,mBAAoB,qBAAAD,KAAK,kBAAU;AAAA,UACjC,SAAS,MAAM;AACb,+BAAmB,SAAS,CAAC,GAAG,MAAM;AAAA,cACpC,UAAU,GAAG;AAAA,YACf,CAAC,CAAC;AACF,qBAAS;AAAA,UACX;AAAA,UACA,WAAWC,OAAM,IAAI,OAAO;AAAA,UAC5B,UAAU,GAAG,UAAU,KAAK;AAAA,UAC5B,UAAU;AAAA,QACZ,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,EAAE;AAAA,MAC3B,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AACA,OAAwC,qBAAqB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvE,oBAAoB,mBAAAC,QAAU,KAAK;AAAA,EACnC,OAAO,mBAAAA,QAAU,OAAO;AAAA,EACxB,IAAI,mBAAAA,QAAU,OAAO;AAAA,EACrB,MAAM,mBAAAA,QAAU,MAAM;AAAA,IACpB,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC;AAAA,IAC5D,UAAU,mBAAAA,QAAU,OAAO;AAAA,IAC3B,OAAO,mBAAAA,QAAU;AAAA,EACnB,CAAC,EAAE;AAAA,EACH,YAAY,mBAAAA,QAAU,OAAO;AAAA,EAC7B,MAAM,mBAAAA,QAAU,KAAK;AAAA,EACrB,WAAW,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC3C,kBAAkB,mBAAAA,QAAU,KAAK;AAAA,IACjC,kBAAkB,mBAAAA,QAAU;AAAA,IAC5B,aAAa,mBAAAA,QAAU;AAAA,IACvB,gBAAgB,mBAAAA,QAAU;AAAA,IAC1B,qBAAqB,mBAAAA,QAAU;AAAA,IAC/B,OAAO,mBAAAA,QAAU;AAAA,IACjB,qBAAqB,mBAAAA,QAAU;AAAA,IAC/B,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC,CAAC,EAAE;AAAA,EACJ,QAAQ;AACV,IAAI;;;ACtFJ;AAEO,IAAM,wBAAwB,UAAQ;AAC3C,QAAM,UAAU,KAAK,IAAI,sBAAoB,GAAG,iBAAiB,KAAK,IAAI,iBAAiB,GAAG,EAAE,EAAE,KAAK,GAAG;AAC1G,SAAO,sBAAsB,OAAO;AACtC;AACO,IAAM,oBAAoB,CAAC;AAAA,EAChC;AAAA,EACA;AACF,MAAM;AACJ,QAAM,OAAO,CAAC;AACd,MAAI,OAAO,KAAK,EAAE;AAClB,SAAO,KAAK,OAAO,oBAAoB;AACrC,SAAK,KAAK;AAAA,MACR,OAAO,KAAK,SAAS,SAAS,OAAO,KAAK;AAAA,MAC1C,KAAK,KAAK;AAAA,IACZ,CAAC;AACD,WAAO,KAAK,KAAK,MAAM;AAAA,EACzB;AACA,OAAK,QAAQ;AACb,SAAO;AACT;AACO,IAAM,8BAA8B,CAAC,MAAM,+BAA+B,6BAA6B;AAC5G,MAAI;AACJ,MAAI,KAAK,OAAO,oBAAoB;AAClC,uBAAmB;AAAA,EACrB,WAAW,0BAA0B;AACnC,uBAAmB,yBAAyB,IAAI;AAAA,EAClD,OAAO;AACL,uBAAmB,kCAAkC,MAAM,gCAAgC,KAAK;AAAA,EAClG;AACA,OAAK,mBAAmB;AACxB,SAAO;AACT;AAKO,IAAM,mBAAmB,CAAC,MAAM,MAAM,YAAY,iBAAiB;AAtC1E;AAwCE,OAAK,KAAK,EAAE,IAAI;AAGhB,aAAW,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,KAAK,KAAK;AAGzD,QAAM,aAAa,KAAK,KAAK,MAAM;AACnC,MAAI,KAAK,SAAS,WAAW,KAAK,SAAS,QAAQ;AAGjD,UAAM,oBAAoB,KAAK,iBAAiB;AAChD,UAAM,kBAAkB,KAAK,eAAe;AAC5C,UAAM,iBAAgB,gBAAW,qBAAX,mBAA8B;AACpD,QAAI,iBAAiB,QAAQ,aAAa,WAAW,EAAE,MAAM,KAAK,WAAW,EAAE,GAAG;AAChF,iBAAW,WAAW,CAAC,GAAG,WAAW,UAAU,KAAK,EAAE;AAAA,IACxD,OAAO;AACL,iBAAW,SAAS,KAAK,KAAK,EAAE;AAAA,IAClC;AACA,QAAI,iBAAiB,MAAM;AACzB,iBAAW,iBAAiB,iBAAiB,IAAI;AAAA,QAC/C,CAAC,gBAAgB,SAAS,CAAC,GAAG,KAAK;AAAA,MACrC;AAAA,IACF,OAAO;AACL,oBAAc,gBAAgB,SAAS,CAAC,IAAI,KAAK;AAAA,IACnD;AAAA,EACF,WAAW,KAAK,SAAS,UAAU;AAGjC,eAAW,WAAW,KAAK;AAAA,EAC7B;AACF;AAKO,IAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AACF,MAAM;AAEJ,SAAO,KAAK,KAAK,EAAE;AAGnB,QAAM,YAAY,KAAK;AACvB,QAAM,mBAAmB,WAAW,SAAS;AAC7C,MAAI,qBAAqB,GAAG;AAC1B,WAAO,WAAW,SAAS;AAAA,EAC7B,OAAO;AACL,eAAW,SAAS,IAAI,mBAAmB;AAAA,EAC7C;AAGA,QAAM,aAAa,KAAK,KAAK,MAAM;AAGnC,MAAI,KAAK,SAAS,UAAU;AAC1B,SAAK,WAAW,EAAE,IAAI,SAAS,CAAC,GAAG,YAAY;AAAA,MAC7C,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,OAGK;AACH,UAAM,gBAAgB,KAAK,iBAAiB;AAC5C,UAAM,cAAc,KAAK,eAAe;AAGxC,UAAM,WAAW,WAAW,SAAS,OAAO,aAAW,YAAY,KAAK,EAAE;AAC1E,UAAM,mBAAmB,WAAW;AACpC,WAAO,iBAAiB,aAAa,EAAE,YAAY,SAAS,CAAC;AAC7D,SAAK,WAAW,EAAE,IAAI,SAAS,CAAC,GAAG,YAAY;AAAA,MAC7C;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAKO,IAAM,oCAAoC,CAAC;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AAEJ,OAAK,SAAS,QAAQ,aAAW;AAC/B,SAAK,OAAO,IAAI,SAAS,CAAC,GAAG,KAAK,OAAO,GAAG;AAAA,MAC1C,QAAQ,YAAY;AAAA,IACtB,CAAC;AAAA,EACH,CAAC;AAGD,qBAAmB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAGD,QAAM,YAAY,SAAS,CAAC,GAAG,MAAM,WAAW;AAChD,mBAAiB,WAAW,MAAM,YAAY,YAAY;AAC5D;AACO,IAAM,6BAA6B,OAAO;AAAA,EAC/C,OAAO,CAAC;AAAA,EACR,UAAU,SAAS,QAAQ;AACzB,QAAI,CAAC,KAAK,MAAM,OAAO,GAAG;AACxB,WAAK,MAAM,OAAO,IAAI,CAAC;AAAA,IACzB;AACA,SAAK,MAAM,OAAO,EAAE,MAAM,IAAI;AAAA,EAChC;AACF;AACO,IAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC,oBAAoB;AACvB,WAAO,CAAC;AAAA,EACV;AACA,QAAM,oBAAoB,CAAC;AAC3B,QAAM,iBAAiB,CAAC,MAAM,yBAAyB;AACrD,UAAM,qBAAqB,mBAAmB,KAAK,EAAE;AACrD,QAAI,KAAK,SAAS,SAAS;AACzB,WAAK,SAAS,QAAQ,aAAW;AAC/B,cAAM,YAAY,KAAK,OAAO;AAC9B,uBAAe,WAAW,wBAAwB,CAAC,CAAC,KAAK,gBAAgB;AAAA,MAC3E,CAAC;AAAA,IACH;AACA,sBAAkB,KAAK,EAAE,IAAI,sBAAsB;AAGnD,QAAI,KAAK,SAAS,WAAW,KAAK,YAAY,MAAM;AAClD,wBAAkB,KAAK,QAAQ,IAAI,sBAAsB,wBAAwB,CAAC,CAAC,KAAK;AAAA,IAC1F;AAAA,EACF;AACA,QAAM,QAAQ,OAAO,OAAO,IAAI;AAChC,WAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK,GAAG;AACxC,UAAM,OAAO,MAAMA,EAAC;AACpB,QAAI,KAAK,UAAU,GAAG;AACpB,qBAAe,MAAM,IAAI;AAAA,IAC3B;AAAA,EACF;AACA,SAAO;AACT;;;AClLO,IAAM,sBAAsB,CAAC;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AAlBN;AAmBE,MAAI,eAAe;AACnB,WAAS,QAAQ,GAAG,QAAQ,KAAK,QAAQ,SAAS,GAAG;AACnD,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK,KAAK;AACd,UAAM,wBAAwB,SAAS;AACvC,UAAM,sBAAsB,OAAO;AACnC,UAAM,iCAAgC,gBAAK,YAAY,EAAE,qBAAnB,mBAAsC,2BAAtC,mBAA+D,oBAAoB,SAAS;AAIlI,QAAI,UAAU,KAAK,SAAS,GAAG;AAG7B,UAAI,iCAAiC,MAAM;AACzC,cAAM,WAAW;AAAA,UACf,MAAM;AAAA,UACN;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,aAAa;AAAA,QACf;AACA,qEAAsB,UAAU,cAAc;AAC9C,yBAAiB,UAAU,MAAM,YAAY,YAAY;AAAA,MAC3D,OAAO;AACL,cAAM,8BAA8B,KAAK,6BAA6B;AAItE,YAAI,4BAA4B,SAAS,WAAW,4BAA4B,iBAAiB;AAC/F,uEAAsB,UAAU,cAAc;AAC9C,uEAAsB,UAAU,cAAc;AAC9C,4CAAkC;AAAA,YAChC;AAAA,YACA;AAAA,YACA;AAAA,YACA,MAAM;AAAA,YACN,aAAa;AAAA,cACX;AAAA,cACA,iBAAiB;AAAA,YACnB;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AAGL,6DAAkB,+BAA+B,IAAI;AAAA,QACvD;AAAA,MACF;AAAA,IACF,WAMS,iCAAiC,MAAM;AAC9C,YAAM,SAAS,sBAAsB,KAAK,MAAM,GAAG,QAAQ,CAAC,CAAC;AAC7D,YAAM,yBAAyB;AAAA,QAC7B,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR;AAAA,QACA,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,UAAU,CAAC;AAAA,QACX,kBAAkB,CAAC;AAAA,QACnB,kBAAkB;AAAA,MACpB;AACA,mEAAsB,UAAU,cAAc;AAC9C,uBAAiB,4BAA4B,wBAAwB,+BAA+B,wBAAwB,GAAG,MAAM,YAAY,YAAY;AAC7J,qBAAe;AAAA,IACjB,OAGK;AACH,YAAM,mBAAmB,KAAK,6BAA6B;AAG3D,UAAI,iBAAiB,SAAS,SAAS;AACrC,cAAM,YAAY;AAAA,UAChB,MAAM;AAAA,UACN,IAAI,iBAAiB;AAAA,UACrB,QAAQ,iBAAiB;AAAA,UACzB,OAAO,iBAAiB;AAAA,UACxB,iBAAiB;AAAA,UACjB,aAAa;AAAA,UACb,eAAe;AAAA,UACf,UAAU,CAAC;AAAA,UACX,kBAAkB,CAAC;AAAA,UACnB,kBAAkB;AAAA,QACpB;AACA,aAAK,6BAA6B,IAAI,4BAA4B,WAAW,+BAA+B,wBAAwB;AAAA,MACtI;AACA,qBAAe,iBAAiB;AAAA,IAClC;AAAA,EACF;AACF;;;AC9GO,IAAM,gBAAgB,YAAU;AACrC,QAAM,aAAa,CAAC;AACpB,QAAM,OAAO;AAAA,IACX,CAAC,kBAAkB,GAAG,eAAe;AAAA,EACvC;AACA,QAAM,aAAa,CAAC;AACpB,WAASC,KAAI,GAAGA,KAAI,OAAO,MAAM,QAAQA,MAAK,GAAG;AAC/C,UAAM,OAAO,OAAO,MAAMA,EAAC;AAC3B,eAAW,KAAK,KAAK,EAAE;AACvB,wBAAoB;AAAA,MAClB;AAAA,MACA,cAAc,OAAO;AAAA,MACrB,IAAI,KAAK;AAAA,MACT,MAAM,KAAK;AAAA,MACX,iBAAiB,OAAO;AAAA,MACxB;AAAA,MACA,0BAA0B,OAAO;AAAA,MACjC,+BAA+B,OAAO;AAAA,IACxC,CAAC;AAAA,EACH;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,cAAc,OAAO;AAAA,IACrB;AAAA,EACF;AACF;;;AC9BA,IAAM,OAAN,MAAW;AAAA,EACT,YAAY,MAAM,MAAM;AACtB,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AAAA,EACA,YAAY,MAAM;AAChB,QAAI,CAAC,KAAK,SAAS,CAAC,KAAK,MAAM;AAC7B;AAAA,IACF;AACA,UAAM,OAAO,KAAK;AAClB,SAAK,OAAO,KAAK;AACjB,SAAK,KAAK,OAAO;AAAA,EACnB;AACF;AAGA,IAAM,OAAN,MAAM,MAAK;AAAA,EACT,YAAY,OAAO,MAAM;AACvB,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AAAA,EACA,OAAO;AACL,UAAM,QAAQ,CAAC;AACf,SAAK,QAAQ,UAAQ;AACnB,YAAM,KAAK,KAAK,IAAI;AAAA,IACtB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,IAAI;AACV,QAAI,UAAU,KAAK;AACnB,WAAO,YAAY,MAAM;AACvB,SAAG,OAAO;AACV,gBAAU,QAAQ;AAAA,IACpB;AAAA,EACF;AAAA,EACA,OAAO,KAAK,OAAO;AACjB,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO,IAAI,MAAK,MAAM,IAAI;AAAA,IAC5B;AACA,QAAI,QAAQ;AACZ,UAAM,QAAQ,IAAI,KAAK,MAAM,KAAK,GAAG,IAAI;AACzC,QAAI,UAAU;AACd,WAAO,QAAQ,IAAI,MAAM,QAAQ;AAC/B,eAAS;AACT,YAAM,OAAO,IAAI,KAAK,MAAM,KAAK,GAAG,IAAI;AACxC,cAAQ,OAAO;AACf,gBAAU;AAAA,IACZ;AACA,WAAO,IAAI,MAAK,OAAO,OAAO;AAAA,EAChC;AACF;AACO,IAAM,cAAc,YAAU;AACnC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,4BAA4B,oBAAI,IAAI;AAC1C,QAAM,YAAY,UAAQ;AACxB,UAAM,kBAAkB,CAAC,CAAC,gBAAgB,CAAC,0BAA0B,KAAK,UAAU;AACpF,QAAI;AACJ,QAAI,iBAAiB;AACnB,eAASC,KAAI,GAAGA,KAAI,KAAK,SAAS,QAAQA,MAAK,GAAG;AAChD,cAAM,YAAY,QAAQ,KAAK,SAASA,EAAC,CAAC;AAC1C,YAAI,UAAU,SAAS,SAAS;AAC9B,oBAAU,SAAS;AAAA,QACrB;AAAA,MACF;AACA,qBAAe,YAAY,KAAK,SAAS,IAAI,aAAW,QAAQ,OAAO,CAAC,CAAC;AAAA,IAC3E,WAAW,8BAA8B;AACvC,YAAM,iBAAiB,CAAC;AACxB,YAAM,iBAAiB,CAAC;AACxB,eAASA,KAAI,GAAGA,KAAI,KAAK,SAAS,QAAQA,MAAK,GAAG;AAChD,cAAM,UAAU,KAAK,SAASA,EAAC;AAC/B,cAAM,YAAY,QAAQ,OAAO;AACjC,YAAI,UAAU,SAAS,SAAS;AAC9B,oBAAU,SAAS;AACnB,yBAAe,KAAK,OAAO;AAAA,QAC7B,WAAW,UAAU,SAAS,QAAQ;AACpC,yBAAe,KAAK,OAAO;AAAA,QAC7B;AAAA,MACF;AACA,qBAAe,CAAC,GAAG,gBAAgB,GAAG,cAAc;AAAA,IACtD,OAAO;AACL,eAASA,KAAI,GAAGA,KAAI,KAAK,SAAS,QAAQA,MAAK,GAAG;AAChD,cAAM,YAAY,QAAQ,KAAK,SAASA,EAAC,CAAC;AAC1C,YAAI,UAAU,SAAS,SAAS;AAC9B,oBAAU,SAAS;AAAA,QACrB;AAAA,MACF;AACA,qBAAe,CAAC,GAAG,KAAK,QAAQ;AAAA,IAClC;AACA,QAAI,KAAK,YAAY,MAAM;AACzB,mBAAa,KAAK,KAAK,QAAQ;AAAA,IACjC;AACA,8BAA0B,IAAI,KAAK,IAAI,YAAY;AAAA,EACrD;AACA,YAAU,QAAQ,kBAAkB,CAAC;AACrC,QAAM,WAAW,KAAK,KAAK,0BAA0B,IAAI,kBAAkB,CAAC;AAC5E,WAAS,QAAQ,UAAQ;AACvB,UAAM,WAAW,0BAA0B,IAAI,KAAK,IAAI;AACxD,QAAI,qCAAU,QAAQ;AACpB,WAAK,YAAY,KAAK,KAAK,QAAQ,CAAC;AAAA,IACtC;AAAA,EACF,CAAC;AACD,SAAO,SAAS,KAAK;AACvB;;;ACjHA;;;ACEA,IAAM,2BAA2B,CAAC;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,qBAAmB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI,KAAK,SAAS,WAAW,KAAK,YAAY,MAAM;AAClD,uBAAmB;AAAA,MACjB,MAAM,KAAK,KAAK,QAAQ;AAAA,MACxB;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACA,QAAM,aAAa,KAAK,KAAK,MAAM;AACnC,+DAAsB,UAAU,WAAW,IAAI;AAC/C,QAAM,oBAAoB,WAAW,OAAO,sBAAsB,WAAW,SAAS,WAAW;AACjG,MAAI,mBAAmB;AACrB,QAAI,WAAW,iBAAiB;AAC9B,+BAAyB;AAAA,QACvB,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,WAAK,WAAW,EAAE,IAAI;AAAA,QACpB,MAAM;AAAA,QACN,IAAI,WAAW;AAAA,QACf,OAAO,WAAW;AAAA,QAClB,QAAQ,WAAW;AAAA,QACnB,aAAa,WAAW;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAM,yCAAyC,CAAC;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,+DAAsB,UAAU,KAAK,QAAQ;AAC7C,+DAAsB,UAAU,KAAK,QAAQ;AAC7C,oCAAkC;AAAA,IAChC,cAAc;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa;AAAA,MACX,IAAI,sBAAsB,kBAAkB;AAAA,QAC1C,IAAI,KAAK;AAAA,QACT;AAAA,MACF,CAAC,CAAC;AAAA,MACF,iBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AACH;AASO,IAAM,wBAAwB,CAAC;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,OAAO,KAAK,EAAE;AACpB,MAAI,KAAK,SAAS,WAAW,KAAK,SAAS,SAAS,GAAG;AACrD,2CAAuC;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,6BAAyB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ADvFO,IAAM,gBAAgB,YAAU;AACrC,QAAM,OAAO,SAAS,CAAC,GAAG,OAAO,YAAY;AAC7C,QAAM,aAAa,SAAS,CAAC,GAAG,OAAO,iBAAiB;AACxD,QAAM,uBAAuB,2BAA2B;AACxD,WAASC,KAAI,GAAGA,KAAI,OAAO,MAAM,SAAS,QAAQA,MAAK,GAAG;AACxD,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,OAAO,MAAM,SAASA,EAAC;AAC3B,wBAAoB;AAAA,MAClB,cAAc,OAAO;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB,OAAO;AAAA,MACxB,0BAA0B,OAAO;AAAA,MACjC,+BAA+B,OAAO;AAAA,IACxC,CAAC;AAAA,EACH;AACA,WAASA,KAAI,GAAGA,KAAI,OAAO,MAAM,QAAQ,QAAQA,MAAK,GAAG;AACvD,UAAM,SAAS,OAAO,MAAM,QAAQA,EAAC;AACrC,0BAAsB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI;AAAA,IACN,CAAC;AAAA,EACH;AACA,WAASA,KAAI,GAAGA,KAAI,OAAO,MAAM,SAAS,QAAQA,MAAK,GAAG;AACxD,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,OAAO,MAAM,SAASA,EAAC;AAC3B,UAAM,qBAAqB,kBAAkB;AAAA,MAC3C;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,gBAAgB,YAAY,oBAAoB,IAAI;AAC1D,QAAI,CAAC,eAAe;AAClB,4BAAsB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD,0BAAoB;AAAA,QAClB,cAAc,OAAO;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,iBAAiB,OAAO;AAAA,QACxB,0BAA0B,OAAO;AAAA,QACjC,+BAA+B,OAAO;AAAA,MACxC,CAAC;AAAA,IACH,OAAO;AACL,mEAAsB,UAAU,KAAK,EAAE,EAAE,QAAQ;AAAA,IACnD;AAAA,EACF;AAGA,QAAM,aAAa,uBAAuB,MAAM,oBAAoB,IAAI;AACxE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,cAAc,OAAO;AAAA,IACrB;AAAA,IACA;AAAA,EACF;AACF;;;AjBjEA,IAAAC,uBAA4B;AAX5B,IAAMC,aAAY,CAAC,qBAAqB;AAYjC,IAAM,+BAA+B,CAAC,eAAe,UAAU;AACpE,QAAM,0BAAgC,oBAAY,MAAM;AACtD,kBAAc,QAAQ,wBAAwB,WAAW,oBAAoB,MAAM,WAAW,MAAM,OAAO,MAAM,KAAK;AAAA,EACxH,GAAG,CAAC,eAAe,MAAM,QAAQ,CAAC;AAClC,QAAM,oBAA0B,oBAAY,MAAM;AAChD,UAAM,qBAAqB,MAAM;AACjC,QAAI;AACJ,QAAI,OAAO,uBAAuB,YAAY;AAC5C,YAAM,SAAS;AAAA,QACb,cAAc;AAAA,QACd,QAAQ,CAAC;AAAA,MACX;AACA,uBAAiB,mBAAmB,MAAM;AAAA,IAC5C,OAAO;AACL,uBAAiB;AAAA,IACnB;AACA,UAAM,OAAO,kBAAkB,CAAC,GAC9B;AAAA,MACE;AAAA,IACF,IAAI,MACJ,2BAA2B,8BAA8B,MAAMA,UAAS;AAC1E,UAAM,mBAAmB,SAAS,CAAC,GAAG,iCAAiC;AAAA,MACrE,YAAY,gBAAuB,qBAAAC,KAAK,0BAA0B,SAAS,CAAC,GAAG,QAAQ;AAAA,QACrF;AAAA,MACF,CAAC,CAAC;AAAA,MACF,YAAY,cAAc,QAAQ,cAAc,4BAA4B;AAAA,IAC9E,CAAC;AACD,WAAO,SAAS,CAAC,GAAG,kBAAkB,0BAA0B,iDAAiD;AAAA,EACnH,GAAG,CAAC,eAAe,MAAM,cAAc,CAAC;AACxC,QAAM,uBAA6B,oBAAY,kBAAgB;AAC7D,UAAM,sBAAsB,kDAAkD;AAC9E,UAAM,2BAA2B,MAAM;AACvC,UAAM,qBAAqB,aAAa,OAAO,mBAAmB;AAClE,QAAI,0BAA0B;AAC5B,YAAM,oBAAoB,kBAAkB;AAC5C,UAAI,oBAAoB;AACtB,0BAAkB,QAAQ,mBAAmB;AAC7C,0BAAkB,OAAO,mBAAmB;AAAA,MAC9C;AACA,mBAAa,OAAO,mBAAmB,IAAI;AAC3C,UAAI,sBAAsB,MAAM;AAC9B,cAAM,QAAQ,aAAa,cAAc,CAAC,MAAM,gCAAgC,IAAI;AACpF,qBAAa,gBAAgB,CAAC,GAAG,aAAa,cAAc,MAAM,GAAG,KAAK,GAAG,qBAAqB,GAAG,aAAa,cAAc,MAAM,KAAK,CAAC;AAAA,MAC9I;AAAA,IACF,WAAW,CAAC,4BAA4B,oBAAoB;AAC1D,aAAO,aAAa,OAAO,mBAAmB;AAC9C,mBAAa,gBAAgB,aAAa,cAAc,OAAO,WAAS,UAAU,mBAAmB;AAAA,IACvG;AACA,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,UAAU,iBAAiB,CAAC;AACtC,QAAM,2BAAiC,oBAAY,YAAU;AAC3D,QAAI,CAAC,MAAM,iBAAiB;AAC1B,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACpD;AACA,UAAM,wBAAwB,YAAU;AAAA,MACtC,IAAI;AAAA,MACJ,MAAM,MAAM,gBAAgB,OAAO,uBAAuB,KAAK,CAAC,EAAE,IAAI,UAAQ;AAAA,QAC5E;AAAA,QACA,OAAO;AAAA,MACT,EAAE;AAAA,IACJ;AACA,UAAM,kBAAkB,CAAC,SAAS,UAAU,SAAS;AACnD,YAAM,IAAI,MAAM,CAAC,mEAAmE,qBAAqB,OAAO,SAAS,QAAQ,mBAAmB,SAAS,KAAK,UAAU,KAAK,IAAI,UAAQ,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,IAAI,CAAC;AAAA,IACxN;AACA,QAAI,OAAO,QAAQ,SAAS,QAAQ;AAClC,aAAO,cAAc;AAAA,QACnB,cAAc,OAAO;AAAA,QACrB,OAAO,OAAO,QAAQ,KAAK,IAAI,qBAAqB;AAAA,QACpD,+BAA+B,MAAM;AAAA,QACrC,0BAA0B,MAAM;AAAA,QAChC,cAAc;AAAA,QACd;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,cAAc;AAAA,MACnB,OAAO;AAAA,QACL,UAAU,OAAO,QAAQ,QAAQ,OAAO,IAAI,qBAAqB;AAAA,QACjE,UAAU,OAAO,QAAQ,QAAQ,OAAO,IAAI,qBAAqB;AAAA,QACjE,SAAS,OAAO,QAAQ,QAAQ;AAAA,MAClC;AAAA,MACA,cAAc,OAAO;AAAA,MACrB,mBAAmB,OAAO;AAAA,MAC1B,+BAA+B,MAAM;AAAA,MACrC,0BAA0B,MAAM;AAAA,MAChC,cAAc;AAAA,IAChB,CAAC;AAAA,EACH,GAAG,CAAC,MAAM,iBAAiB,MAAM,+BAA+B,MAAM,wBAAwB,CAAC;AAC/F,QAAM,aAAmB,oBAAY,YAAU;AAC7C,UAAM,UAAU,oBAAoB,aAAa;AACjD,WAAO,0BAA0B;AAAA,MAC/B;AAAA,MACA,sBAAsB,OAAO;AAAA,MAC7B,0BAA0B,MAAM;AAAA,MAChC,aAAa,OAAO;AAAA,MACpB,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,GAAG,CAAC,eAAe,MAAM,wBAAwB,CAAC;AAClD,QAAM,WAAiB,oBAAY,YAAU;AAC3C,UAAM,UAAU,oBAAoB,aAAa;AACjD,WAAO,YAAY;AAAA,MACjB;AAAA,MACA,aAAa,OAAO;AAAA,MACpB,wBAAwB,MAAM;AAAA,MAC9B,8BAA8B;AAAA,IAChC,CAAC;AAAA,EACH,GAAG,CAAC,eAAe,MAAM,sBAAsB,CAAC;AAChD,+BAA6B,eAAe,kBAAkB,oBAAoB;AAClF,mCAAiC,eAAe,oBAAoB,mBAAmB,wBAAwB;AAC/G,mCAAiC,eAAe,oBAAoB,aAAa,UAAU;AAC3F,mCAAiC,eAAe,oBAAoB,WAAW,QAAQ;AACvF,mCAAiC,eAAe,oBAAoB,6BAA6B,oBAAoB;AAKrH,iBAAe,MAAM;AACnB,4BAAwB;AAAA,EAC1B,CAAC;AAKD,QAAM,gBAAsB,eAAO,IAAI;AACvC,EAAM,kBAAU,MAAM;AACpB,QAAI,CAAC,cAAc,SAAS;AAC1B,8BAAwB;AAAA,IAC1B,OAAO;AACL,oBAAc,UAAU;AAAA,IAC1B;AAAA,EACF,GAAG,CAAC,uBAAuB,CAAC;AAC9B;;;AmBhJA;AACA,IAAAC,UAAuB;AAGhB,IAAM,gCAAgC,CAAC,OAAO,OAAO,WAAW;AAJvE;AAKE,SAAO,QAAQ,OAAO,gBAAgB;AAAA,IACpC,mCAAmC;AAAA,EACrC;AACA,MAAI;AACJ,MAAI,MAAM,eAAe;AACvB,YAAQ,MAAM;AAAA,EAChB,YAAW,WAAM,iBAAN,mBAAoB,eAAe;AAC5C,YAAQ,MAAM,aAAa;AAAA,EAC7B,OAAO;AACL,YAAQ,CAAC;AAAA,EACX;AACA,SAAO,SAAS,CAAC,GAAG,OAAO;AAAA,IACzB,eAAe;AAAA,EACjB,CAAC;AACH;AACO,IAAM,uBAAuB,CAAC,QAAQ,UAAU;AApBvD;AAqBE,QAAM,gBAAgB,gBAAgB,QAAQ,yBAAyB;AAKvE,QAAM,sBAA4B,oBAAY,CAAC,cAAc,WAAW;AACtE,UAAM,uBAAuB,2CAA2C,MAAM;AAC9E,QAAI,CAAC,OAAO,YAAY,qBAAqB,KAAK,WAAW,KAAK,qBAAqB,MAAM,WAAW,GAAG;AACzG,aAAO;AAAA,IACT;AACA,UAAM,iBAAiB,qCAAqC,MAAM;AAClE,UAAM,oBAAoB,8BAA8B,MAAM;AAC9D,UAAM,kBAAkB,4BAA4B,MAAM;AAC1D,UAAM,cAAc,OAAO,QAAQ,mBAAmB,QAAQ;AAG9D,UAAM,aAAa,KAAK,IAAI,OAAO,QAAQ,mBAAmB,QAAQ,UAAU;AAChF,UAAM,cAAc,eAAe,OAAO,QAAQ,EAAE;AACpD,UAAM,aAAa,gBAAgB,OAAO,QAAQ;AAClD,UAAM,yBAAyB,gBAAgB,qBAAqB,KAAK,MAAM;AAC/E,UAAM,0BAA0B,oBAAoB,gBAAgB,gBAAgB,SAAS,qBAAqB,MAAM,MAAM;AAC9H,UAAM,gBAAgB,aAAa;AACnC,QAAI,iBAAiB,cAAc,2BAA2B,YAAY;AACxE,YAAM,OAAO,iBAAiB,cAAc;AAC5C,aAAO,SAAS,CAAC,GAAG,cAAc;AAAA,QAChC;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,aAAa,aAAa,wBAAwB;AACpD,YAAM,OAAO,aAAa;AAC1B,aAAO,SAAS,CAAC,GAAG,cAAc;AAAA,QAChC;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,qBAA2B,oBAAY,CAAC,iBAAiB,WAAW;AACxE,QAAI,MAAM,sBAAsB;AAC9B,aAAO;AAAA,IACT;AACA,QAAI,OAAO,aAAa,OAAO;AAC7B,aAAO;AAAA,IACT;AACA,WAAO,CAAC,GAAG,iBAAiB,uBAAuB;AAAA,EACrD,GAAG,CAAC,MAAM,oBAAoB,CAAC;AAC/B,QAAM,wBAA8B,oBAAY,CAAC,cAAc;AAAA,IAC7D;AAAA,EACF,MAAM;AACJ,UAAM,uBAAuB,2CAA2C,MAAM;AAC9E,QAAI,qBAAqB,KAAK,WAAW,KAAK,qBAAqB,MAAM,WAAW,GAAG;AACrF,aAAO;AAAA,IACT;AACA,QAAI,qBAAqB,KAAK,SAAS,KAAK,cAAc,qBAAqB,KAAK,QAAQ;AAC1F,aAAO;AAAA,IACT;AACA,QAAI,qBAAqB,MAAM,SAAS,GAAG;AACzC,YAAM,iBAAiB,qCAAqC,MAAM;AAClE,YAAM,8BAA8B,eAAe,SAAS,qBAAqB,MAAM;AACvF,aAAO,eAAe,8BAA8B,QAAQ;AAAA,IAC9D;AACA,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,2BAAiC,oBAAY,CAAC,WAAW,YAAY;AAnF7E,QAAAC;AAoFI,UAAM,wBAAwB,0BAA0B,OAAO,QAAQ,KAAK;AAC5E,UAAM;AAAA;AAAA,MAEN,CAAC,QAAQ;AAAA,MAET,MAAM,iBAAiB;AAAA,QAEvBA,MAAA,MAAM,iBAAN,gBAAAA,IAAoB,kBAAiB;AAAA,OAEpC,sBAAsB,QAAQ,CAAC,GAAG,SAAS,MAAM,sBAAsB,SAAS,CAAC,GAAG,SAAS;AAAA;AAC9F,QAAI,CAAC,2BAA2B;AAC9B,aAAO;AAAA,IACT;AACA,WAAO,SAAS,CAAC,GAAG,WAAW;AAAA,MAC7B,eAAe;AAAA,IACjB,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,MAAM,gBAAe,WAAM,iBAAN,mBAAoB,aAAa,CAAC;AACnE,QAAM,4BAAkC,oBAAY,CAAC,QAAQ,YAAY;AACvE,UAAM,mBAAmB,QAAQ,eAAe;AAChD,QAAI,oBAAoB,MAAM;AAC5B,eAAS,QAAQ,gBAAgB;AAAA,IACnC;AACA,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,CAAC;AACX,+BAA6B,QAAQ,mBAAmB,mBAAmB;AAC3E,+BAA6B,QAAQ,cAAc,kBAAkB;AACrE,+BAA6B,QAAQ,kBAAkB,qBAAqB;AAC5E,+BAA6B,QAAQ,eAAe,wBAAwB;AAC5E,+BAA6B,QAAQ,gBAAgB,yBAAyB;AAC9E,SAAO,QAAQ,qBAAqB;AAAA,IAClC,SAAS;AAAA,IACT,WAAW,MAAM;AAAA,IACjB,cAAc,MAAM;AAAA,IACpB,eAAe;AAAA,IACf,aAAa;AAAA,EACf,CAAC;AACD,QAAM,YAAkB,oBAAY,CAAC,OAAO,SAAS;AACnD,QAAI,OAAO,QAAQ,eAAe,KAAK,MAAM,MAAM;AACjD;AAAA,IACF;AACA,UAAM,YAAY,SAAS,yBAAyB,QAAQ,yBAAyB,OAAO,yBAAyB;AACrH,UAAM,mBAAmB;AAAA,MACvB,CAAC,IAAI,GAAG,CAAC,GAAI,cAAc,IAAI,KAAK,CAAC,GAAI,KAAK;AAAA,MAC9C,CAAC,SAAS,IAAI,cAAc,SAAS,KAAK,CAAC,GAAG,OAAO,YAAU,WAAW,KAAK;AAAA,IACjF;AACA,WAAO,QAAQ,iBAAiB,gBAAgB;AAAA,EAClD,GAAG,CAAC,QAAQ,aAAa,CAAC;AAC1B,QAAM,cAAoB,oBAAY,WAAS;AAC7C,WAAO,QAAQ,iBAAiB;AAAA,MAC9B,OAAO,cAAc,QAAQ,CAAC,GAAG,OAAO,YAAU,WAAW,KAAK;AAAA,MAClE,QAAQ,cAAc,SAAS,CAAC,GAAG,OAAO,YAAU,WAAW,KAAK;AAAA,IACtE,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,cAAc,MAAM,cAAc,KAAK,CAAC;AACpD,QAAM,mBAAyB,oBAAY,MAAM;AAC/C,WAAO,0BAA0B,OAAO,QAAQ,KAAK;AAAA,EACvD,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,mBAAyB,oBAAY,sBAAoB;AAC7D,aAAS,QAAQ,gBAAgB;AACjC,WAAO,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,iBAAuB,oBAAY,WAAS;AAChD,UAAM,oBAAoB,cAAc,QAAQ,CAAC;AACjD,QAAI,kBAAkB,SAAS,KAAK,GAAG;AACrC,aAAO,yBAAyB;AAAA,IAClC;AACA,UAAM,qBAAqB,cAAc,SAAS,CAAC;AACnD,QAAI,mBAAmB,SAAS,KAAK,GAAG;AACtC,aAAO,yBAAyB;AAAA,IAClC;AACA,WAAO;AAAA,EACT,GAAG,CAAC,cAAc,MAAM,cAAc,KAAK,CAAC;AAC5C,QAAM,mBAAmB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,mBAAiB,QAAQ,kBAAkB,QAAQ;AACnD,QAAM,0BAA0B,YAAU;AACxC,QAAI,CAAC,OAAO,QAAQ,OAAO,cAAc,mCAAmC;AAC1E;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM,QAAQ,cAAc,WAAW,IAAI;AAC3C,UAAM,qBAAqB,yBAAyB,MAAM;AAmB1D,UAAM,eAAe,mBAAmB,cAAc,KAAK;AAC3D,UAAM,uCAAuC,CAAC,GAAG,OAAO,QAAQ,OAAO,cAAc,iCAAiC;AAGtH,QAAIC,KAAI,qCAAqC,UAAU,mBAAiB,kBAAkB,OAAO,KAAK;AAEtG,QAAI,IAAIA,KAAI;AAIZ,UAAM,OAAO,qCAAqC,UAAU,mBAAiB,kBAAkB,YAAY;AAC3G,WAAO,QAAQ,IAAIA,KAAI,OAAOA,KAAI,MAAM;AAEtC,aAAO,OAAO,QAAQ,eAAe,qCAAqC,CAAC,CAAC,GAAG;AAC7E,aAAK;AAAA,MACP;AACA,YAAM,OAAO,qCAAqCA,EAAC;AACnD,2CAAqCA,EAAC,IAAI,qCAAqC,CAAC;AAChF,2CAAqC,CAAC,IAAI;AAC1C,MAAAA,KAAI;AACJ,UAAIA,KAAI;AAAA,IACV;AACA,WAAO,QAAQ,OAAO,cAAc,oCAAoC;AAAA,EAC1E;AACA,yBAAuB,QAAQ,qBAAqB,uBAAuB;AAC3E,EAAM,kBAAU,MAAM;AACpB,QAAI,MAAM,eAAe;AACvB,aAAO,QAAQ,iBAAiB,MAAM,aAAa;AAAA,IACrD;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,aAAa,CAAC;AAClC;AACA,SAAS,SAAS,QAAQ,OAAO;AAC/B,SAAO,QAAQ,SAAS,WAAS,SAAS,CAAC,GAAG,OAAO;AAAA,IACnD,eAAe;AAAA,EACjB,CAAC,CAAC;AACJ;;;ACnOA;AACA,IAAAC,UAAuB;AAEhB,IAAM,oCAAoC,CAAC,QAAQ,UAAU;AAClE,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,MAAI;AACJ,MAAI,OAAO,QAAQ,MAAM,SAAS;AAChC,oBAAgB,0BAA0B,OAAO,QAAQ,KAAK;AAAA,EAChE,OAAO;AACL,oBAAgB;AAAA,EAClB;AACA,QAAM,uBAA6B,eAAO,CAAC,CAAC;AAC5C,QAAM,uBAA6B,oBAAY,kBAAgB;AAC7D,mBAAe,aAAa;AAC5B,QAAI,aAAa,cAAc,WAAW,KAAK,sBAAsB;AACnE,aAAO;AAAA,IACT;AAOA,UAAM,aAAa,OAAO,QAAQ;AAClC,WAAO,QAAQ,QAAQ,SAAS,CAAC,GAAG,YAAY;AAAA,MAC9C,SAAS;AAAA,IACX,CAAC;AACD,UAAM,iBAAiB,2CAA2C,MAAM;AACxE,WAAO,QAAQ,QAAQ;AAGvB,UAAM,oBAAoB,eAAe,KAAK,IAAI,OAAK,EAAE,KAAK;AAC9D,UAAM,qBAAqB,eAAe,MAAM,IAAI,OAAK,EAAE,KAAK;AAChE,QAAI;AACJ,UAAM,mBAAmB,CAAC,GAAG,mBAAmB,GAAG,kBAAkB;AACrE,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,OAAO,QAAQ,OAAO;AAC1B,QAAI,mCAAmC;AACrC,yBAAmB,IAAI,MAAM,aAAa,cAAc,MAAM,EAAE,KAAK,IAAI;AACzE,YAAM,uCAAuC,CAAC,GAAG,gBAAgB;AAGjE,YAAM,kBAAkB,CAAC,GAAG,aAAa,aAAa;AAItD,2BAAqB,QAAQ,QAAQ,WAAS;AAC5C,YAAI,CAAC,iBAAiB,SAAS,KAAK,KAAK,aAAa,OAAO,KAAK,GAAG;AAEnE,gBAAM,QAAQ,kCAAkC,QAAQ,KAAK;AAC7D,2BAAiB,KAAK,IAAI;AAC1B,+CAAqC,KAAK,IAAI;AAE9C,0BAAgB,OAAO,gBAAgB,QAAQ,KAAK,GAAG,CAAC;AAAA,QAC1D;AAAA,MACF,CAAC;AAGD,uBAAiB,QAAQ,WAAS;AAChC,YAAI,QAAQ,kCAAkC,QAAQ,KAAK;AAK3D,YAAI,UAAU,MAAM,SAAS,qCAAqC,QAAQ;AACxE,kBAAQ,aAAa,cAAc,QAAQ,KAAK;AAAA,QAClD;AAIA,YAAI,qCAAqC,KAAK,MAAM,MAAM;AACxD,kBAAQ;AACR,iBAAO,qCAAqC,KAAK,MAAM,MAAM;AAC3D,qBAAS;AAAA,UACX;AAAA,QACF;AACA,yBAAiB,KAAK,IAAI;AAC1B,6CAAqC,KAAK,IAAI;AAE9C,wBAAgB,OAAO,gBAAgB,QAAQ,KAAK,GAAG,CAAC;AAAA,MAC1D,CAAC;AAID,UAAIC,KAAI;AACR,sBAAgB,QAAQ,WAAS;AAC/B,eAAO,qCAAqCA,EAAC,MAAM,MAAM;AACvD,UAAAA,MAAK;AAAA,QACP;AACA,6CAAqCA,EAAC,IAAI;AAC1C,yBAAiBA,EAAC,IAAI;AAAA,MACxB,CAAC;AACD,aAAO,QAAQ,OAAO,cAAc,oCAAoC;AAAA,IAC1E,OAAO;AACL,yBAAmB,CAAC,GAAG,aAAa,aAAa;AACjD,aAAO,QAAQ,OAAO,cAAc,oCAAoC,CAAC,GAAG,aAAa,aAAa;AAAA,IACxG;AACA,yBAAqB,UAAU;AAC/B,UAAM,gBAAgB,iBAAiB,OAAO,WAAS;AACrD,aAAO,CAAC,kBAAkB,SAAS,KAAK,KAAK,CAAC,mBAAmB,SAAS,KAAK;AAAA,IACjF,CAAC;AACD,WAAO,SAAS,CAAC,GAAG,cAAc;AAAA,MAChC,eAAe,CAAC,GAAG,mBAAmB,GAAG,eAAe,GAAG,kBAAkB;AAAA,IAC/E,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,sBAAsB,aAAa,CAAC;AAChD,+BAA6B,QAAQ,kBAAkB,oBAAoB;AAC3E,QAAM,iBAAuB,oBAAY,CAAC,cAAc,UAAU,OAAO,QAAQ,eAAe,KAAK,GAAG,CAAC,MAAM,CAAC;AAChH,+BAA6B,QAAQ,kBAAkB,cAAc;AACvE;;;AC/GA;AACA,IAAAC,UAAuB;;;ACDvB;AACA,IAAAC,UAAuB;AAIvB,IAAAC,uBAA4B;AACrB,IAAM,iCAAiC;AACvC,IAAM,mCAAmC,SAAS,CAAC,GAAG,qBAAqB;AAAA,EAChF,MAAM;AAAA,EACN,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA;AAAA,EAEX,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa,CAAC,OAAO,KAAK,QAAQ,WAAW;AAC3C,UAAM,QAAQ,OAAO,QAAQ,SAAS,GAAG;AACzC,UAAM,iBAAiB,sCAAsC,OAAO,QAAQ,KAAK;AACjF,WAAO,eAAe,SAAS,KAAK;AAAA,EACtC;AAAA,EACA,YAAY,gBAAuB,qBAAAC,KAAK,2BAA2B,SAAS,CAAC,GAAG,MAAM,CAAC;AAAA,EACvF,cAAc,MAAM;AACtB,CAAC;;;ADnBM,IAAM,8BAA8B,CAAC,OAAO,UAAU;AAT7D;AAUE,SAAO,SAAS,CAAC,GAAG,OAAO;AAAA,IACzB,aAAa;AAAA,MACX,aAAa,CAAC;AAAA,MACd,gBAAgB,MAAM,+BAA6B,iBAAM,iBAAN,mBAAoB,gBAApB,mBAAiC,mBAAkB,CAAC;AAAA,IACzG;AAAA,EACF,CAAC;AACH;AACA,SAAS,sBAAsB,QAAQ,uBAAuB,sBAAsB,qBAAqB;AACvG,MAAI,OAAO,0BAA0B,YAAY;AAC/C,WAAO,CAAC;AAAA,EACV;AAIA,QAAM,SAAS,uBAAuB,MAAM;AAC5C,QAAM,eAAe,OAAO,OAAO,CAAC,KAAK,OAAO;AAC9C,UAAM,SAAS,OAAO,QAAQ,aAAa,EAAE;AAC7C,QAAI,EAAE,IAAI,sBAAsB,MAAM;AACtC,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,QAAM,cAAc,OAAO,OAAO,CAAC,KAAK,OAAO;AA9BjD;AA+BI,QAAI,aAAa,EAAE,KAAK,MAAM;AAC5B,aAAO;AAAA,IACT;AACA,UAAM,SAAS,OAAO,QAAQ,aAAa,EAAE;AAC7C,UAAM,SAAS,qBAAqB,MAAM;AAC1C,UAAM,aAAa,WAAW;AAC9B,QAAI,EAAE,IAAI;AAAA,MACR;AAAA,MACA,QAAQ,cAAa,yBAAoB,EAAE,MAAtB,mBAAyB,SAAS;AAAA,IACzD;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AACO,IAAM,qBAAqB,CAAC,QAAQ,UAAU;AACnD,QAAM,iBAAiB,gBAAgB,QAAQ,qCAAqC;AACpF,QAAM,eAAe,gBAAgB,QAAQ,+CAA+C;AAC5F,QAAM,kBAAwB,oBAAY,CAAC,QAAQ,UAAU;AAC3D,QAAI,OAAO,UAAU,kCAAkC,MAAM,yBAAyB,MAAM;AAC1F;AAAA,IACF;AACA,UAAM,UAAU,aAAa,OAAO,EAAE;AACtC,QAAI,CAAqB,uBAAe,OAAO,GAAG;AAChD;AAAA,IACF;AAGA,QAAI,MAAM,WAAW,MAAM,eAAe;AACxC;AAAA,IACF;AACA,WAAO,QAAQ,kBAAkB,OAAO,EAAE;AAAA,EAC5C,GAAG,CAAC,QAAQ,cAAc,MAAM,qBAAqB,CAAC;AACtD,QAAM,oBAA0B,oBAAY,CAAC,QAAQ,UAAU;AAC7D,QAAI,MAAM,yBAAyB,MAAM;AACvC;AAAA,IACF;AACA,QAAI,OAAO,UAAU,kCAAkC,MAAM,QAAQ,KAAK;AACxE,aAAO,QAAQ,kBAAkB,OAAO,EAAE;AAAA,IAC5C;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,qBAAqB,CAAC;AACxC,yBAAuB,QAAQ,aAAa,eAAe;AAC3D,yBAAuB,QAAQ,eAAe,iBAAiB;AAC/D,SAAO,QAAQ,qBAAqB;AAAA,IAClC,SAAS;AAAA,IACT,WAAW,MAAM;AAAA,IACjB,cAAc,MAAM;AAAA,IACpB,eAAe;AAAA,IACf,aAAa;AAAA,EACf,CAAC;AACD,QAAM,oBAA0B,oBAAY,QAAM;AAChD,QAAI,MAAM,yBAAyB,MAAM;AACvC;AAAA,IACF;AACA,UAAM,UAAU,aAAa,EAAE;AAC/B,QAAI,CAAqB,uBAAe,OAAO,GAAG;AAChD;AAAA,IACF;AACA,UAAM,MAAM,OAAO,QAAQ,wBAAwB;AACnD,WAAO,QAAQ,wBAAwB,IAAI,SAAS,EAAE,IAAI,IAAI,OAAO,WAAS,UAAU,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC;AAAA,EAC5G,GAAG,CAAC,QAAQ,cAAc,MAAM,qBAAqB,CAAC;AACtD,QAAM,0BAAgC,oBAAY,MAAM,sCAAsC,OAAO,QAAQ,KAAK,GAAG,CAAC,MAAM,CAAC;AAC7H,QAAM,0BAAgC,oBAAY,SAAO;AACvD,WAAO,QAAQ,SAAS,WAAS;AAC/B,aAAO,SAAS,CAAC,GAAG,OAAO;AAAA,QACzB,aAAa,SAAS,CAAC,GAAG,MAAM,aAAa;AAAA,UAC3C,gBAAgB;AAAA,QAClB,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,WAAO,QAAQ,iBAAiB;AAChC,WAAO,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,yBAA+B,oBAAY,CAAC,IAAI,WAAW;AAC/D,UAAM,cAAc,sCAAsC,OAAO,QAAQ,KAAK;AAC9E,QAAI,CAAC,YAAY,EAAE,KAAK,YAAY,EAAE,EAAE,WAAW,QAAQ;AACzD;AAAA,IACF;AACA,WAAO,QAAQ,SAAS,WAAS;AAC/B,aAAO,SAAS,CAAC,GAAG,OAAO;AAAA,QACzB,aAAa,SAAS,CAAC,GAAG,MAAM,aAAa;AAAA,UAC3C,aAAa,SAAS,CAAC,GAAG,aAAa;AAAA,YACrC,CAAC,EAAE,GAAG,SAAS,CAAC,GAAG,YAAY,EAAE,GAAG;AAAA,cAClC;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,WAAO,QAAQ,iBAAiB;AAChC,WAAO,QAAQ,iCAAiC,WAAW;AAAA,EAC7D,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,2BAAiC,oBAAY,QAAM;AACvD,UAAM,cAAc,sCAAsC,OAAO,QAAQ,KAAK;AAC9E,WAAO,YAAY,EAAE,IAAI,YAAY,EAAE,EAAE,aAAa;AAAA,EACxD,GAAG,CAAC,MAAM,CAAC;AACX,QAAM,sBAAsB;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,wBAAwB;AAAA,IAC5B;AAAA,IACA;AAAA,EACF;AACA,mBAAiB,QAAQ,qBAAqB,QAAQ;AACtD,mBAAiB,QAAQ,uBAAuB,SAAS;AACzD,EAAM,kBAAU,MAAM;AACpB,QAAI,MAAM,2BAA2B;AACnC,YAAM,eAAe,sCAAsC,OAAO,QAAQ,KAAK;AAC/E,UAAI,iBAAiB,MAAM,2BAA2B;AACpD,eAAO,QAAQ,wBAAwB,MAAM,yBAAyB;AAAA,MACxE;AAAA,IACF;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,yBAAyB,CAAC;AAC5C,QAAM,6BAAmC,oBAAY,MAAM;AApJ7D;AAqJI,WAAO,QAAQ,SAAS,WAAS;AAC/B,aAAO,SAAS,CAAC,GAAG,OAAO;AAAA,QACzB,aAAa,SAAS,CAAC,GAAG,MAAM,aAAa,sBAAsB,QAAQ,MAAM,uBAAuB,MAAM,sBAAsB,MAAM,YAAY,WAAW,CAAC;AAAA,MACpK,CAAC;AAAA,IACH,CAAC;AACD,uBAAO,SAAQ,qBAAf;AACA,WAAO,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,QAAQ,MAAM,uBAAuB,MAAM,oBAAoB,CAAC;AACpE,yBAAuB,QAAQ,iBAAiB,0BAA0B;AAC1E,QAAM,oCAA0C,eAAO;AACvD,QAAM,mCAAyC,eAAO;AACtD,QAAM,uBAA6B,oBAAY,MAAM;AAhKvD;AAiKI,QAAI,MAAM,0BAA0B,kCAAkC,WAAW,MAAM,yBAAyB,iCAAiC,SAAS;AACxJ;AAAA,IACF;AACA,WAAO,QAAQ,SAAS,WAAS;AAC/B,aAAO,SAAS,CAAC,GAAG,OAAO;AAAA,QACzB,aAAa,SAAS,CAAC,GAAG,MAAM,aAAa,sBAAsB,QAAQ,MAAM,uBAAuB,MAAM,sBAAsB,MAAM,YAAY,WAAW,CAAC;AAAA,MACpK,CAAC;AAAA,IACH,CAAC;AACD,uBAAO,SAAQ,qBAAf;AACA,sCAAkC,UAAU,MAAM;AAClD,qCAAiC,UAAU,MAAM;AAAA,EACnD,GAAG,CAAC,QAAQ,MAAM,uBAAuB,MAAM,oBAAoB,CAAC;AACpE,QAAM,kBAAwB,oBAAY,CAAC,cAAc,QAAQ;AAC/D,QAAI,CAAC,kBAAkB,eAAe,WAAW,KAAK,CAAC,eAAe,SAAS,IAAI,EAAE,GAAG;AACtF,mBAAa,SAAS;AACtB,aAAO;AAAA,IACT;AACA,yBAAqB;AACrB,UAAM,cAAc,+CAA+C,MAAM;AACzE,iBAAa,SAAS,YAAY,IAAI,EAAE,KAAK;AAC7C,WAAO;AAAA,EACT,GAAG,CAAC,QAAQ,gBAAgB,oBAAoB,CAAC;AACjD,+BAA6B,QAAQ,aAAa,eAAe;AACjE,QAAM,gBAAsB,eAAO,IAAI;AACvC,MAAI,cAAc,SAAS;AACzB,kBAAc,UAAU;AACxB,yBAAqB;AAAA,EACvB;AACF;;;AE7LA;AACA,IAAAC,UAAuB;AAKhB,IAAM,kCAAkC,CAAC,eAAe,UAAU;AACvE,QAAM,kBAAwB,oBAAY,kBAAgB;AACxD,QAAI,MAAM,yBAAyB,MAAM;AAEvC,UAAI,aAAa,OAAO,8BAA8B,GAAG;AACvD,eAAO,aAAa,OAAO,8BAA8B;AACzD,qBAAa,gBAAgB,aAAa,cAAc,OAAO,WAAS,UAAU,8BAA8B;AAAA,MAClH;AACA,aAAO;AAAA,IACT;AAIA,QAAI,aAAa,OAAO,8BAA8B,GAAG;AACvD,aAAO;AAAA,IACT;AAGA,iBAAa,gBAAgB,CAAC,gCAAgC,GAAG,aAAa,aAAa;AAC3F,iBAAa,OAAO,8BAA8B,IAAI,SAAS,CAAC,GAAG,kCAAkC;AAAA,MACnG,YAAY,cAAc,QAAQ,cAAc,mBAAmB;AAAA,IACrE,CAAC;AACD,WAAO;AAAA,EACT,GAAG,CAAC,eAAe,MAAM,qBAAqB,CAAC;AAC/C,QAAM,wBAA8B,oBAAY,CAAC,SAAS,OAAO;AAC/D,QAAI,MAAM,yBAAyB,MAAM;AACvC,aAAO;AAAA,IACT;AACA,UAAM,iBAAiB,sCAAsC,cAAc,QAAQ,KAAK;AACxF,QAAI,CAAC,eAAe,SAAS,EAAE,GAAG;AAChC,aAAO;AAAA,IACT;AACA,WAAO,CAAC,GAAG,SAAS,YAAY,0BAA0B,CAAC;AAAA,EAC7D,GAAG,CAAC,eAAe,MAAM,qBAAqB,CAAC;AAC/C,+BAA6B,eAAe,kBAAkB,eAAe;AAC7E,+BAA6B,eAAe,gBAAgB,qBAAqB;AACnF;;;AC1CA,IAAAC,UAAuB;AACvB;;;ACDA;;;ACAA;AACA,IAAAC,UAAuB;AACvB;AAIA,IAAAC,uBAA2C;AAC3C,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,kBAAkB,eAAe,2BAA2B;AAAA,IACnE,aAAa,CAAC,2BAA2B;AAAA,EAC3C;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACA,SAAS,mBAAmB,QAAQ;AAClC,QAAM,SAAS,kBAAkB;AACjC,QAAM,YAAYC,kBAAiB;AACnC,QAAM,YAAY,gBAAgB,QAAQ,qBAAqB;AAC/D,QAAM,YAAY,gBAAgB,QAAQ,+BAA+B;AACzE,QAAM,gBAAgB,gBAAgB,QAAQ,yBAAyB;AAEvE,QAAM,YAAY,OAAO,IAAI,eAAe,OAAO;AAGnD,QAAM,cAAoB,gBAAQ,MAAM,CAAC,CAAC,UAAU,iBAAiB,CAAC,UAAU,UAAU,cAAc,KAAK,OAAO,KAAK,aAAa,EAAE,WAAW,GAAG,CAAC,UAAU,eAAe,WAAW,WAAW,aAAa,CAAC;AACpN,QAAM,aAAa;AAAA,IACjB;AAAA,IACA,SAAS,UAAU;AAAA,EACrB;AACA,QAAM,UAAUD,mBAAkB,UAAU;AAC5C,QAAM,UAAgB,oBAAY,CAAC,WAAW,gBAAgB,WAAS;AAErE,QAAI,sBAAsB,KAAK,GAAG;AAChC;AAAA,IACF;AAGA,QAAI,CAAC,OAAO,QAAQ,OAAO,OAAO,EAAE,GAAG;AACrC;AAAA,IACF;AACA,WAAO,QAAQ,aAAa,WAAW,OAAO,QAAQ,aAAa,OAAO,EAAE,GAAG,KAAK;AACpF,QAAI,aAAa;AACf,kBAAY,KAAK;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,QAAQ,OAAO,EAAE,CAAC;AACtB,QAAM,yBAAyB,cAAc;AAAA,IAC3C,aAAa,QAAQ,cAAc;AAAA,IACnC,YAAY,QAAQ,aAAa;AAAA,IACjC,WAAW,QAAQ,YAAY;AAAA,EACjC,IAAI;AACJ,MAAI,OAAO,QAAQ,SAAS,UAAU;AACpC,WAAO;AAAA,EACT;AACA,aAAoB,qBAAAE,MAAM,OAAO,SAAS;AAAA,IACxC,WAAW,QAAQ;AAAA,IACnB,WAAW;AAAA,EACb,GAAG,wBAAwB;AAAA,IACzB,UAAU,KAAc,qBAAAC,KAAK,UAAU,MAAM,gBAAgB,CAAC,CAAC,OAAgB,qBAAAA,KAAK,OAAO;AAAA,MACzF,WAAW,QAAQ;AAAA,MACnB,UAAU;AAAA,IACZ,CAAC,CAAC;AAAA,EACJ,CAAC,CAAC;AACJ;AAEO,IAAM,uBAAuB,YAAU;AAC5C,MAAI,OAAO,QAAQ,SAAS,YAAY,OAAO,QAAQ,SAAS,aAAa;AAC3E,WAAO;AAAA,EACT;AACA,aAAoB,qBAAAC,KAAK,oBAAoB,SAAS,CAAC,GAAG,MAAM,CAAC;AACnE;;;ADtEO,IAAM,uBAAuB,SAAS,CAAC,GAAG,qBAAqB;AAAA,EACpE,MAAM;AAAA,EACN,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,WAAW;AAAA;AAAA,EAEX,YAAY;AAAA,EACZ,cAAc,MAAM;AAAA,EACpB,YAAY;AACd,CAAC;;;ADdD,IAAI,YAAyB,SAAUC,YAAW;AAChD,EAAAA,WAAUA,WAAU,IAAI,IAAI,CAAC,IAAI;AACjC,EAAAA,WAAUA,WAAU,MAAM,IAAI,CAAC,IAAI;AACnC,SAAOA;AACT,EAAE,aAAa,CAAC,CAAC;AACjB,IAAI,wBAAwB;AAC5B,IAAI,uBAAuB;AAAA,EACzB,kBAAkB;AAAA,EAClB,eAAe;AACjB;AACA,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,aAAa,CAAC,eAAe;AAAA,EAC/B;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AAMO,IAAM,oBAAoB,CAAC,QAAQ,UAAU;AAClD,QAAM,SAAS,cAAc,QAAQ,mBAAmB;AACxD,QAAM,YAAY,gBAAgB,QAAQ,qBAAqB;AAC/D,QAAM,YAAY,gBAAgB,QAAQ,+BAA+B;AACzE,QAAM,cAAoB,eAAO,IAAI;AACrC,QAAM,iBAAuB,eAAO,IAAI;AACxC,QAAM,yBAA+B,eAAO;AAC5C,QAAM,aAAa;AAAA,IACjB,SAAS,MAAM;AAAA,EACjB;AACA,QAAM,UAAUA,mBAAkB,UAAU;AAC5C,QAAM,CAAC,WAAW,YAAY,IAAU,iBAAS,EAAE;AACnD,EAAM,kBAAU,MAAM;AACpB,WAAO,MAAM;AACX,mBAAa,uBAAuB,OAAO;AAAA,IAC7C;AAAA,EACF,GAAG,CAAC,CAAC;AAIL,QAAM,uBAA6B,gBAAQ,MAAM;AAC/C,WAAO,CAAC,MAAM,iBAAiB,CAAC,CAAC,UAAU,UAAU,cAAc;AAAA,EACrE,GAAG,CAAC,MAAM,eAAe,WAAW,SAAS,CAAC;AAC9C,QAAM,kBAAwB,oBAAY,CAAC,QAAQ,UAAU;AAE3D,UAAM,gBAAgB,0BAA0B,OAAO,QAAQ,KAAK;AACpE,QAAI,wBAAwB,OAAO,KAAK,aAAa,EAAE,WAAW,GAAG;AACnE;AAAA,IACF;AACA,WAAO,MAAM,sBAAsB,OAAO,EAAE,EAAE;AAG9C,UAAM,gBAAgB;AACtB,gBAAY,UAAU,MAAM;AAC5B,gBAAY,QAAQ,UAAU,IAAI,QAAQ,WAAW;AACrD,iBAAa,OAAO,EAAE;AACtB,2BAAuB,UAAU,WAAW,MAAM;AAChD,kBAAY,QAAQ,UAAU,OAAO,QAAQ,WAAW;AAAA,IAC1D,CAAC;AACD,mBAAe,UAAU,OAAO,QAAQ,iCAAiC,OAAO,EAAE;AAClF,WAAO,QAAQ,aAAa,OAAO,IAAI,qBAAqB,KAAK;AAAA,EACnE,GAAG,CAAC,sBAAsB,QAAQ,aAAa,QAAQ,MAAM,CAAC;AAC9D,QAAM,iBAAuB,oBAAY,CAAC,QAAQ,UAAU;AAC1D,QAAI,cAAc,IAAI;AACpB;AAAA,IACF;AACA,UAAM,UAAU,OAAO,QAAQ,WAAW,OAAO,EAAE;AACnD,QAAI,CAAC,WAAW,QAAQ,SAAS,YAAY,QAAQ,SAAS,aAAa;AACzE;AAAA,IACF;AACA,WAAO,MAAM,qBAAqB,OAAO,EAAE,EAAE;AAC7C,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AACtB,UAAM,oBAAoB,wBAAwB,sBAAsB,IAAI,MAAM,UAAU,MAAM;AAClG,QAAI,OAAO,OAAO,WAAW;AAC3B,YAAM,iBAAiB,OAAO,QAAQ,iCAAiC,OAAO,EAAE;AAChF,YAAM,gBAAgB,oBAAoB,IAAI,UAAU,OAAO,UAAU;AACzE,YAAM,sBAAsB;AAAA,QAC1B;AAAA,QACA,kBAAkB,OAAO;AAAA,MAC3B;AACA,YAAM,iBAAiB,oBAAoB,kBAAkB,qBAAqB,iBAAiB,oBAAoB,qBAAqB,qBAAqB;AACjK,UAAI,qBAAqB,kBAAkB,QAAQ,KAAK,IAAI,iBAAiB,KAAK,KAAK,gBAAgB;AACrG,eAAO,QAAQ,YAAY,WAAW,cAAc;AACpD,+BAAuB;AAAA,MACzB;AAAA,IACF;AACA,4BAAwB;AAAA,MACtB,GAAG,MAAM;AAAA,MACT,GAAG,MAAM;AAAA,IACX;AAAA,EACF,GAAG,CAAC,QAAQ,QAAQ,SAAS,CAAC;AAC9B,QAAM,gBAAsB,oBAAY,CAAC,QAAQ,UAAU;AAEzD,UAAM,gBAAgB,0BAA0B,OAAO,QAAQ,KAAK;AACpE,QAAI,cAAc,MAAM,wBAAwB,OAAO,KAAK,aAAa,EAAE,WAAW,GAAG;AACvF;AAAA,IACF;AACA,WAAO,MAAM,kBAAkB;AAC/B,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AACtB,iBAAa,uBAAuB,OAAO;AAC3C,gBAAY,UAAU;AACtB,yBAAqB,gBAAgB;AAGrC,QAAI,MAAM,aAAa,eAAe,QAAQ;AAE5C,aAAO,QAAQ,YAAY,WAAW,eAAe,OAAO;AAC5D,qBAAe,UAAU;AAAA,IAC3B,OAAO;AAEL,YAAM,uBAAuB;AAAA,QAC3B,KAAK,OAAO,QAAQ,OAAO,SAAS;AAAA,QACpC,aAAa,OAAO,QAAQ,iCAAiC,OAAO,EAAE;AAAA,QACtE,UAAU,eAAe;AAAA,MAC3B;AACA,aAAO,QAAQ,aAAa,kBAAkB,oBAAoB;AAAA,IACpE;AACA,iBAAa,EAAE;AAAA,EACjB,GAAG,CAAC,sBAAsB,QAAQ,QAAQ,SAAS,CAAC;AACpD,yBAAuB,QAAQ,gBAAgB,eAAe;AAC9D,yBAAuB,QAAQ,eAAe,cAAc;AAC5D,yBAAuB,QAAQ,cAAc,aAAa;AAC1D,yBAAuB,QAAQ,gBAAgB,cAAc;AAC7D,0BAAwB,QAAQ,kBAAkB,MAAM,gBAAgB;AAC1E;;;AG3IA;AACA,IAAAC,UAAuB;AACvB;AAIA,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,SAAa,gBAAQ,MAAM;AACzB,UAAM,QAAQ;AAAA,MACZ,yBAAyB,CAAC,yBAAyB;AAAA,MACnD,qBAAqB,CAAC,qBAAqB;AAAA,IAC7C;AACA,WAAO,eAAe,OAAO,yBAAyB,OAAO;AAAA,EAC/D,GAAG,CAAC,OAAO,CAAC;AACd;AACO,IAAM,iCAAiC,CAAC,eAAe,UAAU;AACtE,QAAM,aAAa;AAAA,IACjB,SAAS,MAAM;AAAA,EACjB;AACA,QAAM,UAAUA,mBAAkB,UAAU;AAC5C,QAAM,sBAA4B,oBAAY,kBAAgB;AAC5D,UAAM,gBAAgB,SAAS,CAAC,GAAG,sBAAsB;AAAA,MACvD,eAAe,QAAQ;AAAA,MACvB,iBAAiB,QAAQ;AAAA,MACzB,YAAY,cAAc,QAAQ,cAAc,yBAAyB;AAAA,IAC3E,CAAC;AACD,UAAM,0BAA0B,MAAM;AACtC,UAAM,oBAAoB,aAAa,OAAO,cAAc,KAAK,KAAK;AACtE,QAAI,2BAA2B,mBAAmB;AAChD,aAAO;AAAA,IACT;AACA,QAAI,2BAA2B,CAAC,mBAAmB;AACjD,mBAAa,OAAO,cAAc,KAAK,IAAI;AAC3C,mBAAa,gBAAgB,CAAC,cAAc,OAAO,GAAG,aAAa,aAAa;AAAA,IAClF,WAAW,CAAC,2BAA2B,mBAAmB;AACxD,aAAO,aAAa,OAAO,cAAc,KAAK;AAC9C,mBAAa,gBAAgB,aAAa,cAAc,OAAO,WAAS,UAAU,cAAc,KAAK;AAAA,IACvG;AACA,WAAO;AAAA,EACT,GAAG,CAAC,eAAe,SAAS,MAAM,aAAa,CAAC;AAChD,+BAA6B,eAAe,kBAAkB,mBAAmB;AACnF;;;AC5CA,IAAAC,UAAuB;AAGvB,SAAS,wBAAwB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AACF,GAAG;AAPH;AAQE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,qBAAqB,YAAY,MAAM,MAAM,eAAe,MAAM,YAAY;AACpF,MAAI,aAAa;AACjB,MAAI,WAAW,mBAAmB,SAAS;AAC3C,MAAI,yBAAyB;AAC7B,SAAO,CAAC,0BAA0B,gBAAgB,cAAc;AAC9D,UAAM,+BAA6B,YAAO,QAAQ,WAAW,mBAAmB,UAAU,EAAE,EAAE,MAA3D,mBAA8D,UAAS;AAC1G,UAAM,6BAA2B,YAAO,QAAQ,WAAW,mBAAmB,QAAQ,EAAE,EAAE,MAAzD,mBAA4D,UAAS;AACtG,QAAI,8BAA8B,0BAA0B;AAC1D,+BAAyB;AAAA,IAC3B;AACA,QAAI,CAAC,4BAA4B;AAC/B,oBAAc;AACd,uBAAiB;AAAA,IACnB;AACA,QAAI,CAAC,0BAA0B;AAC7B,kBAAY;AACZ,sBAAgB;AAAA,IAClB;AAAA,EACF;AACA,SAAO,yBAAyB;AAAA,IAC9B;AAAA,IACA;AAAA,EACF,IAAI;AACN;AAQO,IAAM,oBAAoB,CAAC,eAAe,UAAU;AACzD,QAAM,YAAY,gBAAgB,eAAe,qBAAqB;AACtE,QAAM,cAAc,gBAAgB,eAAe,uBAAuB;AAC1E,QAAM,4BAAkC,eAAO;AAAA,IAC7C,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,EACnB,CAAC;AACD,QAAM,aAAa,MAAM,oBAAoB;AAC7C,QAAM,mCAAyC,oBAAY,YAAU;AACnE,QAAI,YAAY;AACd;AAAA,IACF;AACA,UAAM,kBAAkB;AAAA,MACtB,kBAAkB,OAAO;AAAA,MACzB,iBAAiB,OAAO;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AACA,QAAI,0BAA0B,QAAQ,qBAAqB,OAAO,iBAAiB,0BAA0B,QAAQ,oBAAoB,OAAO,cAAc;AAC5J;AAAA,IACF;AACA,8BAA0B,UAAU;AAAA,MAClC,kBAAkB,OAAO;AAAA,MACzB,iBAAiB,OAAO;AAAA,IAC1B;AACA,QAAI,UAAU,WAAW,KAAK,YAAY,MAAM,WAAW,GAAG;AAC5D,YAAM,qBAAqB,eAAe,eAAe;AAAA,QACvD,YAAY,MAAM;AAAA,QAClB,gBAAgB,MAAM;AAAA,MACxB,CAAC;AACD,YAAM,sBAAsB,wBAAwB;AAAA,QAClD,QAAQ;AAAA,QACR,aAAa,mBAAmB;AAAA,QAChC,OAAO;AAAA,UACL,eAAe,OAAO;AAAA,UACtB,cAAc,OAAO;AAAA,QACvB;AAAA,MACF,CAAC;AACD,UAAI,CAAC,qBAAqB;AACxB;AAAA,MACF;AACA,sBAAgB,mBAAmB,oBAAoB;AACvD,sBAAgB,kBAAkB,oBAAoB;AAAA,IACxD;AACA,kBAAc,QAAQ,aAAa,aAAa,eAAe;AAAA,EACjE,GAAG,CAAC,eAAe,YAAY,MAAM,YAAY,MAAM,gBAAgB,WAAW,WAAW,CAAC;AAC9F,QAAM,4BAAkC,oBAAY,kBAAgB;AAClE,QAAI,YAAY;AACd;AAAA,IACF;AACA,kBAAc,QAAQ,iCAAiC,aAAa;AACpE,UAAM,gBAAgB,0BAA0B,aAAa;AAC7D,UAAM,kBAAkB;AAAA,MACtB,kBAAkB,cAAc;AAAA,MAChC,iBAAiB,cAAc;AAAA,MAC/B,WAAW;AAAA,MACX;AAAA,IACF;AACA,kBAAc,QAAQ,aAAa,aAAa,eAAe;AAAA,EACjE,GAAG,CAAC,eAAe,YAAY,WAAW,CAAC;AAC3C,QAAM,8BAAoC,oBAAY,oBAAkB;AACtE,QAAI,YAAY;AACd;AAAA,IACF;AACA,kBAAc,QAAQ,iCAAiC,aAAa;AACpE,UAAM,gBAAgB,0BAA0B,aAAa;AAC7D,UAAM,kBAAkB;AAAA,MACtB,kBAAkB,cAAc;AAAA,MAChC,iBAAiB,cAAc;AAAA,MAC/B;AAAA,MACA,aAAa;AAAA,IACf;AACA,kBAAc,QAAQ,aAAa,aAAa,eAAe;AAAA,EACjE,GAAG,CAAC,eAAe,YAAY,SAAS,CAAC;AACzC,yBAAuB,eAAe,8BAA8B,gCAAgC;AACpG,yBAAuB,eAAe,mBAAmB,yBAAyB;AAClF,yBAAuB,eAAe,qBAAqB,2BAA2B;AACtF,0BAAwB,eAAe,aAAa,MAAM,WAAW;AACvE;;;ACzHA;AACA,IAAAC,UAAuB;AAGhB,IAAM,4BAA4B;AACzC,IAAM,mBAAmB,WAAS,GAAG,yBAAyB,IAAI,KAAK;AAChE,IAAM,iCAAiC,CAAC,eAAe,UAAU;AACtE,QAAM,kBAAwB,oBAAY,oBAAkB;AAC1D,UAAM,YAAY,eAAe,KAAK,kBAAkB;AACxD,QAAI,MAAM,oBAAoB,YAAY,CAAC,MAAM,YAAY,UAAU,SAAS,UAAU,MAAM,UAAU;AACxG,aAAO;AAAA,IACT;AACA,UAAM,OAAO,SAAS,CAAC,GAAG,eAAe,IAAI;AAC7C,UAAM,oBAAoB,CAAC,GAAG,UAAU,QAAQ;AAChD,aAASC,KAAI,GAAGA,KAAI,MAAM,WAAW,UAAU,SAAS,QAAQA,MAAK,GAAG;AACtE,YAAM,aAAa,iBAAiBA,EAAC;AACrC,wBAAkB,KAAK,UAAU;AACjC,YAAM,kBAAkB;AAAA,QACtB,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,OAAO;AAAA,MACT;AACA,WAAK,UAAU,IAAI;AAAA,IACrB;AACA,SAAK,kBAAkB,IAAI,SAAS,CAAC,GAAG,WAAW;AAAA,MACjD,UAAU;AAAA,IACZ,CAAC;AACD,WAAO,SAAS,CAAC,GAAG,gBAAgB;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,MAAM,UAAU,MAAM,eAAe,CAAC;AAC1C,+BAA6B,eAAe,eAAe,eAAe;AAC5E;;;ACjCA;AACA,IAAAC,UAAuB;AAGvB,SAAS,8BAA8B,YAAY,UAAU;AAJ7D;AAKE,QAAM,QAAQ;AAAA,IACZ,QAAQ,CAAC;AAAA,IACT,WAAW,CAAC;AAAA,IACZ,UAAU,CAAC;AAAA,EACb;AACA,iDAAY,QAAZ,mBAAiB,QAAQ,cAAY;AACnC,UAAM,KAAK,qBAAqB,UAAU,QAAQ;AAClD,UAAM,OAAO,KAAK,EAAE;AACpB,UAAM,SAAS,EAAE,IAAI;AAAA,EACvB;AACA,iDAAY,WAAZ,mBAAoB,QAAQ,cAAY;AACtC,UAAM,KAAK,qBAAqB,UAAU,QAAQ;AAClD,UAAM,UAAU,KAAK,EAAE;AACvB,UAAM,SAAS,EAAE,IAAI;AAAA,EACvB;AACA,SAAO;AACT;AACO,IAAM,6BAA6B,CAAC,OAAO,OAAO,WAAW;AAtBpE;AAuBE,SAAO,QAAQ,OAAO,aAAa,8BAA8B,MAAM,YAAY,MAAM,QAAQ;AACjG,SAAO,SAAS,CAAC,GAAG,OAAO;AAAA,IACzB,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM;AAAA,MAC7B,qBAAqB,SAAS,CAAC,IAAG,WAAM,SAAN,mBAAY,qBAAqB;AAAA,QACjE,YAAY;AAAA,UACV,KAAK,CAAC;AAAA,UACN,QAAQ,CAAC;AAAA,QACX;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AACO,IAAM,oBAAoB,CAAC,QAAQ,UAAU;AAClD,QAAM,gBAAsB,oBAAY,mBAAiB;AACvD,WAAO,QAAQ,OAAO,aAAa,8BAA8B,eAAe,MAAM,QAAQ;AAC9F,WAAO,QAAQ,iCAAiC,aAAa;AAAA,EAC/D,GAAG,CAAC,QAAQ,MAAM,QAAQ,CAAC;AAC3B,mBAAiB,QAAQ;AAAA,IACvB,wBAAwB;AAAA,EAC1B,GAAG,QAAQ;AACX,QAAM,gBAAsB,eAAO,IAAI;AACvC,EAAM,kBAAU,MAAM;AACpB,QAAI,cAAc,SAAS;AACzB,oBAAc,UAAU;AACxB;AAAA,IACF;AACA,WAAO,QAAQ,uBAAuB,MAAM,UAAU;AAAA,EACxD,GAAG,CAAC,QAAQ,MAAM,UAAU,CAAC;AAC/B;;;ACnDA;AACA,IAAAC,UAAuB;AAIhB,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AAZH;AAaE,QAAM,yBAAyB,SAAS,CAAC,GAAG,eAAe,sBAAsB;AACjF,QAAM,sBAAsB,SAAS,CAAC,GAAG,eAAe,mBAAmB;AAC3E,QAAM,OAAO,SAAS,CAAC,GAAG,eAAe,IAAI;AAC7C,QAAM,aAAa,SAAS,CAAC,GAAG,eAAe,UAAU;AAIzD,QAAM,OAAO;AAAA,IACX,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR;AAAA,EACF;AACA,mBAAiB,MAAM,MAAM,YAAY,IAAI;AAC7C,MAAI,CAAC,iBAAiB;AACpB,2BAAuB,KAAK,IAAI;AAChC,wBAAoB,KAAK,IAAI;AAAA,EAC/B;AAGA,SAAO,QAAQ,OAAO,KAAK,uBAAuB,KAAK,IAAI,SAAS,CAAC,GAAG,QAAQ;AAChF,SAAO,QAAQ,OAAO,KAAK,oBAAoB,KAAK,IAAI;AACxD,QAAM,uBAAqB,oBAAe,wBAAf,mBAAoC,eAAc,CAAC;AAC9E,QAAM,eAAe;AAAA,IACnB,IAAI;AAAA,IACJ,OAAO;AAAA,EACT;AACA,OAAI,gCAAe,wBAAf,mBAAoC,eAApC,mBAAiD,cAAjD,mBAA4D,SAAS,eAAe;AACtF,WAAO,SAAS,CAAC,GAAG,gBAAgB;AAAA,MAClC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO,SAAS,CAAC,GAAG,gBAAgB;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,qBAAqB,SAAS,CAAC,GAAG,eAAe,qBAAqB;AAAA,MACpE,YAAY,SAAS,CAAC,GAAG,oBAAoB;AAAA,QAC3C,CAAC,QAAQ,GAAG,CAAC,GAAI,mBAAmB,QAAQ,KAAK,CAAC,GAAI,YAAY;AAAA,MACpE,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AACO,IAAM,iCAAiC,YAAU;AACtD,QAAM,gBAAsB,oBAAY,oBAAkB;AA9D5D;AA+DI,UAAM,kBAAkB,OAAO,QAAQ,OAAO,cAAc,CAAC;AAC7D,QAAI,oBAAoB,SAAS,CAAC,GAAG,gBAAgB;AAAA,MACnD,qBAAqB,SAAS,CAAC,GAAG,eAAe,qBAAqB;AAAA;AAAA,QAEpE,YAAY,CAAC;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AACD,0BAAgB,WAAhB,mBAAwB,QAAQ,WAAS;AACvC,0BAAoB,aAAa;AAAA,QAC/B,gBAAgB;AAAA,QAChB,UAAU,gBAAgB,SAAS,KAAK;AAAA,QACxC;AAAA,QACA,UAAU;AAAA,QACV;AAAA,QACA,iBAAiB;AAAA,MACnB,CAAC;AAAA,IACH;AACA,0BAAgB,cAAhB,mBAA2B,QAAQ,WAAS;AAC1C,0BAAoB,aAAa;AAAA,QAC/B,gBAAgB;AAAA,QAChB,UAAU,gBAAgB,SAAS,KAAK;AAAA,QACxC;AAAA,QACA,UAAU;AAAA,QACV;AAAA,QACA,iBAAiB;AAAA,MACnB,CAAC;AAAA,IACH;AAGA,UAAI,qBAAgB,cAAhB,mBAA2B,aAAU,qBAAgB,WAAhB,mBAAwB,SAAQ;AACvE,YAAM,gBAAgB,WAAS;AAC7B,YAAI,kBAAkB,KAAK,KAAK,KAAK,kBAAkB,KAAK,KAAK,EAAE,SAAS,aAAa;AACvF,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,YAAM,gBAAgB,kBAAkB,KAAK,kBAAkB;AAC/D,wBAAkB,KAAK,kBAAkB,IAAI,SAAS,CAAC,GAAG,eAAe;AAAA,QACvE,UAAU,cAAc,SAAS,OAAO,aAAa;AAAA,MACvD,CAAC;AACD,wBAAkB,aAAa,kBAAkB,WAAW,OAAO,aAAa;AAAA,IAClF;AACA,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,CAAC;AACX,+BAA6B,QAAQ,eAAe,aAAa;AACnE;;;AC5FO,IAAM,0BAA0B,CAAC,aAAa,UAAU;AAC7D,QAAM,SAAS,sBAAsB,aAAa,KAAK;AAKvD,mCAAiC,QAAQ,KAAK;AAC9C,iCAA+B,QAAQ,KAAK;AAC5C,+BAA6B,QAAQ,KAAK;AAC1C,iCAA+B,QAAQ,KAAK;AAC5C,iCAA+B,MAAM;AACrC,kCAAgC,QAAQ,KAAK;AAG7C,oCAAkC,QAAQ,KAAK;AAC/C,2BAAyB,MAAM;AAK/B,yBAAuB,4BAA4B,QAAQ,KAAK;AAChE,yBAAuB,iCAAiC,QAAQ,KAAK;AACrE,yBAAuB,8BAA8B,QAAQ,KAAK;AAClE,yBAAuB,6BAA6B,QAAQ,KAAK;AACjE,yBAAuB,+BAA+B,QAAQ,KAAK;AACnE,yBAAuB,yBAAyB,QAAQ,KAAK;AAC7D,yBAAuB,4BAA4B,QAAQ,KAAK;AAChE,yBAAuB,sBAAsB,QAAQ,KAAK;AAC1D,yBAAuB,yBAAyB,QAAQ,KAAK;AAC7D,yBAAuB,uBAAuB,QAAQ,KAAK;AAC3D,yBAAuB,yBAAyB,QAAQ,KAAK;AAC7D,yBAAuB,iCAAiC,QAAQ,KAAK;AACrE,yBAAuB,wBAAwB,QAAQ,KAAK;AAC5D,yBAAuB,yBAAyB,QAAQ,KAAK;AAC7D,yBAAuB,+BAA+B,QAAQ,KAAK;AACnE,yBAAuB,8BAA8B,QAAQ,KAAK;AAClE,yBAAuB,4BAA4B,QAAQ,KAAK;AAChE,yBAAuB,0BAA0B,QAAQ,KAAK;AAC9D,yBAAuB,4BAA4B,QAAQ,KAAK;AAChE,yBAAuB,8BAA8B,QAAQ,KAAK;AAClE,yBAAuB,gCAAgC,QAAQ,KAAK;AACpE,yBAAuB,QAAQ,KAAK;AACpC,kBAAgB,MAAM;AACtB,4BAA0B,QAAQ,KAAK;AACvC,sBAAoB,QAAQ,KAAK;AACjC,uBAAqB,QAAQ,KAAK;AAClC,oBAAkB,QAAQ,KAAK;AAC/B,iBAAe,QAAQ,KAAK;AAC5B,cAAY,QAAQ,KAAK;AACzB,mBAAiB,MAAM;AACvB,qBAAmB,QAAQ,KAAK;AAChC,wBAAsB,MAAM;AAC5B,wBAAsB,QAAQ,KAAK;AACnC,iBAAe,QAAQ,KAAK;AAC5B,eAAa,QAAQ,KAAK;AAC1B,0BAAwB,QAAQ,KAAK;AACrC,gBAAc,QAAQ,KAAK;AAC3B,iBAAe,QAAQ,KAAK;AAC5B,iBAAe,QAAQ,KAAK;AAC5B,uBAAqB,QAAQ,KAAK;AAClC,sBAAoB,QAAQ,KAAK;AACjC,oBAAkB,QAAQ,KAAK;AAC/B,kBAAgB,QAAQ,KAAK;AAC7B,oBAAkB,QAAQ,KAAK;AAC/B,gBAAc,QAAQ,KAAK;AAC3B,wBAAsB,QAAQ,KAAK;AACnC,oBAAkB,QAAQ,KAAK;AAC/B,oBAAkB,MAAM;AACxB,mBAAiB,QAAQ,KAAK;AAC9B,qBAAmB,QAAQ,KAAK;AAChC,mBAAiB,QAAQ,KAAK;AAC9B,oBAAkB,QAAQ,KAAK;AAC/B,gBAAc,QAAQ,KAAK;AAC3B,0BAAwB,MAAM;AAC9B,wBAAsB,QAAQ,KAAK;AACnC,SAAO;AACT;;;AC5FA;AACA,IAAAC,UAAuB;;;ACDvB;;;ACAA;AACA,IAAAC,UAAuB;AAGvB,IAAAC,uBAA4B;AACrB,IAAM,6BAA6B,SAAS,CAAC,GAAG,wBAAwB;AAAA,EAC7E,uBAAuB;AACzB,CAAC;AACM,IAAM,kCAAkC,SAAS,CAAC,GAAG,6BAA6B;AAAA,EACvF,uBAAuB;AAAA,IACrB,cAAc;AAAA,EAChB;AACF,CAAC;AACM,IAAM,oBAAuC,mBAAW,SAASC,mBAAkB,OAAO,KAAK;AACpG,aAAoB,qBAAAC,KAAK,uBAAuB,SAAS;AAAA,IACvD;AAAA,EACF,GAAG,OAAO;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,EACpB,CAAC,CAAC;AACJ,CAAC;;;ACpBD;AACA;AAEA,IAAAC,UAAuB;AACvB,IAAAC,qBAAsB;;;ACJtB;AACA;AAEA,IAAAC,UAAuB;AAGvB;AAEA,IAAAC,uBAA2C;AAN3C,IAAMC,aAAY,CAAC,sBAAsB,iBAAiB,qBAAqB,sBAAsB,iBAAiB,kBAAkB,oBAAoB;AAO5J,IAAMC,qBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,SAAa,gBAAQ,MAAM;AACzB,UAAM,QAAQ;AAAA,MACZ,iBAAiB,CAAC,iBAAiB;AAAA,IACrC;AACA,WAAO,eAAe,OAAO,yBAAyB,OAAO;AAAA,EAC/D,GAAG,CAAC,OAAO,CAAC;AACd;AACA,IAAM,mBAAmB,uBAAO,OAAO,IAAI;AACpC,IAAMC,wBAAuB,WAAS;AAC3C,QAAM,SAAS,yBAAyB;AACxC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,kCAAkC,gBAAgB,QAAQ,sCAAsC;AACtG,QAAM,wBAAwB,qBAA8B,SAAS,CAAC,GAAG,OAAO;AAAA,IAC5E,8BAA8B,gCAAgC,oCAAoC;AAAA,EACpG,CAAC,CAAC,GACF;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,uBACJ,aAAa,8BAA8B,uBAAuBF,UAAS;AAC7E,QAAM,mBAAyB,eAAO,IAAI;AAC1C,SAAO,QAAQ,SAAS,WAAW;AAAA,IACjC,yBAAyB;AAAA,EAC3B,CAAC;AACD,QAAM,sBAA4B,eAAO,IAAI;AAC7C,QAAM,YAAYG,kBAAiB;AACnC,QAAM,UAAUF,mBAAkB,SAAS;AAC3C,QAAM,yBAAyB,CAAC,UAAU;AAC1C,QAAM,aAAa,gBAAgB,QAAQ,sBAAsB;AACjE,QAAM,cAAc,gBAAgB,QAAQ,uBAAuB;AACnE,QAAM,gBAAgB,WAAW,oBAAoB,WAAW,kBAAkB;AAClF,QAAM,0BAA0B,gBAAgB,QAAQ,mCAAmC;AAC3F,QAAM,gBAAsB,oBAAY,YAAU;AAChD,UAAM,kBAAkB,2CAAa,MAAM,KAAK,QAAM,GAAG,UAAU,OAAO,SAAS,GAAG,aAAa;AACnG,QAAI,mBAAmB,MAAM;AAE3B,aAAO;AAAA,IACT;AACA,UAAM,oBAAoB,iBAAiB,OAAO,KAAK;AACvD,QAAI,qBAAqB,MAAM;AAE7B,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,cAAc,MAAM;AACxC,qBAAiB,OAAO,KAAK,IAAI;AACjC,WAAO;AAAA,EACT,GAAG,CAAC,WAAW,CAAC;AAChB,QAAM,mBAAmB,YAAU;AArErC;AAsEI,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,mBAAmB,MAAM;AAC7B,UAAM,UAAU,CAAC;AACjB,aAASG,KAAI,GAAGA,KAAI,gBAAgB,QAAQA,MAAK,GAAG;AAClD,YAAM,SAAS,gBAAgBA,EAAC;AAChC,YAAM,cAAc,sBAAsBA;AAC1C,YAAM,YAAW,mEAAyB,WAAU,OAAO;AAC3D,YAAM,gBAAgB,gBAAgB;AACtC,YAAM,gBAAgB,mFAAiC;AACvD,YAAM,WAAW,kBAAkB,OAAO,SAAS,iBAAiB,CAAC,MAAM,+BAA+B,IAAI;AAC9G,YAAM,kBAAkB,OAAO,OAAO,oBAAoB,aAAa,OAAO,gBAAgB;AAAA,QAC5F,OAAO,OAAO;AAAA,QACd;AAAA,MACF,CAAC,IAAI,OAAO;AACZ,YAAM,OAAO,cAAc,MAAM;AACjC,YAAM,iBAAiB,iCAAQ;AAC/B,YAAM,QAAQ,mBAAmB;AAAA,QAC/B;AAAA,QACA;AAAA,QACA,eAAe,OAAO;AAAA,MACxB,CAAC;AACD,cAAQ,SAAmB,qBAAAC,KAAK,UAAU,MAAM,kBAAkB,SAAS;AAAA,QACzE,UAAU;AAAA,QACV,QAAQ,WAAW;AAAA,QACnB,OAAO,OAAO;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,OAAO;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA,gBAAgBD;AAAA,QAChB,eAAe,gBAAgB;AAAA,QAC/B;AAAA,MACF,IAAG,eAAU,cAAV,mBAAqB,gBAAgB,GAAG,GAAG,OAAO,KAAK,SAAS,CAAC;AAAA,IACtE;AACA,WAAO,WAAW,WAAW,QAAQ,SAAS,GAAG,IAAI;AAAA,EACvD;AACA,QAAM,sBAAsB,MAAM;AAChC,QAAI,wBAAwB;AAC1B,aAAO;AAAA,IACT;AACA,eAAoB,qBAAAE,MAAM,qBAAqB;AAAA,MAC7C,KAAK;AAAA,MACL,WAAW,QAAQ;AAAA,MACnB,MAAM;AAAA,MACN,iBAAiB,yBAAyB;AAAA,MAC1C,YAAY;AAAA,MACZ,UAAU,CAAC,qBAAqB,iBAAiB;AAAA,QAC/C,UAAU,yBAAyB;AAAA,QACnC,eAAe;AAAA,QACf,gBAAgB,kBAAkB;AAAA,QAClC,eAAe,kBAAkB;AAAA,MACnC,CAAC,GAAG,iBAAiB;AAAA,QACnB;AAAA,QACA,gBAAgB,cAAc,KAAK;AAAA,QACnC,eAAe,eAAe,SAAS,cAAc,MAAM;AAAA,MAC7D,CAAC,GAAG,sBAAsB,iBAAiB;AAAA,QACzC,UAAU,yBAAyB;AAAA,QACnC,eAAe;AAAA,QACf,gBAAgB,mBAAmB;AAAA,QACnC,eAAe,mBAAmB;AAAA,MACpC,CAAC,CAAC;AAAA,IACJ,CAAC;AAAA,EACH;AACA,SAAO,SAAS,CAAC,GAAG,YAAY;AAAA,IAC9B;AAAA,EACF,CAAC;AACH;;;ADvIA,IAAAC,uBAA2C;AAN3C,IAAMC,aAAY,CAAC,SAAS,aAAa,kBAAkB,oBAAoB,sBAAsB,6BAA6B,kCAAkC,qBAAqB,0BAA0B,0BAA0B,mBAAmB,oBAAoB,+BAA+B,8BAA8B;AAOjV,IAAM,SAAS,eAAO,KAAK,EAAE;AAAA,EAC3B,MAAM;AAAA,EACN,iBAAiB;AACnB,CAAC;AACD,IAAM,oBAAuC,mBAAW,SAASC,mBAAkB,OAAO,KAAK;AAC7F,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OACJ,QAAQ,8BAA8B,OAAOD,UAAS;AACxD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAIE,sBAAqB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,aAAoB,qBAAAC,MAAM,uBAAuB,SAAS;AAAA,IACxD;AAAA,IACA;AAAA,EACF,GAAG,OAAO,cAAc,GAAG;AAAA,IACzB,UAAU,CAAC,0BAA0B,GAAG,oBAAoB,GAAG,oBAAoB,OAAgB,qBAAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;AAAA,EACrH,CAAC,CAAC;AACJ,CAAC;AACD,OAAwC,kBAAkB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpE,wBAAwB,mBAAAC,QAAU,MAAM;AAAA,IACtC,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC;AAAA,EACD,gCAAgC,mBAAAA,QAAU,MAAM;AAAA,IAC9C,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC;AAAA,EACD,6BAA6B,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC/E,cAAc,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,EAAE;AAAA,IAClD,SAAS,mBAAAA,QAAU;AAAA,EACrB,CAAC,CAAC,CAAC,EAAE;AAAA,EACL,mBAAmB,mBAAAA,QAAU,MAAM;AAAA,IACjC,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC;AAAA,EACD,2BAA2B,mBAAAA,QAAU,MAAM;AAAA,IACzC,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC;AAAA,EACD,iBAAiB,mBAAAA,QAAU,MAAM;AAAA,IAC/B,OAAO,mBAAAA,QAAU;AAAA,IACjB,MAAM,mBAAAA,QAAU,KAAK;AAAA,EACvB,CAAC,EAAE;AAAA,EACH,kBAAkB,mBAAAA,QAAU,OAAO;AAAA,EACnC,oBAAoB,mBAAAA,QAAU,OAAO;AAAA,EACrC,8BAA8B,mBAAAA,QAAU,KAAK;AAAA,EAC7C,wBAAwB,mBAAAA,QAAU,OAAO;AAAA,EACzC,kBAAkB,mBAAAA,QAAU,OAAO;AAAA,EACnC,gBAAgB,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,EAAE;AACtD,IAAI;;;AEzFJ,IAAAC,UAAuB;AACvB;;;ACAO,IAAMC,4BAA2B;;;ACDxC,IAAAC,UAAuB;AAKvB,IAAAC,uBAA4B;AAC5B,IAAM,cAAc,eAAO,OAAO;AAAA,EAChC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,mBAAmB,CAAC,OAAO,WAAW,OAAO;AAC/C,CAAC,EAAE,CAAC;AAAA,EACF;AACF,OAAO;AAAA,EACL,OAAO;AAAA,EACP,kBAAkB,MAAM,QAAQ,OAAO,QAAQ,WAAW;AAAA,EAC1D,UAAU;AACZ,EAAE;AACF,SAAS,gBAAgB,OAAO;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,SAASC,0BAAyB;AACxC,QAAM,MAAY,eAAO,IAAI;AAC7B,QAAM,YAAYC,kBAAiB;AACnC,QAAM,aAAa;AACnB,QAAM,gBAAgB,WAAW;AACjC,EAAM,wBAAgB,MAAM;AAC1B,QAAI,iBAAiB,OAAO,mBAAmB,aAAa;AAE1D,aAAO,QAAQ,uBAAuB,OAAO,IAAI,QAAQ,YAAY;AAAA,IACvE;AAAA,EACF,GAAG,CAAC,QAAQ,eAAe,KAAK,CAAC;AACjC,oBAAkB,KAAK,aAAW;AAChC,UAAM,CAAC,KAAK,IAAI;AAChB,UAAM,iBAAiB,MAAM,iBAAiB,MAAM,cAAc,SAAS,IAAI,MAAM,cAAc,CAAC,EAAE,YAAY,MAAM,YAAY;AACpI,WAAO,QAAQ,uBAAuB,OAAO,cAAc;AAAA,EAC7D,GAAG,aAAa;AAChB,aAAoB,qBAAAC,KAAK,aAAa;AAAA,IACpC;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,OAAO;AAAA,MACL;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;;;AF1CA,IAAAC,uBAA4B;AAC5B,IAAMC,qBAAoB,MAAM;AAC9B,QAAM,QAAQ;AAAA,IACZ,aAAa,CAAC,aAAa;AAAA,EAC7B;AACA,SAAO,eAAe,OAAO,yBAAyB,CAAC,CAAC;AAC1D;AACO,SAAS,iBAAiB,OAAO;AACtC,QAAM,YAAYC,kBAAiB;AACnC,MAAI,CAAC,UAAU,uBAAuB;AACpC,WAAO;AAAA,EACT;AACA,SAA0B,sBAAc,sBAAsB,KAAK;AACrE;AACA,SAAS,qBAAqB;AAAA,EAC5B;AACF,GAAG;AACD,QAAM,SAASC,0BAAyB;AACxC,QAAM,UAAUF,mBAAkB;AAClC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,iBAAiB,gBAAgB,QAAQ,qCAAqC;AACpF,QAAM,sBAAsB,gBAAgB,QAAQ,+CAA+C;AACnG,QAAM,sBAAsB,gBAAgB,QAAQ,8CAA8C;AAClG,QAAM,iBAAuB,oBAAY,WAAS;AAChD,UAAM,UAAU,oBAAoB,KAAK;AAGzC,UAAM,WAAW,OAAO,QAAQ,iCAAiC,KAAK;AACtE,UAAM,SAAS,aAAa;AAC5B,QAAI,CAAqB,uBAAe,OAAO,KAAK,CAAC,QAAQ;AAC3D,aAAO;AAAA,IACT;AACA,UAAM,gBAAgB,OAAO,QAAQ,yBAAyB,KAAK;AACnE,UAAM,SAAS,gBAAgB,SAAS,oBAAoB,KAAK;AACjE,eAAoB,qBAAAG,KAAK,iBAAiB;AAAA,MACxC;AAAA,MACA;AAAA,MACA,WAAW,QAAQ;AAAA,MACnB,UAAU;AAAA,IACZ,GAAG,SAAS,KAAK,EAAE;AAAA,EACrB,GAAG,CAAC,QAAQ,QAAQ,aAAa,qBAAqB,mBAAmB,CAAC;AAC1E,EAAM,kBAAU,MAAM;AACpB,QAAI,eAAe,WAAW,GAAG;AAC/B,gBAAU,mBAAmB;AAAA,IAC/B,OAAO;AACL,gBAAU,IAAI,IAAI,eAAe,IAAI,WAAS,CAAC,OAAO,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,IAChF;AAAA,EACF,GAAG,CAAC,gBAAgB,WAAW,cAAc,CAAC;AAC9C,SAAO;AACT;;;AG3DA,IAAAC,UAAuB;AACvB;AACA;AAGA,IAAAC,uBAA4B;AAC5B,IAAMC,sBAAoB,MAAM;AAC9B,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,YAAY;AAAA,EACrB;AACA,SAAO,eAAe,OAAO,yBAAyB,CAAC,CAAC;AAC1D;AACO,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AACF,GAAG;AACD,QAAM,UAAUA,oBAAkB;AAClC,QAAM,SAAS,yBAAyB;AACxC,QAAM,gBAAgB,gBAAgB,QAAQ,yBAAyB;AACvE,QAAM,iBAAiB,gBAAgB,QAAQ,sBAAsB;AACrE,QAAM,OAAO,eAAe,QAAQ;AACpC,QAAM,sBAA4B,gBAAQ,OAAO;AAAA,IAC/C,eAAe;AAAA,IACf,cAAc,KAAK;AAAA,IACnB,kBAAkB,cAAc;AAAA,IAChC,iBAAiB,cAAc;AAAA,EACjC,IAAI,CAAC,MAAM,cAAc,kBAAkB,cAAc,eAAe,CAAC;AACzE,MAAI,KAAK,WAAW,GAAG;AACrB,WAAO;AAAA,EACT;AACA,QAAM,aAAa,gBAAgB,QAAQ;AAAA,IACzC;AAAA,IACA;AAAA,IACA,eAAe;AAAA,EACjB,CAAC;AACD,aAAoB,qBAAAC,KAAK,OAAO;AAAA,IAC9B,WAAW,aAAK,QAAQ,MAAM,YAAY,eAAe,QAAQ,EAAE,CAAC;AAAA,IACpE,MAAM;AAAA,IACN,UAAU;AAAA,EACZ,CAAC;AACH;;;ACxCA;AAEA,IAAM,YAAY;AAAA,EAChB,wBAAwB;AAAA,EACxB,uBAAuB;AACzB;AACA,IAAM,gBAAgB,SAAS,CAAC,GAAG,SAAS;AAC5C,IAAO,mBAAQ;;;ARER,IAAM,yCAAyC,SAAS,CAAC,GAAG,oCAAoC,kBAAe;AAAA,EACpH,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,cAAc;AAAA,EACd,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,YAAY;AACd,CAAC;;;ADNM,IAAM,qCAAqC,SAAS,CAAC,GAAG,gCAAgC;AAAA,EAC7F,oBAAoB;AAAA,EACpB,UAAU;AAAA,EACV,+BAA+B;AAAA,EAC/B,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,sBAAsB;AAAA,EACtB,oCAAoC;AAAA,EACpC,0BAA0B;AAAA,EAC1B,wBAAwB;AAAA,EACxB,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,sBAAsB,MAAM;AAAA,EAC5B,eAAe;AACjB,CAAC;AACD,IAAM,eAAe;AACd,IAAM,sBAAsB,aAAW;AAC5C,QAAM,cAAc;AAAA;AAAA,IAEpB,cAAc;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,EAAC;AACF,QAAM,aAAmB,gBAAQ,MAAM,SAAS,CAAC,GAAG,0BAA0B,YAAY,UAAU,GAAG,CAAC,YAAY,UAAU,CAAC;AAC/H,QAAM,QAAc,gBAAQ,MAAM,aAAa;AAAA,IAC7C;AAAA,IACA,OAAO,YAAY;AAAA,EACrB,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC;AACvB,SAAa,gBAAQ,MAAM,SAAS,CAAC,GAAG,oCAAoC,aAAa;AAAA,IACvF;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb,CAAC,GAAG,CAAC,aAAa,YAAY,KAAK,CAAC;AACtC;;;AU3CA;AACO,IAAM,iBAAiB,MAAM;AAClC,QAAMC,eAAc;AACpB,MAAI,MAAuC;AAGzC,QAAIA,iBAAgB,oBAAyB;AAE3C,aAAO,uBAAe;AAAA,IACxB;AAAA,EACF;AACA,SAAOA;AACT;;;ACXO,IAAM,4BAA4B,CAAC,GAAG,wBAAwB,WAAS,MAAM,cAAc,MAAM,sBAAsB,wFAAwF,QAAW,WAAS,MAAM,YAAY,MAAM,eAAe,YAAY,4FAA4F,QAAW,WAAS,CAAC,MAAM,cAAc,MAAM,gCAAgC,sGAAsG,QAAW,WAAS,MAAM,cAAc,cAAc,YAAY,MAAM,mBAAmB,YAAY,MAAM,oBAAoB,YAAY,SAAS,MAAM,QAAQ,KAAK,oLAAoL,MAAS;;;AnDWp5B,IAAAC,uBAA2C;AAC3C,IAAM,cAAc,eAAe;AACnC,IAAM,iBAAoC,mBAAW,SAAS,YAAY,SAAS,KAAK;AACtF,QAAM,QAAQ,oBAAoB,OAAO;AACzC,QAAM,gBAAgB,wBAAwB,MAAM,QAAQ,KAAK;AACjE,qBAAmB,mBAAmB,WAAW;AACjD,MAAI,MAAuC;AACzC,kBAAc,OAAO,yBAAyB;AAAA,EAChD;AACA,aAAoB,qBAAAC,KAAK,qBAAqB;AAAA,IAC5C;AAAA,IACA;AAAA,IACA,cAAuB,qBAAAC,MAAM,UAAU,SAAS;AAAA,MAC9C,WAAW,MAAM;AAAA,MACjB,OAAO,MAAM;AAAA,MACb,IAAI,MAAM;AAAA,MACV;AAAA,IACF,GAAG,MAAM,gBAAgB;AAAA,MACvB,UAAU,KAAc,qBAAAD,KAAK,YAAY,CAAC,CAAC,OAAgB,qBAAAA,KAAK,qBAAU;AAAA,QACxE,cAAuB,qBAAAA,KAAK,WAAW;AAAA,UACrC,aAAa;AAAA,UACb;AAAA,QACF,CAAC;AAAA,MACH,CAAC,OAAgB,qBAAAA,KAAK,uBAAuB,CAAC,CAAC,CAAC;AAAA,IAClD,CAAC,CAAC;AAAA,EACJ,CAAC;AACH,CAAC;AAQM,IAAME,eAAiC,aAAK,cAAc;AACjE,eAAe,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQzB,QAAQ,mBAAAC,QAAU,MAAM;AAAA,IACtB,SAAS,mBAAAA,QAAU,OAAO;AAAA,EAC5B,CAAC;AAAA;AAAA;AAAA;AAAA,EAID,cAAc,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIxB,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7B,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,cAAc,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxB,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI3B,iBAAiB,mBAAAA,QAAU,MAAM;AAAA,IAC/B,SAAS,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC3C,QAAQ,mBAAAA,QAAU;AAAA,IAClB,gBAAgB,mBAAAA,QAAU;AAAA,IAC1B,iBAAiB,mBAAAA,QAAU;AAAA,IAC3B,gBAAgB,mBAAAA,QAAU;AAAA,EAC5B,CAAC;AAAA;AAAA;AAAA;AAAA,EAID,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1B,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7B,8BAA8B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIxC,SAAS,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,4BAA4B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtC,gBAAgB,mBAAAA,QAAU;AAAA,EAC1B,qBAAqB,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvD,oBAAoB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI9B,SAAS,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7C,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC,+BAA+B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzC,SAAS,mBAAAA,QAAU,MAAM,CAAC,eAAe,WAAW,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA,EAI/D,2BAA2B,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC,EAAE,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjH,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3B,0BAA0B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpC,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/B,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7B,sBAAsB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhC,sBAAsB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhC,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/B,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,sBAAsB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhC,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,aAAa,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvB,iCAAiC,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,+BAA+B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzC,6BAA6B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvC,4BAA4B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtC,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,UAAU,mBAAAA,QAAU,MAAM,CAAC,QAAQ,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzC,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7B,sBAAsB,mBAAAA,QAAU,MAAM;AAAA,IACpC,6BAA6B,mBAAAA,QAAU;AAAA,EACzC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B,YAAY,mBAAAA,QAAU,MAAM,CAAC,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA,EAIhD,aAAa,mBAAAA,QAAU,MAAM;AAAA,IAC3B,OAAO,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,MACvC,OAAO,mBAAAA,QAAU,OAAO;AAAA,MACxB,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC;AAAA,MAC5D,UAAU,mBAAAA,QAAU,OAAO;AAAA,MAC3B,OAAO,mBAAAA,QAAU;AAAA,IACnB,CAAC,CAAC,EAAE;AAAA,IACJ,eAAe,mBAAAA,QAAU,MAAM,CAAC,OAAO,IAAI,CAAC;AAAA,IAC5C,iCAAiC,mBAAAA,QAAU;AAAA,IAC3C,0BAA0B,mBAAAA,QAAU,MAAM,CAAC,OAAO,IAAI,CAAC;AAAA,IACvD,mBAAmB,mBAAAA,QAAU;AAAA,EAC/B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjC,sBAAsB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhC,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,cAAc,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIxB,UAAU,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASzB,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAI3B,gBAAgB,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,MAAM,mBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,EAItE,oBAAoB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK9B,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,sBAAsB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,oBAAoB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK9B,4BAA4B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtC,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B,kCAAkC,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,MAAM;AAAA,IACrE,iBAAiB,mBAAAA,QAAU;AAAA,IAC3B,WAAW,mBAAAA,QAAU;AAAA,EACvB,CAAC,GAAG,mBAAAA,QAAU,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnB,cAAc,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO1B,0BAA0B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpC,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,oCAAoC,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9C,6BAA6B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIvC,SAAS,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IACtB,OAAO,mBAAAA,QAAU,KAAK;AAAA,IACtB,OAAO,mBAAAA,QAAU,KAAK;AAAA,IACtB,MAAM,mBAAAA,QAAU,KAAK;AAAA,IACrB,MAAM,mBAAAA,QAAU,KAAK;AAAA,EACvB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,UAAU,mBAAAA,QAAU,MAAM,CAAC,SAAS,SAAS,QAAQ,QAAQ,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA,EAInE,OAAO,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjB,aAAa,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvB,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7B,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO1B,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO3B,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,2BAA2B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOrC,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO7B,oBAAoB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9B,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,+BAA+B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzC,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/B,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,mCAAmC,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO7C,aAAa,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvB,qBAAqB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,aAAa,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvB,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,yBAAyB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnC,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjC,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlC,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,yBAAyB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnC,UAAU,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpB,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB,uBAAuB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjC,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B,2BAA2B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOrC,iBAAiB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,mBAAmB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ7B,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,iBAAiB,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IACxF,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,OAAO,mBAAAA,QAAU,OAAO;AAAA,EAC1B,CAAC,CAAC,CAAC,EAAE,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKf,YAAY,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,gBAAgB,mBAAAA,QAAU,MAAM;AAAA,IAC9B,aAAa,mBAAAA,QAAU;AAAA,EACzB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB,mBAAAA,QAAU,MAAM,CAAC,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA,EAIpD,iBAAiB,mBAAAA,QAAU,MAAM;AAAA,IAC/B,MAAM,mBAAAA,QAAU,OAAO;AAAA,IACvB,UAAU,mBAAAA,QAAU,OAAO;AAAA,EAC7B,CAAC;AAAA;AAAA;AAAA;AAAA,EAID,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIzB,YAAY,mBAAAA,QAAU,MAAM;AAAA,IAC1B,QAAQ,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC1C,KAAK,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,EACzC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5B,kBAAkB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5B,aAAa,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvB,UAAU,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpB,WAAW,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIrB,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzB,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,MAAM,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxC,cAAc,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIxB,mBAAmB,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC,EAAE,UAAU,GAAG,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpK,iBAAiB,mBAAAA,QAAU,MAAM,CAAC,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrD,gBAAgB,mBAAAA,QAAU,MAAM,CAAC,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA,EAIpD,eAAe,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,oBAAoB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK9B,wBAAwB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,0BAA0B,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpC,WAAW,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIrB,OAAO,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjB,aAAa,mBAAAA,QAAU,MAAM,CAAC,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjD,cAAc,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIhE,WAAW,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,MAAM;AAAA,IAC3C,OAAO,mBAAAA,QAAU,OAAO;AAAA,IACxB,MAAM,mBAAAA,QAAU,MAAM,CAAC,OAAO,MAAM,CAAC;AAAA,EACvC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIF,IAAI,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,MAAM,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,IAAI,CAAC,CAAC,GAAG,mBAAAA,QAAU,MAAM,mBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtJ,gBAAgB,mBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1B,UAAU,mBAAAA,QAAU;AACtB;;;AoDp4BO,IAAMC,iBAAgB;;;ACKtB,IAAMC,eAAN,cAA0B,YAAkB;AAAC;",
  "names": ["i", "LICENSE_STATUS", "releaseInfo", "React", "releaseInfo", "React", "releaseInfo", "_jsx", "React", "import_jsx_runtime", "React", "import_prop_types", "React", "React", "import_jsx_runtime", "styled_default", "_jsx", "React", "React", "React", "i", "React", "useGridRootProps", "useGridApiContext", "import_jsx_runtime", "useUtilityClasses", "useGridRootProps", "useGridApiContext", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "useGridApiContext", "useGridRootProps", "side", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "useUtilityClasses", "useGridRootProps", "useGridApiContext", "_jsx", "PropTypes", "React", "init_utils", "import_jsx_runtime", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "React", "import_jsx_runtime", "sx", "useGridRootProps", "_jsx", "import_jsx_runtime", "_excluded", "useUtilityClasses", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsx", "i", "PropTypes", "i", "i", "i", "i", "import_jsx_runtime", "_excluded", "_jsx", "React", "_a", "i", "React", "i", "React", "React", "import_jsx_runtime", "_jsx", "React", "React", "React", "import_jsx_runtime", "useUtilityClasses", "useGridRootProps", "_jsxs", "_jsx", "_jsx", "Direction", "useUtilityClasses", "React", "useUtilityClasses", "React", "React", "i", "React", "React", "React", "React", "import_jsx_runtime", "GridProColumnMenu", "_jsx", "React", "import_prop_types", "React", "import_jsx_runtime", "_excluded", "useUtilityClasses", "useGridColumnHeaders", "useGridRootProps", "i", "_jsx", "_jsxs", "import_jsx_runtime", "_excluded", "GridColumnHeaders", "useGridColumnHeaders", "_jsxs", "_jsx", "PropTypes", "React", "useGridPrivateApiContext", "React", "import_jsx_runtime", "useGridPrivateApiContext", "useGridRootProps", "_jsx", "import_jsx_runtime", "useUtilityClasses", "useGridRootProps", "useGridPrivateApiContext", "_jsx", "React", "import_jsx_runtime", "useUtilityClasses", "_jsx", "releaseInfo", "import_jsx_runtime", "_jsx", "_jsxs", "DataGridPro", "PropTypes", "useGridApiRef", "LicenseInfo"]
}
